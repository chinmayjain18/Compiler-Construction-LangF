val (* test093.lgf:3.0-test093.lgf:3.3 *)
(* VAR_NAME *) x (* test093.lgf:3.4-test093.lgf:3.5 *)
= (* test093.lgf:3.6-test093.lgf:3.7 *)
(* INTEGER *) 3 (* test093.lgf:3.8-test093.lgf:3.9 *)
fun (* test093.lgf:7.0-test093.lgf:7.3 *)
(* VAR_NAME *) add (* test093.lgf:7.4-test093.lgf:7.7 *)
( (* test093.lgf:7.8-test093.lgf:7.9 *)
(* VAR_NAME *) x (* test093.lgf:7.9-test093.lgf:7.10 *)
: (* test093.lgf:7.10-test093.lgf:7.11 *)
(* CON_NAME *) Integer (* test093.lgf:7.12-test093.lgf:7.19 *)
) (* test093.lgf:7.19-test093.lgf:7.20 *)
( (* test093.lgf:7.21-test093.lgf:7.22 *)
(* VAR_NAME *) y (* test093.lgf:7.22-test093.lgf:7.23 *)
: (* test093.lgf:7.23-test093.lgf:7.24 *)
(* CON_NAME *) Integer (* test093.lgf:7.25-test093.lgf:7.32 *)
) (* test093.lgf:7.32-test093.lgf:7.33 *)
= (* test093.lgf:7.34-test093.lgf:7.35 *)
(* VAR_NAME *) x (* test093.lgf:7.36-test093.lgf:7.37 *)
+ (* test093.lgf:7.38-test093.lgf:7.39 *)
(* VAR_NAME *) y (* test093.lgf:7.40-test093.lgf:7.41 *)
; (* test093.lgf:9.0-test093.lgf:9.1 *)
(* VAR_NAME *) add (* test093.lgf:11.0-test093.lgf:11.3 *)
(* INTEGER *) 1 (* test093.lgf:11.4-test093.lgf:11.5 *)
(* INTEGER *) 2 (* test093.lgf:11.6-test093.lgf:11.7 *)
