fun (* test106.lgf:3.0-test106.lgf:3.3 *)
(* VAR_NAME *) intToString (* test106.lgf:3.4-test106.lgf:3.15 *)
( (* test106.lgf:3.16-test106.lgf:3.17 *)
(* VAR_NAME *) i (* test106.lgf:3.17-test106.lgf:3.18 *)
: (* test106.lgf:3.18-test106.lgf:3.19 *)
(* CON_NAME *) Integer (* test106.lgf:3.19-test106.lgf:3.26 *)
) (* test106.lgf:3.26-test106.lgf:3.27 *)
: (* test106.lgf:3.28-test106.lgf:3.29 *)
(* CON_NAME *) String (* test106.lgf:3.30-test106.lgf:3.36 *)
= (* test106.lgf:3.37-test106.lgf:3.38 *)
if (* test106.lgf:4.3-test106.lgf:4.5 *)
(* VAR_NAME *) i (* test106.lgf:4.6-test106.lgf:4.7 *)
< (* test106.lgf:4.8-test106.lgf:4.9 *)
(* INTEGER *) 0 (* test106.lgf:4.10-test106.lgf:4.11 *)
then (* test106.lgf:4.12-test106.lgf:4.16 *)
(* STRING *) "~" (* test106.lgf:4.17-test106.lgf:4.20 *)
^ (* test106.lgf:4.21-test106.lgf:4.22 *)
( (* test106.lgf:4.23-test106.lgf:4.24 *)
(* VAR_NAME *) intToString (* test106.lgf:4.24-test106.lgf:4.35 *)
( (* test106.lgf:4.36-test106.lgf:4.37 *)
~ (* test106.lgf:4.37-test106.lgf:4.38 *)
(* VAR_NAME *) i (* test106.lgf:4.38-test106.lgf:4.39 *)
) (* test106.lgf:4.39-test106.lgf:4.40 *)
) (* test106.lgf:4.40-test106.lgf:4.41 *)
else (* test106.lgf:5.3-test106.lgf:5.7 *)
if (* test106.lgf:5.8-test106.lgf:5.10 *)
(* VAR_NAME *) i (* test106.lgf:5.11-test106.lgf:5.12 *)
== (* test106.lgf:5.13-test106.lgf:5.15 *)
(* INTEGER *) 0 (* test106.lgf:5.16-test106.lgf:5.17 *)
then (* test106.lgf:5.18-test106.lgf:5.22 *)
(* STRING *) "0" (* test106.lgf:5.23-test106.lgf:5.26 *)
else (* test106.lgf:6.3-test106.lgf:6.7 *)
if (* test106.lgf:6.8-test106.lgf:6.10 *)
(* VAR_NAME *) i (* test106.lgf:6.11-test106.lgf:6.12 *)
== (* test106.lgf:6.13-test106.lgf:6.15 *)
(* INTEGER *) 1 (* test106.lgf:6.16-test106.lgf:6.17 *)
then (* test106.lgf:6.18-test106.lgf:6.22 *)
(* STRING *) "1" (* test106.lgf:6.23-test106.lgf:6.26 *)
else (* test106.lgf:7.3-test106.lgf:7.7 *)
if (* test106.lgf:7.8-test106.lgf:7.10 *)
(* VAR_NAME *) i (* test106.lgf:7.11-test106.lgf:7.12 *)
== (* test106.lgf:7.13-test106.lgf:7.15 *)
(* INTEGER *) 2 (* test106.lgf:7.16-test106.lgf:7.17 *)
then (* test106.lgf:7.18-test106.lgf:7.22 *)
(* STRING *) "2" (* test106.lgf:7.23-test106.lgf:7.26 *)
else (* test106.lgf:8.3-test106.lgf:8.7 *)
if (* test106.lgf:8.8-test106.lgf:8.10 *)
(* VAR_NAME *) i (* test106.lgf:8.11-test106.lgf:8.12 *)
== (* test106.lgf:8.13-test106.lgf:8.15 *)
(* INTEGER *) 3 (* test106.lgf:8.16-test106.lgf:8.17 *)
then (* test106.lgf:8.18-test106.lgf:8.22 *)
(* STRING *) "3" (* test106.lgf:8.23-test106.lgf:8.26 *)
else (* test106.lgf:9.3-test106.lgf:9.7 *)
if (* test106.lgf:9.8-test106.lgf:9.10 *)
(* VAR_NAME *) i (* test106.lgf:9.11-test106.lgf:9.12 *)
== (* test106.lgf:9.13-test106.lgf:9.15 *)
(* INTEGER *) 4 (* test106.lgf:9.16-test106.lgf:9.17 *)
then (* test106.lgf:9.18-test106.lgf:9.22 *)
(* STRING *) "4" (* test106.lgf:9.23-test106.lgf:9.26 *)
else (* test106.lgf:10.3-test106.lgf:10.7 *)
if (* test106.lgf:10.8-test106.lgf:10.10 *)
(* VAR_NAME *) i (* test106.lgf:10.11-test106.lgf:10.12 *)
== (* test106.lgf:10.13-test106.lgf:10.15 *)
(* INTEGER *) 5 (* test106.lgf:10.16-test106.lgf:10.17 *)
then (* test106.lgf:10.18-test106.lgf:10.22 *)
(* STRING *) "5" (* test106.lgf:10.23-test106.lgf:10.26 *)
else (* test106.lgf:11.3-test106.lgf:11.7 *)
if (* test106.lgf:11.8-test106.lgf:11.10 *)
(* VAR_NAME *) i (* test106.lgf:11.11-test106.lgf:11.12 *)
== (* test106.lgf:11.13-test106.lgf:11.15 *)
(* INTEGER *) 6 (* test106.lgf:11.16-test106.lgf:11.17 *)
then (* test106.lgf:11.18-test106.lgf:11.22 *)
(* STRING *) "6" (* test106.lgf:11.23-test106.lgf:11.26 *)
else (* test106.lgf:12.3-test106.lgf:12.7 *)
if (* test106.lgf:12.8-test106.lgf:12.10 *)
(* VAR_NAME *) i (* test106.lgf:12.11-test106.lgf:12.12 *)
== (* test106.lgf:12.13-test106.lgf:12.15 *)
(* INTEGER *) 7 (* test106.lgf:12.16-test106.lgf:12.17 *)
then (* test106.lgf:12.18-test106.lgf:12.22 *)
(* STRING *) "7" (* test106.lgf:12.23-test106.lgf:12.26 *)
else (* test106.lgf:13.3-test106.lgf:13.7 *)
if (* test106.lgf:13.8-test106.lgf:13.10 *)
(* VAR_NAME *) i (* test106.lgf:13.11-test106.lgf:13.12 *)
== (* test106.lgf:13.13-test106.lgf:13.15 *)
(* INTEGER *) 8 (* test106.lgf:13.16-test106.lgf:13.17 *)
then (* test106.lgf:13.18-test106.lgf:13.22 *)
(* STRING *) "8" (* test106.lgf:13.23-test106.lgf:13.26 *)
else (* test106.lgf:14.3-test106.lgf:14.7 *)
if (* test106.lgf:14.8-test106.lgf:14.10 *)
(* VAR_NAME *) i (* test106.lgf:14.11-test106.lgf:14.12 *)
== (* test106.lgf:14.13-test106.lgf:14.15 *)
(* INTEGER *) 9 (* test106.lgf:14.16-test106.lgf:14.17 *)
then (* test106.lgf:14.18-test106.lgf:14.22 *)
(* STRING *) "9" (* test106.lgf:14.23-test106.lgf:14.26 *)
else (* test106.lgf:15.3-test106.lgf:15.7 *)
( (* test106.lgf:15.8-test106.lgf:15.9 *)
(* VAR_NAME *) intToString (* test106.lgf:15.9-test106.lgf:15.20 *)
( (* test106.lgf:15.21-test106.lgf:15.22 *)
(* VAR_NAME *) i (* test106.lgf:15.22-test106.lgf:15.23 *)
/ (* test106.lgf:15.24-test106.lgf:15.25 *)
(* INTEGER *) 10 (* test106.lgf:15.26-test106.lgf:15.28 *)
) (* test106.lgf:15.28-test106.lgf:15.29 *)
) (* test106.lgf:15.29-test106.lgf:15.30 *)
^ (* test106.lgf:15.31-test106.lgf:15.32 *)
( (* test106.lgf:15.33-test106.lgf:15.34 *)
(* VAR_NAME *) intToString (* test106.lgf:15.34-test106.lgf:15.45 *)
( (* test106.lgf:15.46-test106.lgf:15.47 *)
(* VAR_NAME *) i (* test106.lgf:15.47-test106.lgf:15.48 *)
% (* test106.lgf:15.49-test106.lgf:15.50 *)
(* INTEGER *) 10 (* test106.lgf:15.51-test106.lgf:15.53 *)
) (* test106.lgf:15.53-test106.lgf:15.54 *)
) (* test106.lgf:15.54-test106.lgf:15.55 *)
fun (* test106.lgf:17.0-test106.lgf:17.3 *)
(* VAR_NAME *) fib (* test106.lgf:17.4-test106.lgf:17.7 *)
( (* test106.lgf:17.8-test106.lgf:17.9 *)
(* VAR_NAME *) n (* test106.lgf:17.9-test106.lgf:17.10 *)
: (* test106.lgf:17.10-test106.lgf:17.11 *)
(* CON_NAME *) Integer (* test106.lgf:17.11-test106.lgf:17.18 *)
) (* test106.lgf:17.18-test106.lgf:17.19 *)
: (* test106.lgf:17.20-test106.lgf:17.21 *)
(* CON_NAME *) Integer (* test106.lgf:17.22-test106.lgf:17.29 *)
= (* test106.lgf:17.30-test106.lgf:17.31 *)
if (* test106.lgf:18.3-test106.lgf:18.5 *)
(* VAR_NAME *) n (* test106.lgf:18.6-test106.lgf:18.7 *)
<= (* test106.lgf:18.8-test106.lgf:18.10 *)
(* INTEGER *) 1 (* test106.lgf:18.11-test106.lgf:18.12 *)
then (* test106.lgf:18.13-test106.lgf:18.17 *)
(* INTEGER *) 1 (* test106.lgf:18.18-test106.lgf:18.19 *)
else (* test106.lgf:18.20-test106.lgf:18.24 *)
(* VAR_NAME *) fib (* test106.lgf:18.25-test106.lgf:18.28 *)
( (* test106.lgf:18.29-test106.lgf:18.30 *)
(* VAR_NAME *) n (* test106.lgf:18.30-test106.lgf:18.31 *)
- (* test106.lgf:18.32-test106.lgf:18.33 *)
(* INTEGER *) 1 (* test106.lgf:18.34-test106.lgf:18.35 *)
) (* test106.lgf:18.35-test106.lgf:18.36 *)
+ (* test106.lgf:18.37-test106.lgf:18.38 *)
(* VAR_NAME *) fib (* test106.lgf:18.39-test106.lgf:18.42 *)
( (* test106.lgf:18.43-test106.lgf:18.44 *)
(* VAR_NAME *) n (* test106.lgf:18.44-test106.lgf:18.45 *)
- (* test106.lgf:18.46-test106.lgf:18.47 *)
(* INTEGER *) 2 (* test106.lgf:18.48-test106.lgf:18.49 *)
) (* test106.lgf:18.49-test106.lgf:18.50 *)
val (* test106.lgf:20.0-test106.lgf:20.3 *)
(* VAR_NAME *) n (* test106.lgf:20.4-test106.lgf:20.5 *)
= (* test106.lgf:20.6-test106.lgf:20.7 *)
(* INTEGER *) 20 (* test106.lgf:20.8-test106.lgf:20.10 *)
val (* test106.lgf:21.0-test106.lgf:21.3 *)
(* VAR_NAME *) fib_n (* test106.lgf:21.4-test106.lgf:21.9 *)
= (* test106.lgf:21.10-test106.lgf:21.11 *)
(* VAR_NAME *) fib (* test106.lgf:21.12-test106.lgf:21.15 *)
(* VAR_NAME *) n (* test106.lgf:21.16-test106.lgf:21.17 *)
; (* test106.lgf:23.0-test106.lgf:23.1 *)
( (* test106.lgf:25.0-test106.lgf:25.1 *)
(* VAR_NAME *) print (* test106.lgf:25.1-test106.lgf:25.6 *)
(* STRING *) "fib " (* test106.lgf:25.7-test106.lgf:25.13 *)
; (* test106.lgf:25.13-test106.lgf:25.14 *)
(* VAR_NAME *) print (* test106.lgf:26.1-test106.lgf:26.6 *)
( (* test106.lgf:26.7-test106.lgf:26.8 *)
(* VAR_NAME *) intToString (* test106.lgf:26.8-test106.lgf:26.19 *)
(* VAR_NAME *) n (* test106.lgf:26.20-test106.lgf:26.21 *)
) (* test106.lgf:26.21-test106.lgf:26.22 *)
; (* test106.lgf:26.22-test106.lgf:26.23 *)
(* VAR_NAME *) print (* test106.lgf:27.1-test106.lgf:27.6 *)
(* STRING *) " = " (* test106.lgf:27.7-test106.lgf:27.12 *)
; (* test106.lgf:27.12-test106.lgf:27.13 *)
(* VAR_NAME *) print (* test106.lgf:28.1-test106.lgf:28.6 *)
( (* test106.lgf:28.7-test106.lgf:28.8 *)
(* VAR_NAME *) intToString (* test106.lgf:28.8-test106.lgf:28.19 *)
(* VAR_NAME *) fib_n (* test106.lgf:28.20-test106.lgf:28.25 *)
) (* test106.lgf:28.25-test106.lgf:28.26 *)
; (* test106.lgf:28.26-test106.lgf:28.27 *)
(* VAR_NAME *) print (* test106.lgf:29.1-test106.lgf:29.6 *)
(* STRING *) "\n" (* test106.lgf:29.7-test106.lgf:29.11 *)
) (* test106.lgf:29.11-test106.lgf:29.12 *)
