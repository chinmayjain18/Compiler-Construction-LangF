fun (* test108.lgf:3.0-test108.lgf:3.3 *)
(* VAR_NAME *) intToString (* test108.lgf:3.4-test108.lgf:3.15 *)
( (* test108.lgf:3.16-test108.lgf:3.17 *)
(* VAR_NAME *) i (* test108.lgf:3.17-test108.lgf:3.18 *)
: (* test108.lgf:3.18-test108.lgf:3.19 *)
(* CON_NAME *) Integer (* test108.lgf:3.19-test108.lgf:3.26 *)
) (* test108.lgf:3.26-test108.lgf:3.27 *)
: (* test108.lgf:3.28-test108.lgf:3.29 *)
(* CON_NAME *) String (* test108.lgf:3.30-test108.lgf:3.36 *)
= (* test108.lgf:3.37-test108.lgf:3.38 *)
if (* test108.lgf:4.3-test108.lgf:4.5 *)
(* VAR_NAME *) i (* test108.lgf:4.6-test108.lgf:4.7 *)
< (* test108.lgf:4.8-test108.lgf:4.9 *)
(* INTEGER *) 0 (* test108.lgf:4.10-test108.lgf:4.11 *)
then (* test108.lgf:4.12-test108.lgf:4.16 *)
(* STRING *) "~" (* test108.lgf:4.17-test108.lgf:4.20 *)
^ (* test108.lgf:4.21-test108.lgf:4.22 *)
( (* test108.lgf:4.23-test108.lgf:4.24 *)
(* VAR_NAME *) intToString (* test108.lgf:4.24-test108.lgf:4.35 *)
( (* test108.lgf:4.36-test108.lgf:4.37 *)
~ (* test108.lgf:4.37-test108.lgf:4.38 *)
(* VAR_NAME *) i (* test108.lgf:4.38-test108.lgf:4.39 *)
) (* test108.lgf:4.39-test108.lgf:4.40 *)
) (* test108.lgf:4.40-test108.lgf:4.41 *)
else (* test108.lgf:5.3-test108.lgf:5.7 *)
if (* test108.lgf:5.8-test108.lgf:5.10 *)
(* VAR_NAME *) i (* test108.lgf:5.11-test108.lgf:5.12 *)
== (* test108.lgf:5.13-test108.lgf:5.15 *)
(* INTEGER *) 0 (* test108.lgf:5.16-test108.lgf:5.17 *)
then (* test108.lgf:5.18-test108.lgf:5.22 *)
(* STRING *) "0" (* test108.lgf:5.23-test108.lgf:5.26 *)
else (* test108.lgf:6.3-test108.lgf:6.7 *)
if (* test108.lgf:6.8-test108.lgf:6.10 *)
(* VAR_NAME *) i (* test108.lgf:6.11-test108.lgf:6.12 *)
== (* test108.lgf:6.13-test108.lgf:6.15 *)
(* INTEGER *) 1 (* test108.lgf:6.16-test108.lgf:6.17 *)
then (* test108.lgf:6.18-test108.lgf:6.22 *)
(* STRING *) "1" (* test108.lgf:6.23-test108.lgf:6.26 *)
else (* test108.lgf:7.3-test108.lgf:7.7 *)
if (* test108.lgf:7.8-test108.lgf:7.10 *)
(* VAR_NAME *) i (* test108.lgf:7.11-test108.lgf:7.12 *)
== (* test108.lgf:7.13-test108.lgf:7.15 *)
(* INTEGER *) 2 (* test108.lgf:7.16-test108.lgf:7.17 *)
then (* test108.lgf:7.18-test108.lgf:7.22 *)
(* STRING *) "2" (* test108.lgf:7.23-test108.lgf:7.26 *)
else (* test108.lgf:8.3-test108.lgf:8.7 *)
if (* test108.lgf:8.8-test108.lgf:8.10 *)
(* VAR_NAME *) i (* test108.lgf:8.11-test108.lgf:8.12 *)
== (* test108.lgf:8.13-test108.lgf:8.15 *)
(* INTEGER *) 3 (* test108.lgf:8.16-test108.lgf:8.17 *)
then (* test108.lgf:8.18-test108.lgf:8.22 *)
(* STRING *) "3" (* test108.lgf:8.23-test108.lgf:8.26 *)
else (* test108.lgf:9.3-test108.lgf:9.7 *)
if (* test108.lgf:9.8-test108.lgf:9.10 *)
(* VAR_NAME *) i (* test108.lgf:9.11-test108.lgf:9.12 *)
== (* test108.lgf:9.13-test108.lgf:9.15 *)
(* INTEGER *) 4 (* test108.lgf:9.16-test108.lgf:9.17 *)
then (* test108.lgf:9.18-test108.lgf:9.22 *)
(* STRING *) "4" (* test108.lgf:9.23-test108.lgf:9.26 *)
else (* test108.lgf:10.3-test108.lgf:10.7 *)
if (* test108.lgf:10.8-test108.lgf:10.10 *)
(* VAR_NAME *) i (* test108.lgf:10.11-test108.lgf:10.12 *)
== (* test108.lgf:10.13-test108.lgf:10.15 *)
(* INTEGER *) 5 (* test108.lgf:10.16-test108.lgf:10.17 *)
then (* test108.lgf:10.18-test108.lgf:10.22 *)
(* STRING *) "5" (* test108.lgf:10.23-test108.lgf:10.26 *)
else (* test108.lgf:11.3-test108.lgf:11.7 *)
if (* test108.lgf:11.8-test108.lgf:11.10 *)
(* VAR_NAME *) i (* test108.lgf:11.11-test108.lgf:11.12 *)
== (* test108.lgf:11.13-test108.lgf:11.15 *)
(* INTEGER *) 6 (* test108.lgf:11.16-test108.lgf:11.17 *)
then (* test108.lgf:11.18-test108.lgf:11.22 *)
(* STRING *) "6" (* test108.lgf:11.23-test108.lgf:11.26 *)
else (* test108.lgf:12.3-test108.lgf:12.7 *)
if (* test108.lgf:12.8-test108.lgf:12.10 *)
(* VAR_NAME *) i (* test108.lgf:12.11-test108.lgf:12.12 *)
== (* test108.lgf:12.13-test108.lgf:12.15 *)
(* INTEGER *) 7 (* test108.lgf:12.16-test108.lgf:12.17 *)
then (* test108.lgf:12.18-test108.lgf:12.22 *)
(* STRING *) "7" (* test108.lgf:12.23-test108.lgf:12.26 *)
else (* test108.lgf:13.3-test108.lgf:13.7 *)
if (* test108.lgf:13.8-test108.lgf:13.10 *)
(* VAR_NAME *) i (* test108.lgf:13.11-test108.lgf:13.12 *)
== (* test108.lgf:13.13-test108.lgf:13.15 *)
(* INTEGER *) 8 (* test108.lgf:13.16-test108.lgf:13.17 *)
then (* test108.lgf:13.18-test108.lgf:13.22 *)
(* STRING *) "8" (* test108.lgf:13.23-test108.lgf:13.26 *)
else (* test108.lgf:14.3-test108.lgf:14.7 *)
if (* test108.lgf:14.8-test108.lgf:14.10 *)
(* VAR_NAME *) i (* test108.lgf:14.11-test108.lgf:14.12 *)
== (* test108.lgf:14.13-test108.lgf:14.15 *)
(* INTEGER *) 9 (* test108.lgf:14.16-test108.lgf:14.17 *)
then (* test108.lgf:14.18-test108.lgf:14.22 *)
(* STRING *) "9" (* test108.lgf:14.23-test108.lgf:14.26 *)
else (* test108.lgf:15.3-test108.lgf:15.7 *)
( (* test108.lgf:15.8-test108.lgf:15.9 *)
(* VAR_NAME *) intToString (* test108.lgf:15.9-test108.lgf:15.20 *)
( (* test108.lgf:15.21-test108.lgf:15.22 *)
(* VAR_NAME *) i (* test108.lgf:15.22-test108.lgf:15.23 *)
/ (* test108.lgf:15.24-test108.lgf:15.25 *)
(* INTEGER *) 10 (* test108.lgf:15.26-test108.lgf:15.28 *)
) (* test108.lgf:15.28-test108.lgf:15.29 *)
) (* test108.lgf:15.29-test108.lgf:15.30 *)
^ (* test108.lgf:15.31-test108.lgf:15.32 *)
( (* test108.lgf:15.33-test108.lgf:15.34 *)
(* VAR_NAME *) intToString (* test108.lgf:15.34-test108.lgf:15.45 *)
( (* test108.lgf:15.46-test108.lgf:15.47 *)
(* VAR_NAME *) i (* test108.lgf:15.47-test108.lgf:15.48 *)
% (* test108.lgf:15.49-test108.lgf:15.50 *)
(* INTEGER *) 10 (* test108.lgf:15.51-test108.lgf:15.53 *)
) (* test108.lgf:15.53-test108.lgf:15.54 *)
) (* test108.lgf:15.54-test108.lgf:15.55 *)
type (* test108.lgf:18.0-test108.lgf:18.4 *)
(* CON_NAME *) Y (* test108.lgf:18.5-test108.lgf:18.6 *)
[ (* test108.lgf:18.7-test108.lgf:18.8 *)
(* TYVAR_NAME *) 'a (* test108.lgf:18.8-test108.lgf:18.10 *)
] (* test108.lgf:18.10-test108.lgf:18.11 *)
= (* test108.lgf:18.12-test108.lgf:18.13 *)
(* CON_NAME *) Unit (* test108.lgf:18.14-test108.lgf:18.18 *)
-> (* test108.lgf:18.19-test108.lgf:18.21 *)
(* TYVAR_NAME *) 'a (* test108.lgf:18.22-test108.lgf:18.24 *)
fun (* test108.lgf:19.0-test108.lgf:19.3 *)
(* VAR_NAME *) y (* test108.lgf:19.4-test108.lgf:19.5 *)
[ (* test108.lgf:19.6-test108.lgf:19.7 *)
(* TYVAR_NAME *) 'a (* test108.lgf:19.7-test108.lgf:19.9 *)
] (* test108.lgf:19.9-test108.lgf:19.10 *)
( (* test108.lgf:19.11-test108.lgf:19.12 *)
(* VAR_NAME *) f (* test108.lgf:19.12-test108.lgf:19.13 *)
: (* test108.lgf:19.13-test108.lgf:19.14 *)
(* CON_NAME *) Y (* test108.lgf:19.15-test108.lgf:19.16 *)
[ (* test108.lgf:19.17-test108.lgf:19.18 *)
(* TYVAR_NAME *) 'a (* test108.lgf:19.18-test108.lgf:19.20 *)
] (* test108.lgf:19.20-test108.lgf:19.21 *)
-> (* test108.lgf:19.22-test108.lgf:19.24 *)
(* CON_NAME *) Y (* test108.lgf:19.25-test108.lgf:19.26 *)
[ (* test108.lgf:19.27-test108.lgf:19.28 *)
(* TYVAR_NAME *) 'a (* test108.lgf:19.28-test108.lgf:19.30 *)
] (* test108.lgf:19.30-test108.lgf:19.31 *)
) (* test108.lgf:19.31-test108.lgf:19.32 *)
: (* test108.lgf:19.33-test108.lgf:19.34 *)
(* CON_NAME *) Y (* test108.lgf:19.35-test108.lgf:19.36 *)
[ (* test108.lgf:19.37-test108.lgf:19.38 *)
(* TYVAR_NAME *) 'a (* test108.lgf:19.38-test108.lgf:19.40 *)
] (* test108.lgf:19.40-test108.lgf:19.41 *)
= (* test108.lgf:19.42-test108.lgf:19.43 *)
(* VAR_NAME *) f (* test108.lgf:20.3-test108.lgf:20.4 *)
( (* test108.lgf:20.5-test108.lgf:20.6 *)
fn (* test108.lgf:20.6-test108.lgf:20.8 *)
( (* test108.lgf:20.9-test108.lgf:20.10 *)
(* VAR_NAME *) z (* test108.lgf:20.10-test108.lgf:20.11 *)
: (* test108.lgf:20.12-test108.lgf:20.13 *)
(* CON_NAME *) Unit (* test108.lgf:20.14-test108.lgf:20.18 *)
) (* test108.lgf:20.18-test108.lgf:20.19 *)
=> (* test108.lgf:20.20-test108.lgf:20.22 *)
(* VAR_NAME *) y (* test108.lgf:20.23-test108.lgf:20.24 *)
[ (* test108.lgf:20.25-test108.lgf:20.26 *)
(* TYVAR_NAME *) 'a (* test108.lgf:20.26-test108.lgf:20.28 *)
] (* test108.lgf:20.28-test108.lgf:20.29 *)
(* VAR_NAME *) f (* test108.lgf:20.30-test108.lgf:20.31 *)
(* VAR_NAME *) z (* test108.lgf:20.32-test108.lgf:20.33 *)
) (* test108.lgf:20.33-test108.lgf:20.34 *)
val (* test108.lgf:22.0-test108.lgf:22.3 *)
(* VAR_NAME *) fibY (* test108.lgf:22.4-test108.lgf:22.8 *)
= (* test108.lgf:22.9-test108.lgf:22.10 *)
fn (* test108.lgf:22.11-test108.lgf:22.13 *)
( (* test108.lgf:22.14-test108.lgf:22.15 *)
(* VAR_NAME *) fib (* test108.lgf:22.15-test108.lgf:22.18 *)
: (* test108.lgf:22.18-test108.lgf:22.19 *)
(* CON_NAME *) Y (* test108.lgf:22.20-test108.lgf:22.21 *)
[ (* test108.lgf:22.22-test108.lgf:22.23 *)
(* CON_NAME *) Integer (* test108.lgf:22.23-test108.lgf:22.30 *)
-> (* test108.lgf:22.31-test108.lgf:22.33 *)
(* CON_NAME *) Integer (* test108.lgf:22.34-test108.lgf:22.41 *)
] (* test108.lgf:22.41-test108.lgf:22.42 *)
) (* test108.lgf:22.42-test108.lgf:22.43 *)
( (* test108.lgf:22.44-test108.lgf:22.45 *)
(* VAR_NAME *) z (* test108.lgf:22.45-test108.lgf:22.46 *)
: (* test108.lgf:22.46-test108.lgf:22.47 *)
(* CON_NAME *) Unit (* test108.lgf:22.48-test108.lgf:22.52 *)
) (* test108.lgf:22.52-test108.lgf:22.53 *)
( (* test108.lgf:22.54-test108.lgf:22.55 *)
(* VAR_NAME *) n (* test108.lgf:22.55-test108.lgf:22.56 *)
: (* test108.lgf:22.56-test108.lgf:22.57 *)
(* CON_NAME *) Integer (* test108.lgf:22.58-test108.lgf:22.65 *)
) (* test108.lgf:22.65-test108.lgf:22.66 *)
=> (* test108.lgf:22.67-test108.lgf:22.69 *)
if (* test108.lgf:23.3-test108.lgf:23.5 *)
(* VAR_NAME *) n (* test108.lgf:23.6-test108.lgf:23.7 *)
<= (* test108.lgf:23.8-test108.lgf:23.10 *)
(* INTEGER *) 1 (* test108.lgf:23.11-test108.lgf:23.12 *)
then (* test108.lgf:23.13-test108.lgf:23.17 *)
(* INTEGER *) 1 (* test108.lgf:23.18-test108.lgf:23.19 *)
else (* test108.lgf:23.20-test108.lgf:23.24 *)
( (* test108.lgf:23.25-test108.lgf:23.26 *)
(* VAR_NAME *) fib (* test108.lgf:23.26-test108.lgf:23.29 *)
(* VAR_NAME *) z (* test108.lgf:23.30-test108.lgf:23.31 *)
) (* test108.lgf:23.31-test108.lgf:23.32 *)
( (* test108.lgf:23.33-test108.lgf:23.34 *)
(* VAR_NAME *) n (* test108.lgf:23.34-test108.lgf:23.35 *)
- (* test108.lgf:23.36-test108.lgf:23.37 *)
(* INTEGER *) 1 (* test108.lgf:23.38-test108.lgf:23.39 *)
) (* test108.lgf:23.39-test108.lgf:23.40 *)
+ (* test108.lgf:23.41-test108.lgf:23.42 *)
( (* test108.lgf:23.43-test108.lgf:23.44 *)
(* VAR_NAME *) fib (* test108.lgf:23.44-test108.lgf:23.47 *)
(* VAR_NAME *) z (* test108.lgf:23.48-test108.lgf:23.49 *)
) (* test108.lgf:23.49-test108.lgf:23.50 *)
( (* test108.lgf:23.51-test108.lgf:23.52 *)
(* VAR_NAME *) n (* test108.lgf:23.52-test108.lgf:23.53 *)
- (* test108.lgf:23.54-test108.lgf:23.55 *)
(* INTEGER *) 2 (* test108.lgf:23.56-test108.lgf:23.57 *)
) (* test108.lgf:23.57-test108.lgf:23.58 *)
val (* test108.lgf:25.0-test108.lgf:25.3 *)
(* VAR_NAME *) fib (* test108.lgf:25.4-test108.lgf:25.7 *)
: (* test108.lgf:25.8-test108.lgf:25.9 *)
(* CON_NAME *) Integer (* test108.lgf:25.10-test108.lgf:25.17 *)
-> (* test108.lgf:25.18-test108.lgf:25.20 *)
(* CON_NAME *) Integer (* test108.lgf:25.21-test108.lgf:25.28 *)
= (* test108.lgf:25.29-test108.lgf:25.30 *)
(* VAR_NAME *) y (* test108.lgf:25.31-test108.lgf:25.32 *)
[ (* test108.lgf:25.33-test108.lgf:25.34 *)
(* CON_NAME *) Integer (* test108.lgf:25.34-test108.lgf:25.41 *)
-> (* test108.lgf:25.42-test108.lgf:25.44 *)
(* CON_NAME *) Integer (* test108.lgf:25.45-test108.lgf:25.52 *)
] (* test108.lgf:25.52-test108.lgf:25.53 *)
(* VAR_NAME *) fibY (* test108.lgf:25.54-test108.lgf:25.58 *)
(* CON_NAME *) Unit (* test108.lgf:25.59-test108.lgf:25.63 *)
val (* test108.lgf:27.0-test108.lgf:27.3 *)
(* VAR_NAME *) n (* test108.lgf:27.4-test108.lgf:27.5 *)
= (* test108.lgf:27.6-test108.lgf:27.7 *)
(* INTEGER *) 20 (* test108.lgf:27.8-test108.lgf:27.10 *)
val (* test108.lgf:28.0-test108.lgf:28.3 *)
(* VAR_NAME *) fib_n (* test108.lgf:28.4-test108.lgf:28.9 *)
= (* test108.lgf:28.10-test108.lgf:28.11 *)
(* VAR_NAME *) fib (* test108.lgf:28.12-test108.lgf:28.15 *)
(* VAR_NAME *) n (* test108.lgf:28.16-test108.lgf:28.17 *)
; (* test108.lgf:30.0-test108.lgf:30.1 *)
( (* test108.lgf:32.0-test108.lgf:32.1 *)
(* VAR_NAME *) print (* test108.lgf:32.1-test108.lgf:32.6 *)
(* STRING *) "fib " (* test108.lgf:32.7-test108.lgf:32.13 *)
; (* test108.lgf:32.13-test108.lgf:32.14 *)
(* VAR_NAME *) print (* test108.lgf:33.1-test108.lgf:33.6 *)
( (* test108.lgf:33.7-test108.lgf:33.8 *)
(* VAR_NAME *) intToString (* test108.lgf:33.8-test108.lgf:33.19 *)
(* VAR_NAME *) n (* test108.lgf:33.20-test108.lgf:33.21 *)
) (* test108.lgf:33.21-test108.lgf:33.22 *)
; (* test108.lgf:33.22-test108.lgf:33.23 *)
(* VAR_NAME *) print (* test108.lgf:34.1-test108.lgf:34.6 *)
(* STRING *) " = " (* test108.lgf:34.7-test108.lgf:34.12 *)
; (* test108.lgf:34.12-test108.lgf:34.13 *)
(* VAR_NAME *) print (* test108.lgf:35.1-test108.lgf:35.6 *)
( (* test108.lgf:35.7-test108.lgf:35.8 *)
(* VAR_NAME *) intToString (* test108.lgf:35.8-test108.lgf:35.19 *)
(* VAR_NAME *) fib_n (* test108.lgf:35.20-test108.lgf:35.25 *)
) (* test108.lgf:35.25-test108.lgf:35.26 *)
; (* test108.lgf:35.26-test108.lgf:35.27 *)
(* VAR_NAME *) print (* test108.lgf:36.1-test108.lgf:36.6 *)
(* STRING *) "\n" (* test108.lgf:36.7-test108.lgf:36.11 *)
) (* test108.lgf:36.11-test108.lgf:36.12 *)
