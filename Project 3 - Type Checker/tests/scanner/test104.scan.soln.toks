fun (* test104.lgf:3.0-test104.lgf:3.3 *)
(* VAR_NAME *) intToString (* test104.lgf:3.4-test104.lgf:3.15 *)
( (* test104.lgf:3.16-test104.lgf:3.17 *)
(* VAR_NAME *) i (* test104.lgf:3.17-test104.lgf:3.18 *)
: (* test104.lgf:3.18-test104.lgf:3.19 *)
(* CON_NAME *) Integer (* test104.lgf:3.19-test104.lgf:3.26 *)
) (* test104.lgf:3.26-test104.lgf:3.27 *)
: (* test104.lgf:3.28-test104.lgf:3.29 *)
(* CON_NAME *) String (* test104.lgf:3.30-test104.lgf:3.36 *)
= (* test104.lgf:3.37-test104.lgf:3.38 *)
if (* test104.lgf:4.3-test104.lgf:4.5 *)
(* VAR_NAME *) i (* test104.lgf:4.6-test104.lgf:4.7 *)
< (* test104.lgf:4.8-test104.lgf:4.9 *)
(* INTEGER *) 0 (* test104.lgf:4.10-test104.lgf:4.11 *)
then (* test104.lgf:4.12-test104.lgf:4.16 *)
(* STRING *) "~" (* test104.lgf:4.17-test104.lgf:4.20 *)
^ (* test104.lgf:4.21-test104.lgf:4.22 *)
( (* test104.lgf:4.23-test104.lgf:4.24 *)
(* VAR_NAME *) intToString (* test104.lgf:4.24-test104.lgf:4.35 *)
( (* test104.lgf:4.36-test104.lgf:4.37 *)
~ (* test104.lgf:4.37-test104.lgf:4.38 *)
(* VAR_NAME *) i (* test104.lgf:4.38-test104.lgf:4.39 *)
) (* test104.lgf:4.39-test104.lgf:4.40 *)
) (* test104.lgf:4.40-test104.lgf:4.41 *)
else (* test104.lgf:5.3-test104.lgf:5.7 *)
if (* test104.lgf:5.8-test104.lgf:5.10 *)
(* VAR_NAME *) i (* test104.lgf:5.11-test104.lgf:5.12 *)
== (* test104.lgf:5.13-test104.lgf:5.15 *)
(* INTEGER *) 0 (* test104.lgf:5.16-test104.lgf:5.17 *)
then (* test104.lgf:5.18-test104.lgf:5.22 *)
(* STRING *) "0" (* test104.lgf:5.23-test104.lgf:5.26 *)
else (* test104.lgf:6.3-test104.lgf:6.7 *)
if (* test104.lgf:6.8-test104.lgf:6.10 *)
(* VAR_NAME *) i (* test104.lgf:6.11-test104.lgf:6.12 *)
== (* test104.lgf:6.13-test104.lgf:6.15 *)
(* INTEGER *) 1 (* test104.lgf:6.16-test104.lgf:6.17 *)
then (* test104.lgf:6.18-test104.lgf:6.22 *)
(* STRING *) "1" (* test104.lgf:6.23-test104.lgf:6.26 *)
else (* test104.lgf:7.3-test104.lgf:7.7 *)
if (* test104.lgf:7.8-test104.lgf:7.10 *)
(* VAR_NAME *) i (* test104.lgf:7.11-test104.lgf:7.12 *)
== (* test104.lgf:7.13-test104.lgf:7.15 *)
(* INTEGER *) 2 (* test104.lgf:7.16-test104.lgf:7.17 *)
then (* test104.lgf:7.18-test104.lgf:7.22 *)
(* STRING *) "2" (* test104.lgf:7.23-test104.lgf:7.26 *)
else (* test104.lgf:8.3-test104.lgf:8.7 *)
if (* test104.lgf:8.8-test104.lgf:8.10 *)
(* VAR_NAME *) i (* test104.lgf:8.11-test104.lgf:8.12 *)
== (* test104.lgf:8.13-test104.lgf:8.15 *)
(* INTEGER *) 3 (* test104.lgf:8.16-test104.lgf:8.17 *)
then (* test104.lgf:8.18-test104.lgf:8.22 *)
(* STRING *) "3" (* test104.lgf:8.23-test104.lgf:8.26 *)
else (* test104.lgf:9.3-test104.lgf:9.7 *)
if (* test104.lgf:9.8-test104.lgf:9.10 *)
(* VAR_NAME *) i (* test104.lgf:9.11-test104.lgf:9.12 *)
== (* test104.lgf:9.13-test104.lgf:9.15 *)
(* INTEGER *) 4 (* test104.lgf:9.16-test104.lgf:9.17 *)
then (* test104.lgf:9.18-test104.lgf:9.22 *)
(* STRING *) "4" (* test104.lgf:9.23-test104.lgf:9.26 *)
else (* test104.lgf:10.3-test104.lgf:10.7 *)
if (* test104.lgf:10.8-test104.lgf:10.10 *)
(* VAR_NAME *) i (* test104.lgf:10.11-test104.lgf:10.12 *)
== (* test104.lgf:10.13-test104.lgf:10.15 *)
(* INTEGER *) 5 (* test104.lgf:10.16-test104.lgf:10.17 *)
then (* test104.lgf:10.18-test104.lgf:10.22 *)
(* STRING *) "5" (* test104.lgf:10.23-test104.lgf:10.26 *)
else (* test104.lgf:11.3-test104.lgf:11.7 *)
if (* test104.lgf:11.8-test104.lgf:11.10 *)
(* VAR_NAME *) i (* test104.lgf:11.11-test104.lgf:11.12 *)
== (* test104.lgf:11.13-test104.lgf:11.15 *)
(* INTEGER *) 6 (* test104.lgf:11.16-test104.lgf:11.17 *)
then (* test104.lgf:11.18-test104.lgf:11.22 *)
(* STRING *) "6" (* test104.lgf:11.23-test104.lgf:11.26 *)
else (* test104.lgf:12.3-test104.lgf:12.7 *)
if (* test104.lgf:12.8-test104.lgf:12.10 *)
(* VAR_NAME *) i (* test104.lgf:12.11-test104.lgf:12.12 *)
== (* test104.lgf:12.13-test104.lgf:12.15 *)
(* INTEGER *) 7 (* test104.lgf:12.16-test104.lgf:12.17 *)
then (* test104.lgf:12.18-test104.lgf:12.22 *)
(* STRING *) "7" (* test104.lgf:12.23-test104.lgf:12.26 *)
else (* test104.lgf:13.3-test104.lgf:13.7 *)
if (* test104.lgf:13.8-test104.lgf:13.10 *)
(* VAR_NAME *) i (* test104.lgf:13.11-test104.lgf:13.12 *)
== (* test104.lgf:13.13-test104.lgf:13.15 *)
(* INTEGER *) 8 (* test104.lgf:13.16-test104.lgf:13.17 *)
then (* test104.lgf:13.18-test104.lgf:13.22 *)
(* STRING *) "8" (* test104.lgf:13.23-test104.lgf:13.26 *)
else (* test104.lgf:14.3-test104.lgf:14.7 *)
if (* test104.lgf:14.8-test104.lgf:14.10 *)
(* VAR_NAME *) i (* test104.lgf:14.11-test104.lgf:14.12 *)
== (* test104.lgf:14.13-test104.lgf:14.15 *)
(* INTEGER *) 9 (* test104.lgf:14.16-test104.lgf:14.17 *)
then (* test104.lgf:14.18-test104.lgf:14.22 *)
(* STRING *) "9" (* test104.lgf:14.23-test104.lgf:14.26 *)
else (* test104.lgf:15.3-test104.lgf:15.7 *)
( (* test104.lgf:15.8-test104.lgf:15.9 *)
(* VAR_NAME *) intToString (* test104.lgf:15.9-test104.lgf:15.20 *)
( (* test104.lgf:15.21-test104.lgf:15.22 *)
(* VAR_NAME *) i (* test104.lgf:15.22-test104.lgf:15.23 *)
/ (* test104.lgf:15.24-test104.lgf:15.25 *)
(* INTEGER *) 10 (* test104.lgf:15.26-test104.lgf:15.28 *)
) (* test104.lgf:15.28-test104.lgf:15.29 *)
) (* test104.lgf:15.29-test104.lgf:15.30 *)
^ (* test104.lgf:15.31-test104.lgf:15.32 *)
( (* test104.lgf:15.33-test104.lgf:15.34 *)
(* VAR_NAME *) intToString (* test104.lgf:15.34-test104.lgf:15.45 *)
( (* test104.lgf:15.46-test104.lgf:15.47 *)
(* VAR_NAME *) i (* test104.lgf:15.47-test104.lgf:15.48 *)
% (* test104.lgf:15.49-test104.lgf:15.50 *)
(* INTEGER *) 10 (* test104.lgf:15.51-test104.lgf:15.53 *)
) (* test104.lgf:15.53-test104.lgf:15.54 *)
) (* test104.lgf:15.54-test104.lgf:15.55 *)
; (* test104.lgf:17.0-test104.lgf:17.1 *)
(* VAR_NAME *) print (* test104.lgf:19.0-test104.lgf:19.5 *)
( (* test104.lgf:19.6-test104.lgf:19.7 *)
(* VAR_NAME *) intToString (* test104.lgf:19.7-test104.lgf:19.18 *)
(* INTEGER *) 42 (* test104.lgf:19.19-test104.lgf:19.21 *)
^ (* test104.lgf:19.22-test104.lgf:19.23 *)
(* STRING *) "\n" (* test104.lgf:19.24-test104.lgf:19.28 *)
) (* test104.lgf:19.28-test104.lgf:19.29 *)
