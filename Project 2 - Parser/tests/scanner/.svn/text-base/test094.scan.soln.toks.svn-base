val (* test094.lgf:3.0-test094.lgf:3.3 *)
(* VAR_NAME *) x (* test094.lgf:3.4-test094.lgf:3.5 *)
= (* test094.lgf:3.6-test094.lgf:3.7 *)
(* INTEGER *) 3 (* test094.lgf:3.8-test094.lgf:3.9 *)
fun (* test094.lgf:15.0-test094.lgf:15.3 *)
(* VAR_NAME *) add (* test094.lgf:15.4-test094.lgf:15.7 *)
( (* test094.lgf:15.8-test094.lgf:15.9 *)
(* VAR_NAME *) x (* test094.lgf:15.9-test094.lgf:15.10 *)
: (* test094.lgf:15.10-test094.lgf:15.11 *)
(* CON_NAME *) Integer (* test094.lgf:15.12-test094.lgf:15.19 *)
) (* test094.lgf:15.19-test094.lgf:15.20 *)
( (* test094.lgf:15.21-test094.lgf:15.22 *)
(* VAR_NAME *) y (* test094.lgf:15.22-test094.lgf:15.23 *)
: (* test094.lgf:15.23-test094.lgf:15.24 *)
(* CON_NAME *) Integer (* test094.lgf:15.25-test094.lgf:15.32 *)
) (* test094.lgf:15.32-test094.lgf:15.33 *)
= (* test094.lgf:15.34-test094.lgf:15.35 *)
(* VAR_NAME *) x (* test094.lgf:15.36-test094.lgf:15.37 *)
+ (* test094.lgf:15.38-test094.lgf:15.39 *)
(* VAR_NAME *) y (* test094.lgf:15.40-test094.lgf:15.41 *)
; (* test094.lgf:17.0-test094.lgf:17.1 *)
(* VAR_NAME *) add (* test094.lgf:19.0-test094.lgf:19.3 *)
(* INTEGER *) 1 (* test094.lgf:19.4-test094.lgf:19.5 *)
(* INTEGER *) 2 (* test094.lgf:19.6-test094.lgf:19.7 *)
