datatype (* test111.lgf:2.0-test111.lgf:2.8 *)
(* CON_NAME *) Option (* test111.lgf:2.9-test111.lgf:2.15 *)
[ (* test111.lgf:2.16-test111.lgf:2.17 *)
(* TYVAR_NAME *) 'a (* test111.lgf:2.17-test111.lgf:2.19 *)
] (* test111.lgf:2.19-test111.lgf:2.20 *)
= (* test111.lgf:2.21-test111.lgf:2.22 *)
(* CON_NAME *) None (* test111.lgf:2.23-test111.lgf:2.27 *)
| (* test111.lgf:2.28-test111.lgf:2.29 *)
(* CON_NAME *) Some (* test111.lgf:2.30-test111.lgf:2.34 *)
{ (* test111.lgf:2.35-test111.lgf:2.36 *)
(* TYVAR_NAME *) 'a (* test111.lgf:2.36-test111.lgf:2.38 *)
} (* test111.lgf:2.38-test111.lgf:2.39 *)
datatype (* test111.lgf:5.0-test111.lgf:5.8 *)
(* CON_NAME *) Pair (* test111.lgf:5.9-test111.lgf:5.13 *)
[ (* test111.lgf:5.14-test111.lgf:5.15 *)
(* TYVAR_NAME *) 'a1 (* test111.lgf:5.15-test111.lgf:5.18 *)
, (* test111.lgf:5.18-test111.lgf:5.19 *)
(* TYVAR_NAME *) 'a2 (* test111.lgf:5.19-test111.lgf:5.22 *)
] (* test111.lgf:5.22-test111.lgf:5.23 *)
= (* test111.lgf:5.24-test111.lgf:5.25 *)
(* CON_NAME *) Pair (* test111.lgf:5.26-test111.lgf:5.30 *)
{ (* test111.lgf:5.31-test111.lgf:5.32 *)
(* TYVAR_NAME *) 'a1 (* test111.lgf:5.32-test111.lgf:5.35 *)
, (* test111.lgf:5.35-test111.lgf:5.36 *)
(* TYVAR_NAME *) 'a2 (* test111.lgf:5.36-test111.lgf:5.39 *)
} (* test111.lgf:5.39-test111.lgf:5.40 *)
val (* test111.lgf:6.0-test111.lgf:6.3 *)
(* VAR_NAME *) pair (* test111.lgf:6.4-test111.lgf:6.8 *)
= (* test111.lgf:6.9-test111.lgf:6.10 *)
fn (* test111.lgf:6.11-test111.lgf:6.13 *)
[ (* test111.lgf:6.14-test111.lgf:6.15 *)
(* TYVAR_NAME *) 'a1 (* test111.lgf:6.15-test111.lgf:6.18 *)
] (* test111.lgf:6.18-test111.lgf:6.19 *)
[ (* test111.lgf:6.20-test111.lgf:6.21 *)
(* TYVAR_NAME *) 'a2 (* test111.lgf:6.21-test111.lgf:6.24 *)
] (* test111.lgf:6.24-test111.lgf:6.25 *)
( (* test111.lgf:6.26-test111.lgf:6.27 *)
(* VAR_NAME *) x (* test111.lgf:6.27-test111.lgf:6.28 *)
: (* test111.lgf:6.28-test111.lgf:6.29 *)
(* TYVAR_NAME *) 'a1 (* test111.lgf:6.30-test111.lgf:6.33 *)
) (* test111.lgf:6.33-test111.lgf:6.34 *)
( (* test111.lgf:6.35-test111.lgf:6.36 *)
(* VAR_NAME *) y (* test111.lgf:6.36-test111.lgf:6.37 *)
: (* test111.lgf:6.37-test111.lgf:6.38 *)
(* TYVAR_NAME *) 'a2 (* test111.lgf:6.39-test111.lgf:6.42 *)
) (* test111.lgf:6.42-test111.lgf:6.43 *)
=> (* test111.lgf:6.44-test111.lgf:6.46 *)
(* CON_NAME *) Pair (* test111.lgf:7.3-test111.lgf:7.7 *)
[ (* test111.lgf:7.8-test111.lgf:7.9 *)
(* TYVAR_NAME *) 'a1 (* test111.lgf:7.9-test111.lgf:7.12 *)
, (* test111.lgf:7.12-test111.lgf:7.13 *)
(* TYVAR_NAME *) 'a2 (* test111.lgf:7.14-test111.lgf:7.17 *)
] (* test111.lgf:7.17-test111.lgf:7.18 *)
{ (* test111.lgf:7.19-test111.lgf:7.20 *)
(* VAR_NAME *) x (* test111.lgf:7.20-test111.lgf:7.21 *)
, (* test111.lgf:7.21-test111.lgf:7.22 *)
(* VAR_NAME *) y (* test111.lgf:7.23-test111.lgf:7.24 *)
} (* test111.lgf:7.24-test111.lgf:7.25 *)
val (* test111.lgf:8.0-test111.lgf:8.3 *)
(* VAR_NAME *) fst (* test111.lgf:8.4-test111.lgf:8.7 *)
= (* test111.lgf:8.8-test111.lgf:8.9 *)
fn (* test111.lgf:8.10-test111.lgf:8.12 *)
[ (* test111.lgf:8.13-test111.lgf:8.14 *)
(* TYVAR_NAME *) 'a1 (* test111.lgf:8.14-test111.lgf:8.17 *)
] (* test111.lgf:8.17-test111.lgf:8.18 *)
[ (* test111.lgf:8.19-test111.lgf:8.20 *)
(* TYVAR_NAME *) 'a2 (* test111.lgf:8.20-test111.lgf:8.23 *)
] (* test111.lgf:8.23-test111.lgf:8.24 *)
( (* test111.lgf:8.25-test111.lgf:8.26 *)
(* VAR_NAME *) p (* test111.lgf:8.26-test111.lgf:8.27 *)
: (* test111.lgf:8.27-test111.lgf:8.28 *)
(* CON_NAME *) Pair (* test111.lgf:8.29-test111.lgf:8.33 *)
[ (* test111.lgf:8.34-test111.lgf:8.35 *)
(* TYVAR_NAME *) 'a1 (* test111.lgf:8.35-test111.lgf:8.38 *)
, (* test111.lgf:8.38-test111.lgf:8.39 *)
(* TYVAR_NAME *) 'a2 (* test111.lgf:8.39-test111.lgf:8.42 *)
] (* test111.lgf:8.42-test111.lgf:8.43 *)
) (* test111.lgf:8.43-test111.lgf:8.44 *)
=> (* test111.lgf:8.45-test111.lgf:8.47 *)
case (* test111.lgf:9.3-test111.lgf:9.7 *)
(* VAR_NAME *) p (* test111.lgf:9.8-test111.lgf:9.9 *)
of (* test111.lgf:9.10-test111.lgf:9.12 *)
(* CON_NAME *) Pair (* test111.lgf:10.6-test111.lgf:10.10 *)
[ (* test111.lgf:10.11-test111.lgf:10.12 *)
(* TYVAR_NAME *) 'a1 (* test111.lgf:10.12-test111.lgf:10.15 *)
, (* test111.lgf:10.15-test111.lgf:10.16 *)
(* TYVAR_NAME *) 'a2 (* test111.lgf:10.17-test111.lgf:10.20 *)
] (* test111.lgf:10.20-test111.lgf:10.21 *)
{ (* test111.lgf:10.22-test111.lgf:10.23 *)
(* VAR_NAME *) x1 (* test111.lgf:10.23-test111.lgf:10.25 *)
, (* test111.lgf:10.25-test111.lgf:10.26 *)
(* VAR_NAME *) x2 (* test111.lgf:10.26-test111.lgf:10.28 *)
} (* test111.lgf:10.28-test111.lgf:10.29 *)
=> (* test111.lgf:10.30-test111.lgf:10.32 *)
(* VAR_NAME *) x1 (* test111.lgf:10.33-test111.lgf:10.35 *)
end (* test111.lgf:11.3-test111.lgf:11.6 *)
val (* test111.lgf:12.0-test111.lgf:12.3 *)
(* VAR_NAME *) snd (* test111.lgf:12.4-test111.lgf:12.7 *)
= (* test111.lgf:12.8-test111.lgf:12.9 *)
fn (* test111.lgf:12.10-test111.lgf:12.12 *)
[ (* test111.lgf:12.13-test111.lgf:12.14 *)
(* TYVAR_NAME *) 'a1 (* test111.lgf:12.14-test111.lgf:12.17 *)
] (* test111.lgf:12.17-test111.lgf:12.18 *)
[ (* test111.lgf:12.19-test111.lgf:12.20 *)
(* TYVAR_NAME *) 'a2 (* test111.lgf:12.20-test111.lgf:12.23 *)
] (* test111.lgf:12.23-test111.lgf:12.24 *)
( (* test111.lgf:12.25-test111.lgf:12.26 *)
(* VAR_NAME *) p (* test111.lgf:12.26-test111.lgf:12.27 *)
: (* test111.lgf:12.27-test111.lgf:12.28 *)
(* CON_NAME *) Pair (* test111.lgf:12.29-test111.lgf:12.33 *)
[ (* test111.lgf:12.34-test111.lgf:12.35 *)
(* TYVAR_NAME *) 'a1 (* test111.lgf:12.35-test111.lgf:12.38 *)
, (* test111.lgf:12.38-test111.lgf:12.39 *)
(* TYVAR_NAME *) 'a2 (* test111.lgf:12.39-test111.lgf:12.42 *)
] (* test111.lgf:12.42-test111.lgf:12.43 *)
) (* test111.lgf:12.43-test111.lgf:12.44 *)
=> (* test111.lgf:12.45-test111.lgf:12.47 *)
case (* test111.lgf:13.3-test111.lgf:13.7 *)
(* VAR_NAME *) p (* test111.lgf:13.8-test111.lgf:13.9 *)
of (* test111.lgf:13.10-test111.lgf:13.12 *)
(* CON_NAME *) Pair (* test111.lgf:14.6-test111.lgf:14.10 *)
[ (* test111.lgf:14.11-test111.lgf:14.12 *)
(* TYVAR_NAME *) 'a1 (* test111.lgf:14.12-test111.lgf:14.15 *)
, (* test111.lgf:14.15-test111.lgf:14.16 *)
(* TYVAR_NAME *) 'a2 (* test111.lgf:14.17-test111.lgf:14.20 *)
] (* test111.lgf:14.20-test111.lgf:14.21 *)
{ (* test111.lgf:14.22-test111.lgf:14.23 *)
(* VAR_NAME *) x1 (* test111.lgf:14.23-test111.lgf:14.25 *)
, (* test111.lgf:14.25-test111.lgf:14.26 *)
(* VAR_NAME *) x2 (* test111.lgf:14.26-test111.lgf:14.28 *)
} (* test111.lgf:14.28-test111.lgf:14.29 *)
=> (* test111.lgf:14.30-test111.lgf:14.32 *)
(* VAR_NAME *) x2 (* test111.lgf:14.33-test111.lgf:14.35 *)
end (* test111.lgf:15.3-test111.lgf:15.6 *)
datatype (* test111.lgf:18.0-test111.lgf:18.8 *)
(* CON_NAME *) RList (* test111.lgf:18.9-test111.lgf:18.14 *)
[ (* test111.lgf:18.15-test111.lgf:18.16 *)
(* TYVAR_NAME *) 'a (* test111.lgf:18.16-test111.lgf:18.18 *)
] (* test111.lgf:18.18-test111.lgf:18.19 *)
= (* test111.lgf:18.20-test111.lgf:18.21 *)
(* CON_NAME *) RNil (* test111.lgf:18.22-test111.lgf:18.26 *)
| (* test111.lgf:19.20-test111.lgf:19.21 *)
(* CON_NAME *) RZero (* test111.lgf:19.22-test111.lgf:19.27 *)
{ (* test111.lgf:19.28-test111.lgf:19.29 *)
(* CON_NAME *) RList (* test111.lgf:19.29-test111.lgf:19.34 *)
[ (* test111.lgf:19.35-test111.lgf:19.36 *)
(* CON_NAME *) Pair (* test111.lgf:19.36-test111.lgf:19.40 *)
[ (* test111.lgf:19.41-test111.lgf:19.42 *)
(* TYVAR_NAME *) 'a (* test111.lgf:19.42-test111.lgf:19.44 *)
, (* test111.lgf:19.44-test111.lgf:19.45 *)
(* TYVAR_NAME *) 'a (* test111.lgf:19.46-test111.lgf:19.48 *)
] (* test111.lgf:19.48-test111.lgf:19.49 *)
] (* test111.lgf:19.49-test111.lgf:19.50 *)
} (* test111.lgf:19.50-test111.lgf:19.51 *)
| (* test111.lgf:20.20-test111.lgf:20.21 *)
(* CON_NAME *) ROne (* test111.lgf:20.22-test111.lgf:20.26 *)
{ (* test111.lgf:20.27-test111.lgf:20.28 *)
(* TYVAR_NAME *) 'a (* test111.lgf:20.28-test111.lgf:20.30 *)
, (* test111.lgf:20.30-test111.lgf:20.31 *)
(* CON_NAME *) RList (* test111.lgf:20.32-test111.lgf:20.37 *)
[ (* test111.lgf:20.38-test111.lgf:20.39 *)
(* CON_NAME *) Pair (* test111.lgf:20.39-test111.lgf:20.43 *)
[ (* test111.lgf:20.44-test111.lgf:20.45 *)
(* TYVAR_NAME *) 'a (* test111.lgf:20.45-test111.lgf:20.47 *)
, (* test111.lgf:20.47-test111.lgf:20.48 *)
(* TYVAR_NAME *) 'a (* test111.lgf:20.49-test111.lgf:20.51 *)
] (* test111.lgf:20.51-test111.lgf:20.52 *)
] (* test111.lgf:20.52-test111.lgf:20.53 *)
} (* test111.lgf:20.53-test111.lgf:20.54 *)
val (* test111.lgf:21.0-test111.lgf:21.3 *)
(* VAR_NAME *) rlistEmpty (* test111.lgf:21.4-test111.lgf:21.14 *)
= (* test111.lgf:21.15-test111.lgf:21.16 *)
fn (* test111.lgf:21.17-test111.lgf:21.19 *)
[ (* test111.lgf:21.20-test111.lgf:21.21 *)
(* TYVAR_NAME *) 'a (* test111.lgf:21.21-test111.lgf:21.23 *)
] (* test111.lgf:21.23-test111.lgf:21.24 *)
=> (* test111.lgf:21.25-test111.lgf:21.27 *)
(* CON_NAME *) RNil (* test111.lgf:21.28-test111.lgf:21.32 *)
[ (* test111.lgf:21.33-test111.lgf:21.34 *)
(* TYVAR_NAME *) 'a (* test111.lgf:21.34-test111.lgf:21.36 *)
] (* test111.lgf:21.36-test111.lgf:21.37 *)
val (* test111.lgf:22.0-test111.lgf:22.3 *)
(* VAR_NAME *) rlistIsEmpty (* test111.lgf:22.4-test111.lgf:22.16 *)
= (* test111.lgf:22.17-test111.lgf:22.18 *)
fn (* test111.lgf:22.19-test111.lgf:22.21 *)
[ (* test111.lgf:22.22-test111.lgf:22.23 *)
(* TYVAR_NAME *) 'a (* test111.lgf:22.23-test111.lgf:22.25 *)
] (* test111.lgf:22.25-test111.lgf:22.26 *)
( (* test111.lgf:22.27-test111.lgf:22.28 *)
(* VAR_NAME *) l (* test111.lgf:22.28-test111.lgf:22.29 *)
: (* test111.lgf:22.29-test111.lgf:22.30 *)
(* CON_NAME *) RList (* test111.lgf:22.31-test111.lgf:22.36 *)
[ (* test111.lgf:22.37-test111.lgf:22.38 *)
(* TYVAR_NAME *) 'a (* test111.lgf:22.38-test111.lgf:22.40 *)
] (* test111.lgf:22.40-test111.lgf:22.41 *)
) (* test111.lgf:22.41-test111.lgf:22.42 *)
=> (* test111.lgf:22.43-test111.lgf:22.45 *)
case (* test111.lgf:23.3-test111.lgf:23.7 *)
(* VAR_NAME *) l (* test111.lgf:23.8-test111.lgf:23.9 *)
of (* test111.lgf:23.10-test111.lgf:23.12 *)
(* CON_NAME *) RNil (* test111.lgf:23.13-test111.lgf:23.17 *)
[ (* test111.lgf:23.18-test111.lgf:23.19 *)
(* TYVAR_NAME *) 'a (* test111.lgf:23.19-test111.lgf:23.21 *)
] (* test111.lgf:23.21-test111.lgf:23.22 *)
=> (* test111.lgf:23.23-test111.lgf:23.25 *)
(* CON_NAME *) True (* test111.lgf:23.26-test111.lgf:23.30 *)
| (* test111.lgf:23.31-test111.lgf:23.32 *)
_ (* test111.lgf:23.33-test111.lgf:23.34 *)
=> (* test111.lgf:23.35-test111.lgf:23.37 *)
(* CON_NAME *) False (* test111.lgf:23.38-test111.lgf:23.43 *)
end (* test111.lgf:23.44-test111.lgf:23.47 *)
fun (* test111.lgf:24.0-test111.lgf:24.3 *)
(* VAR_NAME *) rlistCons (* test111.lgf:24.4-test111.lgf:24.13 *)
[ (* test111.lgf:24.14-test111.lgf:24.15 *)
(* TYVAR_NAME *) 'a (* test111.lgf:24.15-test111.lgf:24.17 *)
] (* test111.lgf:24.17-test111.lgf:24.18 *)
( (* test111.lgf:24.19-test111.lgf:24.20 *)
(* VAR_NAME *) x (* test111.lgf:24.20-test111.lgf:24.21 *)
: (* test111.lgf:24.21-test111.lgf:24.22 *)
(* TYVAR_NAME *) 'a (* test111.lgf:24.23-test111.lgf:24.25 *)
) (* test111.lgf:24.25-test111.lgf:24.26 *)
( (* test111.lgf:24.27-test111.lgf:24.28 *)
(* VAR_NAME *) l (* test111.lgf:24.28-test111.lgf:24.29 *)
: (* test111.lgf:24.29-test111.lgf:24.30 *)
(* CON_NAME *) RList (* test111.lgf:24.31-test111.lgf:24.36 *)
[ (* test111.lgf:24.37-test111.lgf:24.38 *)
(* TYVAR_NAME *) 'a (* test111.lgf:24.38-test111.lgf:24.40 *)
] (* test111.lgf:24.40-test111.lgf:24.41 *)
) (* test111.lgf:24.41-test111.lgf:24.42 *)
: (* test111.lgf:24.43-test111.lgf:24.44 *)
(* CON_NAME *) RList (* test111.lgf:24.45-test111.lgf:24.50 *)
[ (* test111.lgf:24.51-test111.lgf:24.52 *)
(* TYVAR_NAME *) 'a (* test111.lgf:24.52-test111.lgf:24.54 *)
] (* test111.lgf:24.54-test111.lgf:24.55 *)
= (* test111.lgf:24.56-test111.lgf:24.57 *)
case (* test111.lgf:25.3-test111.lgf:25.7 *)
(* VAR_NAME *) l (* test111.lgf:25.8-test111.lgf:25.9 *)
of (* test111.lgf:25.10-test111.lgf:25.12 *)
(* CON_NAME *) RNil (* test111.lgf:26.6-test111.lgf:26.10 *)
[ (* test111.lgf:26.11-test111.lgf:26.12 *)
(* TYVAR_NAME *) 'a (* test111.lgf:26.12-test111.lgf:26.14 *)
] (* test111.lgf:26.14-test111.lgf:26.15 *)
=> (* test111.lgf:26.16-test111.lgf:26.18 *)
(* CON_NAME *) ROne (* test111.lgf:26.19-test111.lgf:26.23 *)
[ (* test111.lgf:26.24-test111.lgf:26.25 *)
(* TYVAR_NAME *) 'a (* test111.lgf:26.25-test111.lgf:26.27 *)
] (* test111.lgf:26.27-test111.lgf:26.28 *)
{ (* test111.lgf:26.29-test111.lgf:26.30 *)
(* VAR_NAME *) x (* test111.lgf:26.30-test111.lgf:26.31 *)
, (* test111.lgf:26.31-test111.lgf:26.32 *)
(* CON_NAME *) RNil (* test111.lgf:26.33-test111.lgf:26.37 *)
[ (* test111.lgf:26.38-test111.lgf:26.39 *)
(* CON_NAME *) Pair (* test111.lgf:26.39-test111.lgf:26.43 *)
[ (* test111.lgf:26.44-test111.lgf:26.45 *)
(* TYVAR_NAME *) 'a (* test111.lgf:26.45-test111.lgf:26.47 *)
, (* test111.lgf:26.47-test111.lgf:26.48 *)
(* TYVAR_NAME *) 'a (* test111.lgf:26.49-test111.lgf:26.51 *)
] (* test111.lgf:26.51-test111.lgf:26.52 *)
] (* test111.lgf:26.52-test111.lgf:26.53 *)
} (* test111.lgf:26.53-test111.lgf:26.54 *)
| (* test111.lgf:27.4-test111.lgf:27.5 *)
(* CON_NAME *) RZero (* test111.lgf:27.6-test111.lgf:27.11 *)
[ (* test111.lgf:27.12-test111.lgf:27.13 *)
(* TYVAR_NAME *) 'a (* test111.lgf:27.13-test111.lgf:27.15 *)
] (* test111.lgf:27.15-test111.lgf:27.16 *)
{ (* test111.lgf:27.17-test111.lgf:27.18 *)
(* VAR_NAME *) ps (* test111.lgf:27.18-test111.lgf:27.20 *)
} (* test111.lgf:27.20-test111.lgf:27.21 *)
=> (* test111.lgf:27.22-test111.lgf:27.24 *)
(* CON_NAME *) ROne (* test111.lgf:27.25-test111.lgf:27.29 *)
[ (* test111.lgf:27.30-test111.lgf:27.31 *)
(* TYVAR_NAME *) 'a (* test111.lgf:27.31-test111.lgf:27.33 *)
] (* test111.lgf:27.33-test111.lgf:27.34 *)
{ (* test111.lgf:27.35-test111.lgf:27.36 *)
(* VAR_NAME *) x (* test111.lgf:27.36-test111.lgf:27.37 *)
, (* test111.lgf:27.37-test111.lgf:27.38 *)
(* VAR_NAME *) ps (* test111.lgf:27.39-test111.lgf:27.41 *)
} (* test111.lgf:27.41-test111.lgf:27.42 *)
| (* test111.lgf:28.4-test111.lgf:28.5 *)
(* CON_NAME *) ROne (* test111.lgf:28.6-test111.lgf:28.10 *)
[ (* test111.lgf:28.11-test111.lgf:28.12 *)
(* TYVAR_NAME *) 'a (* test111.lgf:28.12-test111.lgf:28.14 *)
] (* test111.lgf:28.14-test111.lgf:28.15 *)
{ (* test111.lgf:28.16-test111.lgf:28.17 *)
(* VAR_NAME *) y (* test111.lgf:28.17-test111.lgf:28.18 *)
, (* test111.lgf:28.18-test111.lgf:28.19 *)
(* VAR_NAME *) ps (* test111.lgf:28.20-test111.lgf:28.22 *)
} (* test111.lgf:28.22-test111.lgf:28.23 *)
=> (* test111.lgf:28.24-test111.lgf:28.26 *)
(* CON_NAME *) RZero (* test111.lgf:28.27-test111.lgf:28.32 *)
[ (* test111.lgf:28.33-test111.lgf:28.34 *)
(* TYVAR_NAME *) 'a (* test111.lgf:28.34-test111.lgf:28.36 *)
] (* test111.lgf:28.36-test111.lgf:28.37 *)
{ (* test111.lgf:28.38-test111.lgf:28.39 *)
(* VAR_NAME *) rlistCons (* test111.lgf:28.39-test111.lgf:28.48 *)
[ (* test111.lgf:28.49-test111.lgf:28.50 *)
(* CON_NAME *) Pair (* test111.lgf:28.50-test111.lgf:28.54 *)
[ (* test111.lgf:28.55-test111.lgf:28.56 *)
(* TYVAR_NAME *) 'a (* test111.lgf:28.56-test111.lgf:28.58 *)
, (* test111.lgf:28.58-test111.lgf:28.59 *)
(* TYVAR_NAME *) 'a (* test111.lgf:28.59-test111.lgf:28.61 *)
] (* test111.lgf:28.61-test111.lgf:28.62 *)
] (* test111.lgf:28.62-test111.lgf:28.63 *)
( (* test111.lgf:28.64-test111.lgf:28.65 *)
(* VAR_NAME *) pair (* test111.lgf:28.65-test111.lgf:28.69 *)
[ (* test111.lgf:28.70-test111.lgf:28.71 *)
(* TYVAR_NAME *) 'a (* test111.lgf:28.71-test111.lgf:28.73 *)
] (* test111.lgf:28.73-test111.lgf:28.74 *)
[ (* test111.lgf:28.75-test111.lgf:28.76 *)
(* TYVAR_NAME *) 'a (* test111.lgf:28.76-test111.lgf:28.78 *)
] (* test111.lgf:28.78-test111.lgf:28.79 *)
(* VAR_NAME *) x (* test111.lgf:28.80-test111.lgf:28.81 *)
(* VAR_NAME *) y (* test111.lgf:28.82-test111.lgf:28.83 *)
) (* test111.lgf:28.83-test111.lgf:28.84 *)
(* VAR_NAME *) ps (* test111.lgf:28.85-test111.lgf:28.87 *)
} (* test111.lgf:28.87-test111.lgf:28.88 *)
end (* test111.lgf:29.3-test111.lgf:29.6 *)
fun (* test111.lgf:30.0-test111.lgf:30.3 *)
(* VAR_NAME *) rlistUncons (* test111.lgf:30.4-test111.lgf:30.15 *)
[ (* test111.lgf:30.16-test111.lgf:30.17 *)
(* TYVAR_NAME *) 'a (* test111.lgf:30.17-test111.lgf:30.19 *)
] (* test111.lgf:30.19-test111.lgf:30.20 *)
( (* test111.lgf:30.21-test111.lgf:30.22 *)
(* VAR_NAME *) l (* test111.lgf:30.22-test111.lgf:30.23 *)
: (* test111.lgf:30.23-test111.lgf:30.24 *)
(* CON_NAME *) RList (* test111.lgf:30.25-test111.lgf:30.30 *)
[ (* test111.lgf:30.31-test111.lgf:30.32 *)
(* TYVAR_NAME *) 'a (* test111.lgf:30.32-test111.lgf:30.34 *)
] (* test111.lgf:30.34-test111.lgf:30.35 *)
) (* test111.lgf:30.35-test111.lgf:30.36 *)
: (* test111.lgf:30.37-test111.lgf:30.38 *)
(* CON_NAME *) Pair (* test111.lgf:30.39-test111.lgf:30.43 *)
[ (* test111.lgf:30.44-test111.lgf:30.45 *)
(* TYVAR_NAME *) 'a (* test111.lgf:30.45-test111.lgf:30.47 *)
, (* test111.lgf:30.47-test111.lgf:30.48 *)
(* CON_NAME *) RList (* test111.lgf:30.49-test111.lgf:30.54 *)
[ (* test111.lgf:30.55-test111.lgf:30.56 *)
(* TYVAR_NAME *) 'a (* test111.lgf:30.56-test111.lgf:30.58 *)
] (* test111.lgf:30.58-test111.lgf:30.59 *)
] (* test111.lgf:30.59-test111.lgf:30.60 *)
= (* test111.lgf:30.61-test111.lgf:30.62 *)
case (* test111.lgf:31.3-test111.lgf:31.7 *)
(* VAR_NAME *) l (* test111.lgf:31.8-test111.lgf:31.9 *)
of (* test111.lgf:31.10-test111.lgf:31.12 *)
(* CON_NAME *) RNil (* test111.lgf:32.6-test111.lgf:32.10 *)
[ (* test111.lgf:32.11-test111.lgf:32.12 *)
(* TYVAR_NAME *) 'a (* test111.lgf:32.12-test111.lgf:32.14 *)
] (* test111.lgf:32.14-test111.lgf:32.15 *)
=> (* test111.lgf:32.16-test111.lgf:32.18 *)
(* VAR_NAME *) fail (* test111.lgf:32.19-test111.lgf:32.23 *)
[ (* test111.lgf:32.24-test111.lgf:32.25 *)
(* CON_NAME *) Pair (* test111.lgf:32.25-test111.lgf:32.29 *)
[ (* test111.lgf:32.30-test111.lgf:32.31 *)
(* TYVAR_NAME *) 'a (* test111.lgf:32.31-test111.lgf:32.33 *)
, (* test111.lgf:32.33-test111.lgf:32.34 *)
(* CON_NAME *) RList (* test111.lgf:32.35-test111.lgf:32.40 *)
[ (* test111.lgf:32.41-test111.lgf:32.42 *)
(* TYVAR_NAME *) 'a (* test111.lgf:32.42-test111.lgf:32.44 *)
] (* test111.lgf:32.44-test111.lgf:32.45 *)
] (* test111.lgf:32.45-test111.lgf:32.46 *)
] (* test111.lgf:32.46-test111.lgf:32.47 *)
(* STRING *) "rlistUncons: RNil" (* test111.lgf:32.48-test111.lgf:32.67 *)
| (* test111.lgf:33.4-test111.lgf:33.5 *)
(* CON_NAME *) ROne (* test111.lgf:33.6-test111.lgf:33.10 *)
[ (* test111.lgf:33.11-test111.lgf:33.12 *)
(* TYVAR_NAME *) 'a (* test111.lgf:33.12-test111.lgf:33.14 *)
] (* test111.lgf:33.14-test111.lgf:33.15 *)
{ (* test111.lgf:33.16-test111.lgf:33.17 *)
(* VAR_NAME *) x (* test111.lgf:33.17-test111.lgf:33.18 *)
, (* test111.lgf:33.18-test111.lgf:33.19 *)
(* VAR_NAME *) ps (* test111.lgf:33.20-test111.lgf:33.22 *)
} (* test111.lgf:33.22-test111.lgf:33.23 *)
=> (* test111.lgf:33.24-test111.lgf:33.26 *)
case (* test111.lgf:34.9-test111.lgf:34.13 *)
(* VAR_NAME *) ps (* test111.lgf:34.14-test111.lgf:34.16 *)
of (* test111.lgf:34.17-test111.lgf:34.19 *)
(* CON_NAME *) RNil (* test111.lgf:35.12-test111.lgf:35.16 *)
[ (* test111.lgf:35.17-test111.lgf:35.18 *)
(* CON_NAME *) Pair (* test111.lgf:35.18-test111.lgf:35.22 *)
[ (* test111.lgf:35.23-test111.lgf:35.24 *)
(* TYVAR_NAME *) 'a (* test111.lgf:35.24-test111.lgf:35.26 *)
, (* test111.lgf:35.26-test111.lgf:35.27 *)
(* TYVAR_NAME *) 'a (* test111.lgf:35.28-test111.lgf:35.30 *)
] (* test111.lgf:35.30-test111.lgf:35.31 *)
] (* test111.lgf:35.31-test111.lgf:35.32 *)
=> (* test111.lgf:35.33-test111.lgf:35.35 *)
(* CON_NAME *) Pair (* test111.lgf:35.36-test111.lgf:35.40 *)
[ (* test111.lgf:35.41-test111.lgf:35.42 *)
(* TYVAR_NAME *) 'a (* test111.lgf:35.42-test111.lgf:35.44 *)
, (* test111.lgf:35.44-test111.lgf:35.45 *)
(* CON_NAME *) RList (* test111.lgf:35.46-test111.lgf:35.51 *)
[ (* test111.lgf:35.52-test111.lgf:35.53 *)
(* TYVAR_NAME *) 'a (* test111.lgf:35.53-test111.lgf:35.55 *)
] (* test111.lgf:35.55-test111.lgf:35.56 *)
] (* test111.lgf:35.56-test111.lgf:35.57 *)
{ (* test111.lgf:35.58-test111.lgf:35.59 *)
(* VAR_NAME *) x (* test111.lgf:35.59-test111.lgf:35.60 *)
, (* test111.lgf:35.60-test111.lgf:35.61 *)
(* CON_NAME *) RNil (* test111.lgf:35.62-test111.lgf:35.66 *)
[ (* test111.lgf:35.67-test111.lgf:35.68 *)
(* TYVAR_NAME *) 'a (* test111.lgf:35.68-test111.lgf:35.70 *)
] (* test111.lgf:35.70-test111.lgf:35.71 *)
} (* test111.lgf:35.71-test111.lgf:35.72 *)
| (* test111.lgf:36.10-test111.lgf:36.11 *)
_ (* test111.lgf:36.12-test111.lgf:36.13 *)
=> (* test111.lgf:36.14-test111.lgf:36.16 *)
(* CON_NAME *) Pair (* test111.lgf:36.17-test111.lgf:36.21 *)
[ (* test111.lgf:36.22-test111.lgf:36.23 *)
(* TYVAR_NAME *) 'a (* test111.lgf:36.23-test111.lgf:36.25 *)
, (* test111.lgf:36.25-test111.lgf:36.26 *)
(* CON_NAME *) RList (* test111.lgf:36.27-test111.lgf:36.32 *)
[ (* test111.lgf:36.33-test111.lgf:36.34 *)
(* TYVAR_NAME *) 'a (* test111.lgf:36.34-test111.lgf:36.36 *)
] (* test111.lgf:36.36-test111.lgf:36.37 *)
] (* test111.lgf:36.37-test111.lgf:36.38 *)
{ (* test111.lgf:36.39-test111.lgf:36.40 *)
(* VAR_NAME *) x (* test111.lgf:36.40-test111.lgf:36.41 *)
, (* test111.lgf:36.41-test111.lgf:36.42 *)
(* CON_NAME *) RZero (* test111.lgf:36.43-test111.lgf:36.48 *)
[ (* test111.lgf:36.49-test111.lgf:36.50 *)
(* TYVAR_NAME *) 'a (* test111.lgf:36.50-test111.lgf:36.52 *)
] (* test111.lgf:36.52-test111.lgf:36.53 *)
{ (* test111.lgf:36.54-test111.lgf:36.55 *)
(* VAR_NAME *) ps (* test111.lgf:36.55-test111.lgf:36.57 *)
} (* test111.lgf:36.57-test111.lgf:36.58 *)
} (* test111.lgf:36.58-test111.lgf:36.59 *)
end (* test111.lgf:37.9-test111.lgf:37.12 *)
| (* test111.lgf:38.4-test111.lgf:38.5 *)
(* CON_NAME *) RZero (* test111.lgf:38.6-test111.lgf:38.11 *)
[ (* test111.lgf:38.12-test111.lgf:38.13 *)
(* TYVAR_NAME *) 'a (* test111.lgf:38.13-test111.lgf:38.15 *)
] (* test111.lgf:38.15-test111.lgf:38.16 *)
{ (* test111.lgf:38.17-test111.lgf:38.18 *)
(* VAR_NAME *) ps (* test111.lgf:38.18-test111.lgf:38.20 *)
} (* test111.lgf:38.20-test111.lgf:38.21 *)
=> (* test111.lgf:38.22-test111.lgf:38.24 *)
let (* test111.lgf:39.9-test111.lgf:39.12 *)
val (* test111.lgf:40.12-test111.lgf:40.15 *)
(* VAR_NAME *) xy_ps' (* test111.lgf:40.16-test111.lgf:40.22 *)
= (* test111.lgf:40.23-test111.lgf:40.24 *)
(* VAR_NAME *) rlistUncons (* test111.lgf:40.25-test111.lgf:40.36 *)
[ (* test111.lgf:40.37-test111.lgf:40.38 *)
(* CON_NAME *) Pair (* test111.lgf:40.38-test111.lgf:40.42 *)
[ (* test111.lgf:40.43-test111.lgf:40.44 *)
(* TYVAR_NAME *) 'a (* test111.lgf:40.44-test111.lgf:40.46 *)
, (* test111.lgf:40.46-test111.lgf:40.47 *)
(* TYVAR_NAME *) 'a (* test111.lgf:40.48-test111.lgf:40.50 *)
] (* test111.lgf:40.50-test111.lgf:40.51 *)
] (* test111.lgf:40.51-test111.lgf:40.52 *)
(* VAR_NAME *) ps (* test111.lgf:40.53-test111.lgf:40.55 *)
val (* test111.lgf:41.12-test111.lgf:41.15 *)
(* VAR_NAME *) xy (* test111.lgf:41.16-test111.lgf:41.18 *)
= (* test111.lgf:41.19-test111.lgf:41.20 *)
(* VAR_NAME *) fst (* test111.lgf:41.21-test111.lgf:41.24 *)
[ (* test111.lgf:41.25-test111.lgf:41.26 *)
(* CON_NAME *) Pair (* test111.lgf:41.26-test111.lgf:41.30 *)
[ (* test111.lgf:41.31-test111.lgf:41.32 *)
(* TYVAR_NAME *) 'a (* test111.lgf:41.32-test111.lgf:41.34 *)
, (* test111.lgf:41.34-test111.lgf:41.35 *)
(* TYVAR_NAME *) 'a (* test111.lgf:41.36-test111.lgf:41.38 *)
] (* test111.lgf:41.38-test111.lgf:41.39 *)
] (* test111.lgf:41.39-test111.lgf:41.40 *)
[ (* test111.lgf:41.41-test111.lgf:41.42 *)
(* CON_NAME *) RList (* test111.lgf:41.42-test111.lgf:41.47 *)
[ (* test111.lgf:41.48-test111.lgf:41.49 *)
(* CON_NAME *) Pair (* test111.lgf:41.49-test111.lgf:41.53 *)
[ (* test111.lgf:41.54-test111.lgf:41.55 *)
(* TYVAR_NAME *) 'a (* test111.lgf:41.55-test111.lgf:41.57 *)
, (* test111.lgf:41.57-test111.lgf:41.58 *)
(* TYVAR_NAME *) 'a (* test111.lgf:41.59-test111.lgf:41.61 *)
] (* test111.lgf:41.61-test111.lgf:41.62 *)
] (* test111.lgf:41.62-test111.lgf:41.63 *)
] (* test111.lgf:41.63-test111.lgf:41.64 *)
(* VAR_NAME *) xy_ps' (* test111.lgf:41.65-test111.lgf:41.71 *)
val (* test111.lgf:42.12-test111.lgf:42.15 *)
(* VAR_NAME *) x (* test111.lgf:42.16-test111.lgf:42.17 *)
= (* test111.lgf:42.18-test111.lgf:42.19 *)
(* VAR_NAME *) fst (* test111.lgf:42.20-test111.lgf:42.23 *)
[ (* test111.lgf:42.24-test111.lgf:42.25 *)
(* TYVAR_NAME *) 'a (* test111.lgf:42.25-test111.lgf:42.27 *)
] (* test111.lgf:42.27-test111.lgf:42.28 *)
[ (* test111.lgf:42.29-test111.lgf:42.30 *)
(* TYVAR_NAME *) 'a (* test111.lgf:42.30-test111.lgf:42.32 *)
] (* test111.lgf:42.32-test111.lgf:42.33 *)
(* VAR_NAME *) xy (* test111.lgf:42.34-test111.lgf:42.36 *)
val (* test111.lgf:43.12-test111.lgf:43.15 *)
(* VAR_NAME *) y (* test111.lgf:43.16-test111.lgf:43.17 *)
= (* test111.lgf:43.18-test111.lgf:43.19 *)
(* VAR_NAME *) snd (* test111.lgf:43.20-test111.lgf:43.23 *)
[ (* test111.lgf:43.24-test111.lgf:43.25 *)
(* TYVAR_NAME *) 'a (* test111.lgf:43.25-test111.lgf:43.27 *)
] (* test111.lgf:43.27-test111.lgf:43.28 *)
[ (* test111.lgf:43.29-test111.lgf:43.30 *)
(* TYVAR_NAME *) 'a (* test111.lgf:43.30-test111.lgf:43.32 *)
] (* test111.lgf:43.32-test111.lgf:43.33 *)
(* VAR_NAME *) xy (* test111.lgf:43.34-test111.lgf:43.36 *)
val (* test111.lgf:44.12-test111.lgf:44.15 *)
(* VAR_NAME *) ps' (* test111.lgf:44.16-test111.lgf:44.19 *)
= (* test111.lgf:44.20-test111.lgf:44.21 *)
(* VAR_NAME *) snd (* test111.lgf:44.22-test111.lgf:44.25 *)
[ (* test111.lgf:44.26-test111.lgf:44.27 *)
(* CON_NAME *) Pair (* test111.lgf:44.27-test111.lgf:44.31 *)
[ (* test111.lgf:44.32-test111.lgf:44.33 *)
(* TYVAR_NAME *) 'a (* test111.lgf:44.33-test111.lgf:44.35 *)
, (* test111.lgf:44.35-test111.lgf:44.36 *)
(* TYVAR_NAME *) 'a (* test111.lgf:44.37-test111.lgf:44.39 *)
] (* test111.lgf:44.39-test111.lgf:44.40 *)
] (* test111.lgf:44.40-test111.lgf:44.41 *)
[ (* test111.lgf:44.42-test111.lgf:44.43 *)
(* CON_NAME *) RList (* test111.lgf:44.43-test111.lgf:44.48 *)
[ (* test111.lgf:44.49-test111.lgf:44.50 *)
(* CON_NAME *) Pair (* test111.lgf:44.50-test111.lgf:44.54 *)
[ (* test111.lgf:44.55-test111.lgf:44.56 *)
(* TYVAR_NAME *) 'a (* test111.lgf:44.56-test111.lgf:44.58 *)
, (* test111.lgf:44.58-test111.lgf:44.59 *)
(* TYVAR_NAME *) 'a (* test111.lgf:44.60-test111.lgf:44.62 *)
] (* test111.lgf:44.62-test111.lgf:44.63 *)
] (* test111.lgf:44.63-test111.lgf:44.64 *)
] (* test111.lgf:44.64-test111.lgf:44.65 *)
(* VAR_NAME *) xy_ps' (* test111.lgf:44.66-test111.lgf:44.72 *)
in (* test111.lgf:45.9-test111.lgf:45.11 *)
(* VAR_NAME *) pair (* test111.lgf:46.12-test111.lgf:46.16 *)
[ (* test111.lgf:46.17-test111.lgf:46.18 *)
(* TYVAR_NAME *) 'a (* test111.lgf:46.18-test111.lgf:46.20 *)
] (* test111.lgf:46.20-test111.lgf:46.21 *)
[ (* test111.lgf:46.22-test111.lgf:46.23 *)
(* CON_NAME *) RList (* test111.lgf:46.23-test111.lgf:46.28 *)
[ (* test111.lgf:46.29-test111.lgf:46.30 *)
(* TYVAR_NAME *) 'a (* test111.lgf:46.30-test111.lgf:46.32 *)
] (* test111.lgf:46.32-test111.lgf:46.33 *)
] (* test111.lgf:46.33-test111.lgf:46.34 *)
(* VAR_NAME *) x (* test111.lgf:46.35-test111.lgf:46.36 *)
( (* test111.lgf:46.37-test111.lgf:46.38 *)
(* CON_NAME *) ROne (* test111.lgf:46.38-test111.lgf:46.42 *)
[ (* test111.lgf:46.43-test111.lgf:46.44 *)
(* TYVAR_NAME *) 'a (* test111.lgf:46.44-test111.lgf:46.46 *)
] (* test111.lgf:46.46-test111.lgf:46.47 *)
{ (* test111.lgf:46.48-test111.lgf:46.49 *)
(* VAR_NAME *) y (* test111.lgf:46.49-test111.lgf:46.50 *)
, (* test111.lgf:46.50-test111.lgf:46.51 *)
(* VAR_NAME *) ps' (* test111.lgf:46.52-test111.lgf:46.55 *)
} (* test111.lgf:46.55-test111.lgf:46.56 *)
) (* test111.lgf:46.56-test111.lgf:46.57 *)
end (* test111.lgf:47.9-test111.lgf:47.12 *)
end (* test111.lgf:48.3-test111.lgf:48.6 *)
val (* test111.lgf:49.0-test111.lgf:49.3 *)
(* VAR_NAME *) rlistHd (* test111.lgf:49.4-test111.lgf:49.11 *)
= (* test111.lgf:49.12-test111.lgf:49.13 *)
fn (* test111.lgf:49.14-test111.lgf:49.16 *)
[ (* test111.lgf:49.17-test111.lgf:49.18 *)
(* TYVAR_NAME *) 'a (* test111.lgf:49.18-test111.lgf:49.20 *)
] (* test111.lgf:49.20-test111.lgf:49.21 *)
( (* test111.lgf:49.22-test111.lgf:49.23 *)
(* VAR_NAME *) l (* test111.lgf:49.23-test111.lgf:49.24 *)
: (* test111.lgf:49.24-test111.lgf:49.25 *)
(* CON_NAME *) RList (* test111.lgf:49.26-test111.lgf:49.31 *)
[ (* test111.lgf:49.32-test111.lgf:49.33 *)
(* TYVAR_NAME *) 'a (* test111.lgf:49.33-test111.lgf:49.35 *)
] (* test111.lgf:49.35-test111.lgf:49.36 *)
) (* test111.lgf:49.36-test111.lgf:49.37 *)
=> (* test111.lgf:49.38-test111.lgf:49.40 *)
(* VAR_NAME *) fst (* test111.lgf:50.3-test111.lgf:50.6 *)
[ (* test111.lgf:50.7-test111.lgf:50.8 *)
(* TYVAR_NAME *) 'a (* test111.lgf:50.8-test111.lgf:50.10 *)
] (* test111.lgf:50.10-test111.lgf:50.11 *)
[ (* test111.lgf:50.12-test111.lgf:50.13 *)
(* CON_NAME *) RList (* test111.lgf:50.13-test111.lgf:50.18 *)
[ (* test111.lgf:50.19-test111.lgf:50.20 *)
(* TYVAR_NAME *) 'a (* test111.lgf:50.20-test111.lgf:50.22 *)
] (* test111.lgf:50.22-test111.lgf:50.23 *)
] (* test111.lgf:50.23-test111.lgf:50.24 *)
( (* test111.lgf:50.25-test111.lgf:50.26 *)
(* VAR_NAME *) rlistUncons (* test111.lgf:50.26-test111.lgf:50.37 *)
[ (* test111.lgf:50.38-test111.lgf:50.39 *)
(* TYVAR_NAME *) 'a (* test111.lgf:50.39-test111.lgf:50.41 *)
] (* test111.lgf:50.41-test111.lgf:50.42 *)
(* VAR_NAME *) l (* test111.lgf:50.43-test111.lgf:50.44 *)
) (* test111.lgf:50.44-test111.lgf:50.45 *)
val (* test111.lgf:51.0-test111.lgf:51.3 *)
(* VAR_NAME *) rlistTl (* test111.lgf:51.4-test111.lgf:51.11 *)
= (* test111.lgf:51.12-test111.lgf:51.13 *)
fn (* test111.lgf:51.14-test111.lgf:51.16 *)
[ (* test111.lgf:51.17-test111.lgf:51.18 *)
(* TYVAR_NAME *) 'a (* test111.lgf:51.18-test111.lgf:51.20 *)
] (* test111.lgf:51.20-test111.lgf:51.21 *)
( (* test111.lgf:51.22-test111.lgf:51.23 *)
(* VAR_NAME *) l (* test111.lgf:51.23-test111.lgf:51.24 *)
: (* test111.lgf:51.24-test111.lgf:51.25 *)
(* CON_NAME *) RList (* test111.lgf:51.26-test111.lgf:51.31 *)
[ (* test111.lgf:51.32-test111.lgf:51.33 *)
(* TYVAR_NAME *) 'a (* test111.lgf:51.33-test111.lgf:51.35 *)
] (* test111.lgf:51.35-test111.lgf:51.36 *)
) (* test111.lgf:51.36-test111.lgf:51.37 *)
=> (* test111.lgf:51.38-test111.lgf:51.40 *)
(* VAR_NAME *) snd (* test111.lgf:52.3-test111.lgf:52.6 *)
[ (* test111.lgf:52.7-test111.lgf:52.8 *)
(* TYVAR_NAME *) 'a (* test111.lgf:52.8-test111.lgf:52.10 *)
] (* test111.lgf:52.10-test111.lgf:52.11 *)
[ (* test111.lgf:52.12-test111.lgf:52.13 *)
(* CON_NAME *) RList (* test111.lgf:52.13-test111.lgf:52.18 *)
[ (* test111.lgf:52.19-test111.lgf:52.20 *)
(* TYVAR_NAME *) 'a (* test111.lgf:52.20-test111.lgf:52.22 *)
] (* test111.lgf:52.22-test111.lgf:52.23 *)
] (* test111.lgf:52.23-test111.lgf:52.24 *)
( (* test111.lgf:52.25-test111.lgf:52.26 *)
(* VAR_NAME *) rlistUncons (* test111.lgf:52.26-test111.lgf:52.37 *)
[ (* test111.lgf:52.38-test111.lgf:52.39 *)
(* TYVAR_NAME *) 'a (* test111.lgf:52.39-test111.lgf:52.41 *)
] (* test111.lgf:52.41-test111.lgf:52.42 *)
(* VAR_NAME *) l (* test111.lgf:52.43-test111.lgf:52.44 *)
) (* test111.lgf:52.44-test111.lgf:52.45 *)
fun (* test111.lgf:53.0-test111.lgf:53.3 *)
(* VAR_NAME *) rlistSize (* test111.lgf:53.4-test111.lgf:53.13 *)
[ (* test111.lgf:53.14-test111.lgf:53.15 *)
(* TYVAR_NAME *) 'a (* test111.lgf:53.15-test111.lgf:53.17 *)
] (* test111.lgf:53.17-test111.lgf:53.18 *)
( (* test111.lgf:53.19-test111.lgf:53.20 *)
(* VAR_NAME *) l (* test111.lgf:53.20-test111.lgf:53.21 *)
: (* test111.lgf:53.21-test111.lgf:53.22 *)
(* CON_NAME *) RList (* test111.lgf:53.23-test111.lgf:53.28 *)
[ (* test111.lgf:53.29-test111.lgf:53.30 *)
(* TYVAR_NAME *) 'a (* test111.lgf:53.30-test111.lgf:53.32 *)
] (* test111.lgf:53.32-test111.lgf:53.33 *)
) (* test111.lgf:53.33-test111.lgf:53.34 *)
: (* test111.lgf:53.35-test111.lgf:53.36 *)
(* CON_NAME *) Integer (* test111.lgf:53.37-test111.lgf:53.44 *)
= (* test111.lgf:53.45-test111.lgf:53.46 *)
case (* test111.lgf:54.3-test111.lgf:54.7 *)
(* VAR_NAME *) l (* test111.lgf:54.8-test111.lgf:54.9 *)
of (* test111.lgf:54.10-test111.lgf:54.12 *)
(* CON_NAME *) RNil (* test111.lgf:55.6-test111.lgf:55.10 *)
[ (* test111.lgf:55.11-test111.lgf:55.12 *)
(* TYVAR_NAME *) 'a (* test111.lgf:55.12-test111.lgf:55.14 *)
] (* test111.lgf:55.14-test111.lgf:55.15 *)
=> (* test111.lgf:55.16-test111.lgf:55.18 *)
(* INTEGER *) 0 (* test111.lgf:55.19-test111.lgf:55.20 *)
| (* test111.lgf:56.4-test111.lgf:56.5 *)
(* CON_NAME *) ROne (* test111.lgf:56.6-test111.lgf:56.10 *)
[ (* test111.lgf:56.11-test111.lgf:56.12 *)
(* TYVAR_NAME *) 'a (* test111.lgf:56.12-test111.lgf:56.14 *)
] (* test111.lgf:56.14-test111.lgf:56.15 *)
{ (* test111.lgf:56.16-test111.lgf:56.17 *)
(* VAR_NAME *) x (* test111.lgf:56.17-test111.lgf:56.18 *)
, (* test111.lgf:56.18-test111.lgf:56.19 *)
(* VAR_NAME *) ps (* test111.lgf:56.20-test111.lgf:56.22 *)
} (* test111.lgf:56.22-test111.lgf:56.23 *)
=> (* test111.lgf:56.24-test111.lgf:56.26 *)
(* INTEGER *) 1 (* test111.lgf:57.9-test111.lgf:57.10 *)
+ (* test111.lgf:57.11-test111.lgf:57.12 *)
( (* test111.lgf:57.13-test111.lgf:57.14 *)
(* INTEGER *) 2 (* test111.lgf:57.14-test111.lgf:57.15 *)
* (* test111.lgf:57.16-test111.lgf:57.17 *)
(* VAR_NAME *) rlistSize (* test111.lgf:57.18-test111.lgf:57.27 *)
[ (* test111.lgf:57.28-test111.lgf:57.29 *)
(* CON_NAME *) Pair (* test111.lgf:57.29-test111.lgf:57.33 *)
[ (* test111.lgf:57.34-test111.lgf:57.35 *)
(* TYVAR_NAME *) 'a (* test111.lgf:57.35-test111.lgf:57.37 *)
, (* test111.lgf:57.37-test111.lgf:57.38 *)
(* TYVAR_NAME *) 'a (* test111.lgf:57.39-test111.lgf:57.41 *)
] (* test111.lgf:57.41-test111.lgf:57.42 *)
] (* test111.lgf:57.42-test111.lgf:57.43 *)
(* VAR_NAME *) ps (* test111.lgf:57.44-test111.lgf:57.46 *)
) (* test111.lgf:57.46-test111.lgf:57.47 *)
| (* test111.lgf:58.4-test111.lgf:58.5 *)
(* CON_NAME *) RZero (* test111.lgf:58.6-test111.lgf:58.11 *)
[ (* test111.lgf:58.12-test111.lgf:58.13 *)
(* TYVAR_NAME *) 'a (* test111.lgf:58.13-test111.lgf:58.15 *)
] (* test111.lgf:58.15-test111.lgf:58.16 *)
{ (* test111.lgf:58.17-test111.lgf:58.18 *)
(* VAR_NAME *) ps (* test111.lgf:58.18-test111.lgf:58.20 *)
} (* test111.lgf:58.20-test111.lgf:58.21 *)
=> (* test111.lgf:58.22-test111.lgf:58.24 *)
(* INTEGER *) 2 (* test111.lgf:59.9-test111.lgf:59.10 *)
* (* test111.lgf:59.11-test111.lgf:59.12 *)
(* VAR_NAME *) rlistSize (* test111.lgf:59.13-test111.lgf:59.22 *)
[ (* test111.lgf:59.23-test111.lgf:59.24 *)
(* CON_NAME *) Pair (* test111.lgf:59.24-test111.lgf:59.28 *)
[ (* test111.lgf:59.29-test111.lgf:59.30 *)
(* TYVAR_NAME *) 'a (* test111.lgf:59.30-test111.lgf:59.32 *)
, (* test111.lgf:59.32-test111.lgf:59.33 *)
(* TYVAR_NAME *) 'a (* test111.lgf:59.34-test111.lgf:59.36 *)
] (* test111.lgf:59.36-test111.lgf:59.37 *)
] (* test111.lgf:59.37-test111.lgf:59.38 *)
(* VAR_NAME *) ps (* test111.lgf:59.39-test111.lgf:59.41 *)
end (* test111.lgf:60.3-test111.lgf:60.6 *)
fun (* test111.lgf:61.0-test111.lgf:61.3 *)
(* VAR_NAME *) rlistLookup (* test111.lgf:61.4-test111.lgf:61.15 *)
[ (* test111.lgf:61.16-test111.lgf:61.17 *)
(* TYVAR_NAME *) 'a (* test111.lgf:61.17-test111.lgf:61.19 *)
] (* test111.lgf:61.19-test111.lgf:61.20 *)
( (* test111.lgf:61.21-test111.lgf:61.22 *)
(* VAR_NAME *) i (* test111.lgf:61.22-test111.lgf:61.23 *)
: (* test111.lgf:61.23-test111.lgf:61.24 *)
(* CON_NAME *) Integer (* test111.lgf:61.25-test111.lgf:61.32 *)
) (* test111.lgf:61.32-test111.lgf:61.33 *)
( (* test111.lgf:61.34-test111.lgf:61.35 *)
(* VAR_NAME *) l (* test111.lgf:61.35-test111.lgf:61.36 *)
: (* test111.lgf:61.36-test111.lgf:61.37 *)
(* CON_NAME *) RList (* test111.lgf:61.38-test111.lgf:61.43 *)
[ (* test111.lgf:61.44-test111.lgf:61.45 *)
(* TYVAR_NAME *) 'a (* test111.lgf:61.45-test111.lgf:61.47 *)
] (* test111.lgf:61.47-test111.lgf:61.48 *)
) (* test111.lgf:61.48-test111.lgf:61.49 *)
: (* test111.lgf:61.50-test111.lgf:61.51 *)
(* TYVAR_NAME *) 'a (* test111.lgf:61.52-test111.lgf:61.54 *)
= (* test111.lgf:61.55-test111.lgf:61.56 *)
case (* test111.lgf:62.3-test111.lgf:62.7 *)
(* VAR_NAME *) l (* test111.lgf:62.8-test111.lgf:62.9 *)
of (* test111.lgf:62.10-test111.lgf:62.12 *)
(* CON_NAME *) RNil (* test111.lgf:63.6-test111.lgf:63.10 *)
[ (* test111.lgf:63.11-test111.lgf:63.12 *)
(* TYVAR_NAME *) 'a (* test111.lgf:63.12-test111.lgf:63.14 *)
] (* test111.lgf:63.14-test111.lgf:63.15 *)
=> (* test111.lgf:63.16-test111.lgf:63.18 *)
(* VAR_NAME *) fail (* test111.lgf:63.19-test111.lgf:63.23 *)
[ (* test111.lgf:63.24-test111.lgf:63.25 *)
(* TYVAR_NAME *) 'a (* test111.lgf:63.25-test111.lgf:63.27 *)
] (* test111.lgf:63.27-test111.lgf:63.28 *)
(* STRING *) "rlistLookup: RNil" (* test111.lgf:63.29-test111.lgf:63.48 *)
| (* test111.lgf:64.4-test111.lgf:64.5 *)
(* CON_NAME *) ROne (* test111.lgf:64.6-test111.lgf:64.10 *)
[ (* test111.lgf:64.11-test111.lgf:64.12 *)
(* TYVAR_NAME *) 'a (* test111.lgf:64.12-test111.lgf:64.14 *)
] (* test111.lgf:64.14-test111.lgf:64.15 *)
{ (* test111.lgf:64.16-test111.lgf:64.17 *)
(* VAR_NAME *) x (* test111.lgf:64.17-test111.lgf:64.18 *)
, (* test111.lgf:64.18-test111.lgf:64.19 *)
(* VAR_NAME *) ps (* test111.lgf:64.20-test111.lgf:64.22 *)
} (* test111.lgf:64.22-test111.lgf:64.23 *)
=> (* test111.lgf:64.24-test111.lgf:64.26 *)
if (* test111.lgf:65.9-test111.lgf:65.11 *)
(* VAR_NAME *) i (* test111.lgf:65.12-test111.lgf:65.13 *)
== (* test111.lgf:65.14-test111.lgf:65.16 *)
(* INTEGER *) 0 (* test111.lgf:65.17-test111.lgf:65.18 *)
then (* test111.lgf:65.19-test111.lgf:65.23 *)
(* VAR_NAME *) x (* test111.lgf:65.24-test111.lgf:65.25 *)
else (* test111.lgf:66.9-test111.lgf:66.13 *)
(* VAR_NAME *) rlistLookup (* test111.lgf:66.14-test111.lgf:66.25 *)
[ (* test111.lgf:66.26-test111.lgf:66.27 *)
(* TYVAR_NAME *) 'a (* test111.lgf:66.27-test111.lgf:66.29 *)
] (* test111.lgf:66.29-test111.lgf:66.30 *)
( (* test111.lgf:66.31-test111.lgf:66.32 *)
(* VAR_NAME *) i (* test111.lgf:66.32-test111.lgf:66.33 *)
- (* test111.lgf:66.34-test111.lgf:66.35 *)
(* INTEGER *) 1 (* test111.lgf:66.36-test111.lgf:66.37 *)
) (* test111.lgf:66.37-test111.lgf:66.38 *)
( (* test111.lgf:66.39-test111.lgf:66.40 *)
(* CON_NAME *) RZero (* test111.lgf:66.40-test111.lgf:66.45 *)
[ (* test111.lgf:66.46-test111.lgf:66.47 *)
(* TYVAR_NAME *) 'a (* test111.lgf:66.47-test111.lgf:66.49 *)
] (* test111.lgf:66.49-test111.lgf:66.50 *)
{ (* test111.lgf:66.51-test111.lgf:66.52 *)
(* VAR_NAME *) ps (* test111.lgf:66.52-test111.lgf:66.54 *)
} (* test111.lgf:66.54-test111.lgf:66.55 *)
) (* test111.lgf:66.55-test111.lgf:66.56 *)
| (* test111.lgf:67.4-test111.lgf:67.5 *)
(* CON_NAME *) RZero (* test111.lgf:67.6-test111.lgf:67.11 *)
[ (* test111.lgf:67.12-test111.lgf:67.13 *)
(* TYVAR_NAME *) 'a (* test111.lgf:67.13-test111.lgf:67.15 *)
] (* test111.lgf:67.15-test111.lgf:67.16 *)
{ (* test111.lgf:67.17-test111.lgf:67.18 *)
(* VAR_NAME *) ps (* test111.lgf:67.18-test111.lgf:67.20 *)
} (* test111.lgf:67.20-test111.lgf:67.21 *)
=> (* test111.lgf:67.22-test111.lgf:67.24 *)
let (* test111.lgf:68.9-test111.lgf:68.12 *)
val (* test111.lgf:68.13-test111.lgf:68.16 *)
(* VAR_NAME *) xy (* test111.lgf:68.17-test111.lgf:68.19 *)
= (* test111.lgf:68.20-test111.lgf:68.21 *)
(* VAR_NAME *) rlistLookup (* test111.lgf:68.22-test111.lgf:68.33 *)
[ (* test111.lgf:68.34-test111.lgf:68.35 *)
(* CON_NAME *) Pair (* test111.lgf:68.35-test111.lgf:68.39 *)
[ (* test111.lgf:68.40-test111.lgf:68.41 *)
(* TYVAR_NAME *) 'a (* test111.lgf:68.41-test111.lgf:68.43 *)
, (* test111.lgf:68.43-test111.lgf:68.44 *)
(* TYVAR_NAME *) 'a (* test111.lgf:68.45-test111.lgf:68.47 *)
] (* test111.lgf:68.47-test111.lgf:68.48 *)
] (* test111.lgf:68.48-test111.lgf:68.49 *)
( (* test111.lgf:68.50-test111.lgf:68.51 *)
(* VAR_NAME *) i (* test111.lgf:68.51-test111.lgf:68.52 *)
/ (* test111.lgf:68.53-test111.lgf:68.54 *)
(* INTEGER *) 2 (* test111.lgf:68.55-test111.lgf:68.56 *)
) (* test111.lgf:68.56-test111.lgf:68.57 *)
(* VAR_NAME *) ps (* test111.lgf:68.58-test111.lgf:68.60 *)
in (* test111.lgf:69.9-test111.lgf:69.11 *)
if (* test111.lgf:69.12-test111.lgf:69.14 *)
(* VAR_NAME *) i (* test111.lgf:69.15-test111.lgf:69.16 *)
% (* test111.lgf:69.17-test111.lgf:69.18 *)
(* INTEGER *) 2 (* test111.lgf:69.19-test111.lgf:69.20 *)
== (* test111.lgf:69.21-test111.lgf:69.23 *)
(* INTEGER *) 0 (* test111.lgf:69.24-test111.lgf:69.25 *)
then (* test111.lgf:69.26-test111.lgf:69.30 *)
(* VAR_NAME *) fst (* test111.lgf:69.31-test111.lgf:69.34 *)
[ (* test111.lgf:69.35-test111.lgf:69.36 *)
(* TYVAR_NAME *) 'a (* test111.lgf:69.36-test111.lgf:69.38 *)
] (* test111.lgf:69.38-test111.lgf:69.39 *)
[ (* test111.lgf:69.40-test111.lgf:69.41 *)
(* TYVAR_NAME *) 'a (* test111.lgf:69.41-test111.lgf:69.43 *)
] (* test111.lgf:69.43-test111.lgf:69.44 *)
(* VAR_NAME *) xy (* test111.lgf:69.45-test111.lgf:69.47 *)
else (* test111.lgf:69.48-test111.lgf:69.52 *)
(* VAR_NAME *) snd (* test111.lgf:69.53-test111.lgf:69.56 *)
[ (* test111.lgf:69.57-test111.lgf:69.58 *)
(* TYVAR_NAME *) 'a (* test111.lgf:69.58-test111.lgf:69.60 *)
] (* test111.lgf:69.60-test111.lgf:69.61 *)
[ (* test111.lgf:69.62-test111.lgf:69.63 *)
(* TYVAR_NAME *) 'a (* test111.lgf:69.63-test111.lgf:69.65 *)
] (* test111.lgf:69.65-test111.lgf:69.66 *)
(* VAR_NAME *) xy (* test111.lgf:69.67-test111.lgf:69.69 *)
end (* test111.lgf:70.9-test111.lgf:70.12 *)
end (* test111.lgf:71.3-test111.lgf:71.6 *)
fun (* test111.lgf:72.0-test111.lgf:72.3 *)
(* VAR_NAME *) rlistUpdateF (* test111.lgf:72.4-test111.lgf:72.16 *)
[ (* test111.lgf:72.17-test111.lgf:72.18 *)
(* TYVAR_NAME *) 'a (* test111.lgf:72.18-test111.lgf:72.20 *)
] (* test111.lgf:72.20-test111.lgf:72.21 *)
( (* test111.lgf:72.22-test111.lgf:72.23 *)
(* VAR_NAME *) i (* test111.lgf:72.23-test111.lgf:72.24 *)
: (* test111.lgf:72.24-test111.lgf:72.25 *)
(* CON_NAME *) Integer (* test111.lgf:72.26-test111.lgf:72.33 *)
) (* test111.lgf:72.33-test111.lgf:72.34 *)
( (* test111.lgf:72.35-test111.lgf:72.36 *)
(* VAR_NAME *) f (* test111.lgf:72.36-test111.lgf:72.37 *)
: (* test111.lgf:72.37-test111.lgf:72.38 *)
(* TYVAR_NAME *) 'a (* test111.lgf:72.39-test111.lgf:72.41 *)
-> (* test111.lgf:72.42-test111.lgf:72.44 *)
(* TYVAR_NAME *) 'a (* test111.lgf:72.45-test111.lgf:72.47 *)
) (* test111.lgf:72.47-test111.lgf:72.48 *)
( (* test111.lgf:72.49-test111.lgf:72.50 *)
(* VAR_NAME *) l (* test111.lgf:72.50-test111.lgf:72.51 *)
: (* test111.lgf:72.51-test111.lgf:72.52 *)
(* CON_NAME *) RList (* test111.lgf:72.53-test111.lgf:72.58 *)
[ (* test111.lgf:72.59-test111.lgf:72.60 *)
(* TYVAR_NAME *) 'a (* test111.lgf:72.60-test111.lgf:72.62 *)
] (* test111.lgf:72.62-test111.lgf:72.63 *)
) (* test111.lgf:72.63-test111.lgf:72.64 *)
: (* test111.lgf:72.65-test111.lgf:72.66 *)
(* CON_NAME *) RList (* test111.lgf:72.67-test111.lgf:72.72 *)
[ (* test111.lgf:72.73-test111.lgf:72.74 *)
(* TYVAR_NAME *) 'a (* test111.lgf:72.74-test111.lgf:72.76 *)
] (* test111.lgf:72.76-test111.lgf:72.77 *)
= (* test111.lgf:72.78-test111.lgf:72.79 *)
case (* test111.lgf:73.3-test111.lgf:73.7 *)
(* VAR_NAME *) l (* test111.lgf:73.8-test111.lgf:73.9 *)
of (* test111.lgf:73.10-test111.lgf:73.12 *)
(* CON_NAME *) RNil (* test111.lgf:74.6-test111.lgf:74.10 *)
[ (* test111.lgf:74.11-test111.lgf:74.12 *)
(* TYVAR_NAME *) 'a (* test111.lgf:74.12-test111.lgf:74.14 *)
] (* test111.lgf:74.14-test111.lgf:74.15 *)
=> (* test111.lgf:74.16-test111.lgf:74.18 *)
(* VAR_NAME *) fail (* test111.lgf:74.19-test111.lgf:74.23 *)
[ (* test111.lgf:74.24-test111.lgf:74.25 *)
(* CON_NAME *) RList (* test111.lgf:74.25-test111.lgf:74.30 *)
[ (* test111.lgf:74.31-test111.lgf:74.32 *)
(* TYVAR_NAME *) 'a (* test111.lgf:74.32-test111.lgf:74.34 *)
] (* test111.lgf:74.34-test111.lgf:74.35 *)
] (* test111.lgf:74.35-test111.lgf:74.36 *)
(* STRING *) "rlistUpdateF: RNil" (* test111.lgf:74.37-test111.lgf:74.57 *)
| (* test111.lgf:75.4-test111.lgf:75.5 *)
(* CON_NAME *) ROne (* test111.lgf:75.6-test111.lgf:75.10 *)
[ (* test111.lgf:75.11-test111.lgf:75.12 *)
(* TYVAR_NAME *) 'a (* test111.lgf:75.12-test111.lgf:75.14 *)
] (* test111.lgf:75.14-test111.lgf:75.15 *)
{ (* test111.lgf:75.16-test111.lgf:75.17 *)
(* VAR_NAME *) x (* test111.lgf:75.17-test111.lgf:75.18 *)
, (* test111.lgf:75.18-test111.lgf:75.19 *)
(* VAR_NAME *) ps (* test111.lgf:75.20-test111.lgf:75.22 *)
} (* test111.lgf:75.22-test111.lgf:75.23 *)
=> (* test111.lgf:75.24-test111.lgf:75.26 *)
if (* test111.lgf:76.9-test111.lgf:76.11 *)
(* VAR_NAME *) i (* test111.lgf:76.12-test111.lgf:76.13 *)
== (* test111.lgf:76.14-test111.lgf:76.16 *)
(* INTEGER *) 0 (* test111.lgf:76.17-test111.lgf:76.18 *)
then (* test111.lgf:76.19-test111.lgf:76.23 *)
(* CON_NAME *) ROne (* test111.lgf:76.24-test111.lgf:76.28 *)
[ (* test111.lgf:76.29-test111.lgf:76.30 *)
(* TYVAR_NAME *) 'a (* test111.lgf:76.30-test111.lgf:76.32 *)
] (* test111.lgf:76.32-test111.lgf:76.33 *)
{ (* test111.lgf:76.34-test111.lgf:76.35 *)
(* VAR_NAME *) f (* test111.lgf:76.35-test111.lgf:76.36 *)
(* VAR_NAME *) x (* test111.lgf:76.37-test111.lgf:76.38 *)
, (* test111.lgf:76.38-test111.lgf:76.39 *)
(* VAR_NAME *) ps (* test111.lgf:76.40-test111.lgf:76.42 *)
} (* test111.lgf:76.42-test111.lgf:76.43 *)
else (* test111.lgf:77.9-test111.lgf:77.13 *)
(* VAR_NAME *) rlistCons (* test111.lgf:77.14-test111.lgf:77.23 *)
[ (* test111.lgf:77.24-test111.lgf:77.25 *)
(* TYVAR_NAME *) 'a (* test111.lgf:77.25-test111.lgf:77.27 *)
] (* test111.lgf:77.27-test111.lgf:77.28 *)
(* VAR_NAME *) x (* test111.lgf:77.29-test111.lgf:77.30 *)
( (* test111.lgf:77.31-test111.lgf:77.32 *)
(* VAR_NAME *) rlistUpdateF (* test111.lgf:77.32-test111.lgf:77.44 *)
[ (* test111.lgf:77.45-test111.lgf:77.46 *)
(* TYVAR_NAME *) 'a (* test111.lgf:77.46-test111.lgf:77.48 *)
] (* test111.lgf:77.48-test111.lgf:77.49 *)
( (* test111.lgf:77.50-test111.lgf:77.51 *)
(* VAR_NAME *) i (* test111.lgf:77.51-test111.lgf:77.52 *)
- (* test111.lgf:77.53-test111.lgf:77.54 *)
(* INTEGER *) 1 (* test111.lgf:77.55-test111.lgf:77.56 *)
) (* test111.lgf:77.56-test111.lgf:77.57 *)
(* VAR_NAME *) f (* test111.lgf:77.58-test111.lgf:77.59 *)
( (* test111.lgf:77.60-test111.lgf:77.61 *)
(* CON_NAME *) RZero (* test111.lgf:77.61-test111.lgf:77.66 *)
[ (* test111.lgf:77.67-test111.lgf:77.68 *)
(* TYVAR_NAME *) 'a (* test111.lgf:77.68-test111.lgf:77.70 *)
] (* test111.lgf:77.70-test111.lgf:77.71 *)
{ (* test111.lgf:77.72-test111.lgf:77.73 *)
(* VAR_NAME *) ps (* test111.lgf:77.73-test111.lgf:77.75 *)
} (* test111.lgf:77.75-test111.lgf:77.76 *)
) (* test111.lgf:77.76-test111.lgf:77.77 *)
) (* test111.lgf:77.77-test111.lgf:77.78 *)
| (* test111.lgf:78.4-test111.lgf:78.5 *)
(* CON_NAME *) RZero (* test111.lgf:78.6-test111.lgf:78.11 *)
[ (* test111.lgf:78.12-test111.lgf:78.13 *)
(* TYVAR_NAME *) 'a (* test111.lgf:78.13-test111.lgf:78.15 *)
] (* test111.lgf:78.15-test111.lgf:78.16 *)
{ (* test111.lgf:78.17-test111.lgf:78.18 *)
(* VAR_NAME *) ps (* test111.lgf:78.18-test111.lgf:78.20 *)
} (* test111.lgf:78.20-test111.lgf:78.21 *)
=> (* test111.lgf:78.22-test111.lgf:78.24 *)
let (* test111.lgf:79.9-test111.lgf:79.12 *)
val (* test111.lgf:80.12-test111.lgf:80.15 *)
(* VAR_NAME *) f' (* test111.lgf:80.16-test111.lgf:80.18 *)
= (* test111.lgf:80.19-test111.lgf:80.20 *)
fn (* test111.lgf:80.21-test111.lgf:80.23 *)
( (* test111.lgf:80.24-test111.lgf:80.25 *)
(* VAR_NAME *) xy (* test111.lgf:80.25-test111.lgf:80.27 *)
: (* test111.lgf:80.27-test111.lgf:80.28 *)
(* CON_NAME *) Pair (* test111.lgf:80.29-test111.lgf:80.33 *)
[ (* test111.lgf:80.34-test111.lgf:80.35 *)
(* TYVAR_NAME *) 'a (* test111.lgf:80.35-test111.lgf:80.37 *)
, (* test111.lgf:80.37-test111.lgf:80.38 *)
(* TYVAR_NAME *) 'a (* test111.lgf:80.39-test111.lgf:80.41 *)
] (* test111.lgf:80.41-test111.lgf:80.42 *)
) (* test111.lgf:80.42-test111.lgf:80.43 *)
=> (* test111.lgf:80.44-test111.lgf:80.46 *)
let (* test111.lgf:81.15-test111.lgf:81.18 *)
val (* test111.lgf:82.18-test111.lgf:82.21 *)
(* VAR_NAME *) x (* test111.lgf:82.22-test111.lgf:82.23 *)
= (* test111.lgf:82.24-test111.lgf:82.25 *)
(* VAR_NAME *) fst (* test111.lgf:82.26-test111.lgf:82.29 *)
[ (* test111.lgf:82.30-test111.lgf:82.31 *)
(* TYVAR_NAME *) 'a (* test111.lgf:82.31-test111.lgf:82.33 *)
] (* test111.lgf:82.33-test111.lgf:82.34 *)
[ (* test111.lgf:82.35-test111.lgf:82.36 *)
(* TYVAR_NAME *) 'a (* test111.lgf:82.36-test111.lgf:82.38 *)
] (* test111.lgf:82.38-test111.lgf:82.39 *)
(* VAR_NAME *) xy (* test111.lgf:82.40-test111.lgf:82.42 *)
val (* test111.lgf:83.18-test111.lgf:83.21 *)
(* VAR_NAME *) y (* test111.lgf:83.22-test111.lgf:83.23 *)
= (* test111.lgf:83.24-test111.lgf:83.25 *)
(* VAR_NAME *) snd (* test111.lgf:83.26-test111.lgf:83.29 *)
[ (* test111.lgf:83.30-test111.lgf:83.31 *)
(* TYVAR_NAME *) 'a (* test111.lgf:83.31-test111.lgf:83.33 *)
] (* test111.lgf:83.33-test111.lgf:83.34 *)
[ (* test111.lgf:83.35-test111.lgf:83.36 *)
(* TYVAR_NAME *) 'a (* test111.lgf:83.36-test111.lgf:83.38 *)
] (* test111.lgf:83.38-test111.lgf:83.39 *)
(* VAR_NAME *) xy (* test111.lgf:83.40-test111.lgf:83.42 *)
in (* test111.lgf:84.15-test111.lgf:84.17 *)
if (* test111.lgf:85.18-test111.lgf:85.20 *)
(* VAR_NAME *) i (* test111.lgf:85.21-test111.lgf:85.22 *)
% (* test111.lgf:85.23-test111.lgf:85.24 *)
(* INTEGER *) 2 (* test111.lgf:85.25-test111.lgf:85.26 *)
== (* test111.lgf:85.27-test111.lgf:85.29 *)
(* INTEGER *) 0 (* test111.lgf:85.30-test111.lgf:85.31 *)
then (* test111.lgf:86.21-test111.lgf:86.25 *)
(* VAR_NAME *) pair (* test111.lgf:86.26-test111.lgf:86.30 *)
[ (* test111.lgf:86.31-test111.lgf:86.32 *)
(* TYVAR_NAME *) 'a (* test111.lgf:86.32-test111.lgf:86.34 *)
] (* test111.lgf:86.34-test111.lgf:86.35 *)
[ (* test111.lgf:86.36-test111.lgf:86.37 *)
(* TYVAR_NAME *) 'a (* test111.lgf:86.37-test111.lgf:86.39 *)
] (* test111.lgf:86.39-test111.lgf:86.40 *)
( (* test111.lgf:86.41-test111.lgf:86.42 *)
(* VAR_NAME *) f (* test111.lgf:86.42-test111.lgf:86.43 *)
(* VAR_NAME *) x (* test111.lgf:86.44-test111.lgf:86.45 *)
) (* test111.lgf:86.45-test111.lgf:86.46 *)
(* VAR_NAME *) y (* test111.lgf:86.47-test111.lgf:86.48 *)
else (* test111.lgf:87.21-test111.lgf:87.25 *)
(* VAR_NAME *) pair (* test111.lgf:87.26-test111.lgf:87.30 *)
[ (* test111.lgf:87.31-test111.lgf:87.32 *)
(* TYVAR_NAME *) 'a (* test111.lgf:87.32-test111.lgf:87.34 *)
] (* test111.lgf:87.34-test111.lgf:87.35 *)
[ (* test111.lgf:87.36-test111.lgf:87.37 *)
(* TYVAR_NAME *) 'a (* test111.lgf:87.37-test111.lgf:87.39 *)
] (* test111.lgf:87.39-test111.lgf:87.40 *)
(* VAR_NAME *) x (* test111.lgf:87.41-test111.lgf:87.42 *)
( (* test111.lgf:87.43-test111.lgf:87.44 *)
(* VAR_NAME *) f (* test111.lgf:87.44-test111.lgf:87.45 *)
(* VAR_NAME *) y (* test111.lgf:87.46-test111.lgf:87.47 *)
) (* test111.lgf:87.47-test111.lgf:87.48 *)
end (* test111.lgf:88.15-test111.lgf:88.18 *)
in (* test111.lgf:89.9-test111.lgf:89.11 *)
(* CON_NAME *) RZero (* test111.lgf:90.12-test111.lgf:90.17 *)
[ (* test111.lgf:90.18-test111.lgf:90.19 *)
(* TYVAR_NAME *) 'a (* test111.lgf:90.19-test111.lgf:90.21 *)
] (* test111.lgf:90.21-test111.lgf:90.22 *)
{ (* test111.lgf:90.23-test111.lgf:90.24 *)
(* VAR_NAME *) rlistUpdateF (* test111.lgf:90.24-test111.lgf:90.36 *)
[ (* test111.lgf:90.37-test111.lgf:90.38 *)
(* CON_NAME *) Pair (* test111.lgf:90.38-test111.lgf:90.42 *)
[ (* test111.lgf:90.43-test111.lgf:90.44 *)
(* TYVAR_NAME *) 'a (* test111.lgf:90.44-test111.lgf:90.46 *)
, (* test111.lgf:90.46-test111.lgf:90.47 *)
(* TYVAR_NAME *) 'a (* test111.lgf:90.48-test111.lgf:90.50 *)
] (* test111.lgf:90.50-test111.lgf:90.51 *)
] (* test111.lgf:90.51-test111.lgf:90.52 *)
( (* test111.lgf:90.53-test111.lgf:90.54 *)
(* VAR_NAME *) i (* test111.lgf:90.54-test111.lgf:90.55 *)
/ (* test111.lgf:90.56-test111.lgf:90.57 *)
(* INTEGER *) 2 (* test111.lgf:90.58-test111.lgf:90.59 *)
) (* test111.lgf:90.59-test111.lgf:90.60 *)
(* VAR_NAME *) f' (* test111.lgf:90.61-test111.lgf:90.63 *)
(* VAR_NAME *) ps (* test111.lgf:90.64-test111.lgf:90.66 *)
} (* test111.lgf:90.66-test111.lgf:90.67 *)
end (* test111.lgf:91.9-test111.lgf:91.12 *)
end (* test111.lgf:92.3-test111.lgf:92.6 *)
val (* test111.lgf:93.0-test111.lgf:93.3 *)
(* VAR_NAME *) rlistUpdate (* test111.lgf:93.4-test111.lgf:93.15 *)
= (* test111.lgf:93.16-test111.lgf:93.17 *)
fn (* test111.lgf:93.18-test111.lgf:93.20 *)
[ (* test111.lgf:93.21-test111.lgf:93.22 *)
(* TYVAR_NAME *) 'a (* test111.lgf:93.22-test111.lgf:93.24 *)
] (* test111.lgf:93.24-test111.lgf:93.25 *)
( (* test111.lgf:93.26-test111.lgf:93.27 *)
(* VAR_NAME *) i (* test111.lgf:93.27-test111.lgf:93.28 *)
: (* test111.lgf:93.28-test111.lgf:93.29 *)
(* CON_NAME *) Integer (* test111.lgf:93.30-test111.lgf:93.37 *)
) (* test111.lgf:93.37-test111.lgf:93.38 *)
( (* test111.lgf:93.39-test111.lgf:93.40 *)
(* VAR_NAME *) y (* test111.lgf:93.40-test111.lgf:93.41 *)
: (* test111.lgf:93.41-test111.lgf:93.42 *)
(* TYVAR_NAME *) 'a (* test111.lgf:93.43-test111.lgf:93.45 *)
) (* test111.lgf:93.45-test111.lgf:93.46 *)
( (* test111.lgf:93.47-test111.lgf:93.48 *)
(* VAR_NAME *) l (* test111.lgf:93.48-test111.lgf:93.49 *)
: (* test111.lgf:93.49-test111.lgf:93.50 *)
(* CON_NAME *) RList (* test111.lgf:93.51-test111.lgf:93.56 *)
[ (* test111.lgf:93.57-test111.lgf:93.58 *)
(* TYVAR_NAME *) 'a (* test111.lgf:93.58-test111.lgf:93.60 *)
] (* test111.lgf:93.60-test111.lgf:93.61 *)
) (* test111.lgf:93.61-test111.lgf:93.62 *)
=> (* test111.lgf:93.63-test111.lgf:93.65 *)
(* VAR_NAME *) rlistUpdateF (* test111.lgf:94.3-test111.lgf:94.15 *)
[ (* test111.lgf:94.16-test111.lgf:94.17 *)
(* TYVAR_NAME *) 'a (* test111.lgf:94.17-test111.lgf:94.19 *)
] (* test111.lgf:94.19-test111.lgf:94.20 *)
(* VAR_NAME *) i (* test111.lgf:94.21-test111.lgf:94.22 *)
( (* test111.lgf:94.23-test111.lgf:94.24 *)
fn (* test111.lgf:94.24-test111.lgf:94.26 *)
( (* test111.lgf:94.27-test111.lgf:94.28 *)
(* VAR_NAME *) x (* test111.lgf:94.28-test111.lgf:94.29 *)
: (* test111.lgf:94.29-test111.lgf:94.30 *)
(* TYVAR_NAME *) 'a (* test111.lgf:94.30-test111.lgf:94.32 *)
) (* test111.lgf:94.32-test111.lgf:94.33 *)
=> (* test111.lgf:94.34-test111.lgf:94.36 *)
(* VAR_NAME *) y (* test111.lgf:94.37-test111.lgf:94.38 *)
) (* test111.lgf:94.38-test111.lgf:94.39 *)
(* VAR_NAME *) l (* test111.lgf:94.40-test111.lgf:94.41 *)
fun (* test111.lgf:95.0-test111.lgf:95.3 *)
(* VAR_NAME *) rlistAllocate (* test111.lgf:95.4-test111.lgf:95.17 *)
[ (* test111.lgf:95.18-test111.lgf:95.19 *)
(* TYVAR_NAME *) 'a (* test111.lgf:95.19-test111.lgf:95.21 *)
] (* test111.lgf:95.21-test111.lgf:95.22 *)
( (* test111.lgf:95.23-test111.lgf:95.24 *)
(* VAR_NAME *) i (* test111.lgf:95.24-test111.lgf:95.25 *)
: (* test111.lgf:95.25-test111.lgf:95.26 *)
(* CON_NAME *) Integer (* test111.lgf:95.27-test111.lgf:95.34 *)
) (* test111.lgf:95.34-test111.lgf:95.35 *)
( (* test111.lgf:95.36-test111.lgf:95.37 *)
(* VAR_NAME *) v (* test111.lgf:95.37-test111.lgf:95.38 *)
: (* test111.lgf:95.38-test111.lgf:95.39 *)
(* TYVAR_NAME *) 'a (* test111.lgf:95.40-test111.lgf:95.42 *)
) (* test111.lgf:95.42-test111.lgf:95.43 *)
: (* test111.lgf:95.44-test111.lgf:95.45 *)
(* CON_NAME *) RList (* test111.lgf:95.46-test111.lgf:95.51 *)
[ (* test111.lgf:95.52-test111.lgf:95.53 *)
(* TYVAR_NAME *) 'a (* test111.lgf:95.53-test111.lgf:95.55 *)
] (* test111.lgf:95.55-test111.lgf:95.56 *)
= (* test111.lgf:95.57-test111.lgf:95.58 *)
let (* test111.lgf:96.2-test111.lgf:96.5 *)
fun (* test111.lgf:97.4-test111.lgf:97.7 *)
(* VAR_NAME *) loop (* test111.lgf:97.8-test111.lgf:97.12 *)
( (* test111.lgf:97.13-test111.lgf:97.14 *)
(* VAR_NAME *) l (* test111.lgf:97.14-test111.lgf:97.15 *)
: (* test111.lgf:97.15-test111.lgf:97.16 *)
(* CON_NAME *) RList (* test111.lgf:97.17-test111.lgf:97.22 *)
[ (* test111.lgf:97.23-test111.lgf:97.24 *)
(* TYVAR_NAME *) 'a (* test111.lgf:97.24-test111.lgf:97.26 *)
] (* test111.lgf:97.26-test111.lgf:97.27 *)
) (* test111.lgf:97.27-test111.lgf:97.28 *)
( (* test111.lgf:97.29-test111.lgf:97.30 *)
(* VAR_NAME *) j (* test111.lgf:97.30-test111.lgf:97.31 *)
: (* test111.lgf:97.31-test111.lgf:97.32 *)
(* CON_NAME *) Integer (* test111.lgf:97.33-test111.lgf:97.40 *)
) (* test111.lgf:97.40-test111.lgf:97.41 *)
: (* test111.lgf:97.42-test111.lgf:97.43 *)
(* CON_NAME *) RList (* test111.lgf:97.44-test111.lgf:97.49 *)
[ (* test111.lgf:97.50-test111.lgf:97.51 *)
(* TYVAR_NAME *) 'a (* test111.lgf:97.51-test111.lgf:97.53 *)
] (* test111.lgf:97.53-test111.lgf:97.54 *)
= (* test111.lgf:97.55-test111.lgf:97.56 *)
if (* test111.lgf:98.6-test111.lgf:98.8 *)
(* VAR_NAME *) j (* test111.lgf:98.9-test111.lgf:98.10 *)
< (* test111.lgf:98.11-test111.lgf:98.12 *)
(* INTEGER *) 0 (* test111.lgf:98.13-test111.lgf:98.14 *)
then (* test111.lgf:99.8-test111.lgf:99.12 *)
(* VAR_NAME *) l (* test111.lgf:99.13-test111.lgf:99.14 *)
else (* test111.lgf:100.6-test111.lgf:100.10 *)
(* VAR_NAME *) loop (* test111.lgf:100.11-test111.lgf:100.15 *)
( (* test111.lgf:100.16-test111.lgf:100.17 *)
(* VAR_NAME *) rlistCons (* test111.lgf:100.17-test111.lgf:100.26 *)
[ (* test111.lgf:100.27-test111.lgf:100.28 *)
(* TYVAR_NAME *) 'a (* test111.lgf:100.28-test111.lgf:100.30 *)
] (* test111.lgf:100.30-test111.lgf:100.31 *)
(* VAR_NAME *) v (* test111.lgf:100.32-test111.lgf:100.33 *)
(* VAR_NAME *) l (* test111.lgf:100.34-test111.lgf:100.35 *)
) (* test111.lgf:100.35-test111.lgf:100.36 *)
( (* test111.lgf:100.37-test111.lgf:100.38 *)
(* VAR_NAME *) j (* test111.lgf:100.38-test111.lgf:100.39 *)
- (* test111.lgf:100.40-test111.lgf:100.41 *)
(* INTEGER *) 1 (* test111.lgf:100.42-test111.lgf:100.43 *)
) (* test111.lgf:100.43-test111.lgf:100.44 *)
val (* test111.lgf:101.4-test111.lgf:101.7 *)
(* VAR_NAME *) l (* test111.lgf:101.8-test111.lgf:101.9 *)
= (* test111.lgf:101.10-test111.lgf:101.11 *)
(* VAR_NAME *) loop (* test111.lgf:101.12-test111.lgf:101.16 *)
( (* test111.lgf:101.17-test111.lgf:101.18 *)
(* VAR_NAME *) rlistEmpty (* test111.lgf:101.18-test111.lgf:101.28 *)
[ (* test111.lgf:101.29-test111.lgf:101.30 *)
(* TYVAR_NAME *) 'a (* test111.lgf:101.30-test111.lgf:101.32 *)
] (* test111.lgf:101.32-test111.lgf:101.33 *)
) (* test111.lgf:101.33-test111.lgf:101.34 *)
( (* test111.lgf:101.35-test111.lgf:101.36 *)
(* VAR_NAME *) i (* test111.lgf:101.36-test111.lgf:101.37 *)
- (* test111.lgf:101.38-test111.lgf:101.39 *)
(* INTEGER *) 1 (* test111.lgf:101.40-test111.lgf:101.41 *)
) (* test111.lgf:101.41-test111.lgf:101.42 *)
in (* test111.lgf:102.2-test111.lgf:102.4 *)
(* VAR_NAME *) l (* test111.lgf:103.4-test111.lgf:103.5 *)
end (* test111.lgf:104.2-test111.lgf:104.5 *)
fun (* test111.lgf:108.0-test111.lgf:108.3 *)
(* VAR_NAME *) intToString (* test111.lgf:108.4-test111.lgf:108.15 *)
( (* test111.lgf:108.16-test111.lgf:108.17 *)
(* VAR_NAME *) i (* test111.lgf:108.17-test111.lgf:108.18 *)
: (* test111.lgf:108.18-test111.lgf:108.19 *)
(* CON_NAME *) Integer (* test111.lgf:108.19-test111.lgf:108.26 *)
) (* test111.lgf:108.26-test111.lgf:108.27 *)
: (* test111.lgf:108.28-test111.lgf:108.29 *)
(* CON_NAME *) String (* test111.lgf:108.30-test111.lgf:108.36 *)
= (* test111.lgf:108.37-test111.lgf:108.38 *)
if (* test111.lgf:109.3-test111.lgf:109.5 *)
(* VAR_NAME *) i (* test111.lgf:109.6-test111.lgf:109.7 *)
< (* test111.lgf:109.8-test111.lgf:109.9 *)
(* INTEGER *) 0 (* test111.lgf:109.10-test111.lgf:109.11 *)
then (* test111.lgf:109.12-test111.lgf:109.16 *)
(* STRING *) "~" (* test111.lgf:109.17-test111.lgf:109.20 *)
^ (* test111.lgf:109.21-test111.lgf:109.22 *)
( (* test111.lgf:109.23-test111.lgf:109.24 *)
(* VAR_NAME *) intToString (* test111.lgf:109.24-test111.lgf:109.35 *)
( (* test111.lgf:109.36-test111.lgf:109.37 *)
~ (* test111.lgf:109.37-test111.lgf:109.38 *)
(* VAR_NAME *) i (* test111.lgf:109.38-test111.lgf:109.39 *)
) (* test111.lgf:109.39-test111.lgf:109.40 *)
) (* test111.lgf:109.40-test111.lgf:109.41 *)
else (* test111.lgf:110.3-test111.lgf:110.7 *)
if (* test111.lgf:110.8-test111.lgf:110.10 *)
(* VAR_NAME *) i (* test111.lgf:110.11-test111.lgf:110.12 *)
== (* test111.lgf:110.13-test111.lgf:110.15 *)
(* INTEGER *) 0 (* test111.lgf:110.16-test111.lgf:110.17 *)
then (* test111.lgf:110.18-test111.lgf:110.22 *)
(* STRING *) "0" (* test111.lgf:110.23-test111.lgf:110.26 *)
else (* test111.lgf:111.3-test111.lgf:111.7 *)
if (* test111.lgf:111.8-test111.lgf:111.10 *)
(* VAR_NAME *) i (* test111.lgf:111.11-test111.lgf:111.12 *)
== (* test111.lgf:111.13-test111.lgf:111.15 *)
(* INTEGER *) 1 (* test111.lgf:111.16-test111.lgf:111.17 *)
then (* test111.lgf:111.18-test111.lgf:111.22 *)
(* STRING *) "1" (* test111.lgf:111.23-test111.lgf:111.26 *)
else (* test111.lgf:112.3-test111.lgf:112.7 *)
if (* test111.lgf:112.8-test111.lgf:112.10 *)
(* VAR_NAME *) i (* test111.lgf:112.11-test111.lgf:112.12 *)
== (* test111.lgf:112.13-test111.lgf:112.15 *)
(* INTEGER *) 2 (* test111.lgf:112.16-test111.lgf:112.17 *)
then (* test111.lgf:112.18-test111.lgf:112.22 *)
(* STRING *) "2" (* test111.lgf:112.23-test111.lgf:112.26 *)
else (* test111.lgf:113.3-test111.lgf:113.7 *)
if (* test111.lgf:113.8-test111.lgf:113.10 *)
(* VAR_NAME *) i (* test111.lgf:113.11-test111.lgf:113.12 *)
== (* test111.lgf:113.13-test111.lgf:113.15 *)
(* INTEGER *) 3 (* test111.lgf:113.16-test111.lgf:113.17 *)
then (* test111.lgf:113.18-test111.lgf:113.22 *)
(* STRING *) "3" (* test111.lgf:113.23-test111.lgf:113.26 *)
else (* test111.lgf:114.3-test111.lgf:114.7 *)
if (* test111.lgf:114.8-test111.lgf:114.10 *)
(* VAR_NAME *) i (* test111.lgf:114.11-test111.lgf:114.12 *)
== (* test111.lgf:114.13-test111.lgf:114.15 *)
(* INTEGER *) 4 (* test111.lgf:114.16-test111.lgf:114.17 *)
then (* test111.lgf:114.18-test111.lgf:114.22 *)
(* STRING *) "4" (* test111.lgf:114.23-test111.lgf:114.26 *)
else (* test111.lgf:115.3-test111.lgf:115.7 *)
if (* test111.lgf:115.8-test111.lgf:115.10 *)
(* VAR_NAME *) i (* test111.lgf:115.11-test111.lgf:115.12 *)
== (* test111.lgf:115.13-test111.lgf:115.15 *)
(* INTEGER *) 5 (* test111.lgf:115.16-test111.lgf:115.17 *)
then (* test111.lgf:115.18-test111.lgf:115.22 *)
(* STRING *) "5" (* test111.lgf:115.23-test111.lgf:115.26 *)
else (* test111.lgf:116.3-test111.lgf:116.7 *)
if (* test111.lgf:116.8-test111.lgf:116.10 *)
(* VAR_NAME *) i (* test111.lgf:116.11-test111.lgf:116.12 *)
== (* test111.lgf:116.13-test111.lgf:116.15 *)
(* INTEGER *) 6 (* test111.lgf:116.16-test111.lgf:116.17 *)
then (* test111.lgf:116.18-test111.lgf:116.22 *)
(* STRING *) "6" (* test111.lgf:116.23-test111.lgf:116.26 *)
else (* test111.lgf:117.3-test111.lgf:117.7 *)
if (* test111.lgf:117.8-test111.lgf:117.10 *)
(* VAR_NAME *) i (* test111.lgf:117.11-test111.lgf:117.12 *)
== (* test111.lgf:117.13-test111.lgf:117.15 *)
(* INTEGER *) 7 (* test111.lgf:117.16-test111.lgf:117.17 *)
then (* test111.lgf:117.18-test111.lgf:117.22 *)
(* STRING *) "7" (* test111.lgf:117.23-test111.lgf:117.26 *)
else (* test111.lgf:118.3-test111.lgf:118.7 *)
if (* test111.lgf:118.8-test111.lgf:118.10 *)
(* VAR_NAME *) i (* test111.lgf:118.11-test111.lgf:118.12 *)
== (* test111.lgf:118.13-test111.lgf:118.15 *)
(* INTEGER *) 8 (* test111.lgf:118.16-test111.lgf:118.17 *)
then (* test111.lgf:118.18-test111.lgf:118.22 *)
(* STRING *) "8" (* test111.lgf:118.23-test111.lgf:118.26 *)
else (* test111.lgf:119.3-test111.lgf:119.7 *)
if (* test111.lgf:119.8-test111.lgf:119.10 *)
(* VAR_NAME *) i (* test111.lgf:119.11-test111.lgf:119.12 *)
== (* test111.lgf:119.13-test111.lgf:119.15 *)
(* INTEGER *) 9 (* test111.lgf:119.16-test111.lgf:119.17 *)
then (* test111.lgf:119.18-test111.lgf:119.22 *)
(* STRING *) "9" (* test111.lgf:119.23-test111.lgf:119.26 *)
else (* test111.lgf:120.3-test111.lgf:120.7 *)
( (* test111.lgf:120.8-test111.lgf:120.9 *)
(* VAR_NAME *) intToString (* test111.lgf:120.9-test111.lgf:120.20 *)
( (* test111.lgf:120.21-test111.lgf:120.22 *)
(* VAR_NAME *) i (* test111.lgf:120.22-test111.lgf:120.23 *)
/ (* test111.lgf:120.24-test111.lgf:120.25 *)
(* INTEGER *) 10 (* test111.lgf:120.26-test111.lgf:120.28 *)
) (* test111.lgf:120.28-test111.lgf:120.29 *)
) (* test111.lgf:120.29-test111.lgf:120.30 *)
^ (* test111.lgf:120.31-test111.lgf:120.32 *)
( (* test111.lgf:120.33-test111.lgf:120.34 *)
(* VAR_NAME *) intToString (* test111.lgf:120.34-test111.lgf:120.45 *)
( (* test111.lgf:120.46-test111.lgf:120.47 *)
(* VAR_NAME *) i (* test111.lgf:120.47-test111.lgf:120.48 *)
% (* test111.lgf:120.49-test111.lgf:120.50 *)
(* INTEGER *) 10 (* test111.lgf:120.51-test111.lgf:120.53 *)
) (* test111.lgf:120.53-test111.lgf:120.54 *)
) (* test111.lgf:120.54-test111.lgf:120.55 *)
val (* test111.lgf:122.0-test111.lgf:122.3 *)
(* VAR_NAME *) ord0 (* test111.lgf:122.4-test111.lgf:122.8 *)
= (* test111.lgf:122.9-test111.lgf:122.10 *)
(* VAR_NAME *) subscript (* test111.lgf:122.11-test111.lgf:122.20 *)
(* STRING *) "0" (* test111.lgf:122.21-test111.lgf:122.24 *)
(* INTEGER *) 0 (* test111.lgf:122.25-test111.lgf:122.26 *)
val (* test111.lgf:123.0-test111.lgf:123.3 *)
(* VAR_NAME *) ord9 (* test111.lgf:123.4-test111.lgf:123.8 *)
= (* test111.lgf:123.9-test111.lgf:123.10 *)
(* VAR_NAME *) subscript (* test111.lgf:123.11-test111.lgf:123.20 *)
(* STRING *) "9" (* test111.lgf:123.21-test111.lgf:123.24 *)
(* INTEGER *) 0 (* test111.lgf:123.25-test111.lgf:123.26 *)
fun (* test111.lgf:125.0-test111.lgf:125.3 *)
(* VAR_NAME *) charToDigit (* test111.lgf:125.4-test111.lgf:125.15 *)
( (* test111.lgf:125.16-test111.lgf:125.17 *)
(* VAR_NAME *) c (* test111.lgf:125.17-test111.lgf:125.18 *)
: (* test111.lgf:125.18-test111.lgf:125.19 *)
(* CON_NAME *) Integer (* test111.lgf:125.20-test111.lgf:125.27 *)
) (* test111.lgf:125.27-test111.lgf:125.28 *)
: (* test111.lgf:125.29-test111.lgf:125.30 *)
(* CON_NAME *) Option (* test111.lgf:125.31-test111.lgf:125.37 *)
[ (* test111.lgf:125.38-test111.lgf:125.39 *)
(* CON_NAME *) Integer (* test111.lgf:125.39-test111.lgf:125.46 *)
] (* test111.lgf:125.46-test111.lgf:125.47 *)
= (* test111.lgf:125.48-test111.lgf:125.49 *)
if (* test111.lgf:126.2-test111.lgf:126.4 *)
(* VAR_NAME *) ord0 (* test111.lgf:126.5-test111.lgf:126.9 *)
<= (* test111.lgf:126.10-test111.lgf:126.12 *)
(* VAR_NAME *) c (* test111.lgf:126.13-test111.lgf:126.14 *)
andalso (* test111.lgf:126.15-test111.lgf:126.22 *)
(* VAR_NAME *) c (* test111.lgf:126.23-test111.lgf:126.24 *)
<= (* test111.lgf:126.25-test111.lgf:126.27 *)
(* VAR_NAME *) ord9 (* test111.lgf:126.28-test111.lgf:126.32 *)
then (* test111.lgf:127.4-test111.lgf:127.8 *)
(* CON_NAME *) Some (* test111.lgf:127.9-test111.lgf:127.13 *)
[ (* test111.lgf:127.14-test111.lgf:127.15 *)
(* CON_NAME *) Integer (* test111.lgf:127.15-test111.lgf:127.22 *)
] (* test111.lgf:127.22-test111.lgf:127.23 *)
{ (* test111.lgf:127.24-test111.lgf:127.25 *)
(* VAR_NAME *) c (* test111.lgf:127.25-test111.lgf:127.26 *)
- (* test111.lgf:127.27-test111.lgf:127.28 *)
(* VAR_NAME *) ord0 (* test111.lgf:127.29-test111.lgf:127.33 *)
} (* test111.lgf:127.33-test111.lgf:127.34 *)
else (* test111.lgf:128.4-test111.lgf:128.8 *)
(* CON_NAME *) None (* test111.lgf:128.9-test111.lgf:128.13 *)
[ (* test111.lgf:128.14-test111.lgf:128.15 *)
(* CON_NAME *) Integer (* test111.lgf:128.15-test111.lgf:128.22 *)
] (* test111.lgf:128.22-test111.lgf:128.23 *)
fun (* test111.lgf:130.0-test111.lgf:130.3 *)
(* VAR_NAME *) stringToInt (* test111.lgf:130.4-test111.lgf:130.15 *)
( (* test111.lgf:130.16-test111.lgf:130.17 *)
(* VAR_NAME *) s (* test111.lgf:130.17-test111.lgf:130.18 *)
: (* test111.lgf:130.19-test111.lgf:130.20 *)
(* CON_NAME *) String (* test111.lgf:130.21-test111.lgf:130.27 *)
) (* test111.lgf:130.27-test111.lgf:130.28 *)
: (* test111.lgf:130.29-test111.lgf:130.30 *)
(* CON_NAME *) Option (* test111.lgf:130.31-test111.lgf:130.37 *)
[ (* test111.lgf:130.38-test111.lgf:130.39 *)
(* CON_NAME *) Integer (* test111.lgf:130.39-test111.lgf:130.46 *)
] (* test111.lgf:130.46-test111.lgf:130.47 *)
= (* test111.lgf:130.48-test111.lgf:130.49 *)
let (* test111.lgf:131.2-test111.lgf:131.5 *)
val (* test111.lgf:132.4-test111.lgf:132.7 *)
(* VAR_NAME *) sz (* test111.lgf:132.8-test111.lgf:132.10 *)
= (* test111.lgf:132.11-test111.lgf:132.12 *)
(* VAR_NAME *) size (* test111.lgf:132.13-test111.lgf:132.17 *)
(* VAR_NAME *) s (* test111.lgf:132.18-test111.lgf:132.19 *)
fun (* test111.lgf:133.4-test111.lgf:133.7 *)
(* VAR_NAME *) loop (* test111.lgf:133.8-test111.lgf:133.12 *)
( (* test111.lgf:133.13-test111.lgf:133.14 *)
(* VAR_NAME *) pos (* test111.lgf:133.14-test111.lgf:133.17 *)
: (* test111.lgf:133.17-test111.lgf:133.18 *)
(* CON_NAME *) Integer (* test111.lgf:133.19-test111.lgf:133.26 *)
) (* test111.lgf:133.26-test111.lgf:133.27 *)
( (* test111.lgf:133.28-test111.lgf:133.29 *)
(* VAR_NAME *) acc (* test111.lgf:133.29-test111.lgf:133.32 *)
: (* test111.lgf:133.32-test111.lgf:133.33 *)
(* CON_NAME *) Integer (* test111.lgf:133.34-test111.lgf:133.41 *)
) (* test111.lgf:133.41-test111.lgf:133.42 *)
: (* test111.lgf:133.43-test111.lgf:133.44 *)
(* CON_NAME *) Option (* test111.lgf:133.45-test111.lgf:133.51 *)
[ (* test111.lgf:133.52-test111.lgf:133.53 *)
(* CON_NAME *) Integer (* test111.lgf:133.53-test111.lgf:133.60 *)
] (* test111.lgf:133.60-test111.lgf:133.61 *)
= (* test111.lgf:133.62-test111.lgf:133.63 *)
if (* test111.lgf:134.6-test111.lgf:134.8 *)
(* VAR_NAME *) pos (* test111.lgf:134.9-test111.lgf:134.12 *)
< (* test111.lgf:134.13-test111.lgf:134.14 *)
(* VAR_NAME *) sz (* test111.lgf:134.15-test111.lgf:134.17 *)
then (* test111.lgf:135.8-test111.lgf:135.12 *)
case (* test111.lgf:135.13-test111.lgf:135.17 *)
(* VAR_NAME *) charToDigit (* test111.lgf:135.18-test111.lgf:135.29 *)
( (* test111.lgf:135.30-test111.lgf:135.31 *)
(* VAR_NAME *) subscript (* test111.lgf:135.31-test111.lgf:135.40 *)
(* VAR_NAME *) s (* test111.lgf:135.41-test111.lgf:135.42 *)
(* VAR_NAME *) pos (* test111.lgf:135.43-test111.lgf:135.46 *)
) (* test111.lgf:135.46-test111.lgf:135.47 *)
of (* test111.lgf:135.48-test111.lgf:135.50 *)
(* CON_NAME *) None (* test111.lgf:136.16-test111.lgf:136.20 *)
[ (* test111.lgf:136.21-test111.lgf:136.22 *)
(* CON_NAME *) Integer (* test111.lgf:136.22-test111.lgf:136.29 *)
] (* test111.lgf:136.29-test111.lgf:136.30 *)
=> (* test111.lgf:136.31-test111.lgf:136.33 *)
(* CON_NAME *) None (* test111.lgf:136.34-test111.lgf:136.38 *)
[ (* test111.lgf:136.39-test111.lgf:136.40 *)
(* CON_NAME *) Integer (* test111.lgf:136.40-test111.lgf:136.47 *)
] (* test111.lgf:136.47-test111.lgf:136.48 *)
| (* test111.lgf:137.14-test111.lgf:137.15 *)
(* CON_NAME *) Some (* test111.lgf:137.16-test111.lgf:137.20 *)
[ (* test111.lgf:137.21-test111.lgf:137.22 *)
(* CON_NAME *) Integer (* test111.lgf:137.22-test111.lgf:137.29 *)
] (* test111.lgf:137.29-test111.lgf:137.30 *)
{ (* test111.lgf:137.31-test111.lgf:137.32 *)
(* VAR_NAME *) i (* test111.lgf:137.32-test111.lgf:137.33 *)
} (* test111.lgf:137.33-test111.lgf:137.34 *)
=> (* test111.lgf:137.35-test111.lgf:137.37 *)
(* VAR_NAME *) loop (* test111.lgf:137.38-test111.lgf:137.42 *)
( (* test111.lgf:137.43-test111.lgf:137.44 *)
(* VAR_NAME *) pos (* test111.lgf:137.44-test111.lgf:137.47 *)
+ (* test111.lgf:137.48-test111.lgf:137.49 *)
(* INTEGER *) 1 (* test111.lgf:137.50-test111.lgf:137.51 *)
) (* test111.lgf:137.51-test111.lgf:137.52 *)
( (* test111.lgf:137.53-test111.lgf:137.54 *)
(* VAR_NAME *) acc (* test111.lgf:137.54-test111.lgf:137.57 *)
* (* test111.lgf:137.58-test111.lgf:137.59 *)
(* INTEGER *) 10 (* test111.lgf:137.60-test111.lgf:137.62 *)
+ (* test111.lgf:137.63-test111.lgf:137.64 *)
(* VAR_NAME *) i (* test111.lgf:137.65-test111.lgf:137.66 *)
) (* test111.lgf:137.66-test111.lgf:137.67 *)
end (* test111.lgf:138.13-test111.lgf:138.16 *)
else (* test111.lgf:139.6-test111.lgf:139.10 *)
(* CON_NAME *) Some (* test111.lgf:139.11-test111.lgf:139.15 *)
[ (* test111.lgf:139.16-test111.lgf:139.17 *)
(* CON_NAME *) Integer (* test111.lgf:139.17-test111.lgf:139.24 *)
] (* test111.lgf:139.24-test111.lgf:139.25 *)
{ (* test111.lgf:139.26-test111.lgf:139.27 *)
(* VAR_NAME *) acc (* test111.lgf:139.27-test111.lgf:139.30 *)
} (* test111.lgf:139.30-test111.lgf:139.31 *)
in (* test111.lgf:140.2-test111.lgf:140.4 *)
if (* test111.lgf:141.4-test111.lgf:141.6 *)
(* VAR_NAME *) sz (* test111.lgf:141.7-test111.lgf:141.9 *)
> (* test111.lgf:141.10-test111.lgf:141.11 *)
(* INTEGER *) 0 (* test111.lgf:141.12-test111.lgf:141.13 *)
then (* test111.lgf:142.6-test111.lgf:142.10 *)
(* VAR_NAME *) loop (* test111.lgf:142.11-test111.lgf:142.15 *)
(* INTEGER *) 0 (* test111.lgf:142.16-test111.lgf:142.17 *)
(* INTEGER *) 0 (* test111.lgf:142.18-test111.lgf:142.19 *)
else (* test111.lgf:143.4-test111.lgf:143.8 *)
(* CON_NAME *) None (* test111.lgf:143.9-test111.lgf:143.13 *)
[ (* test111.lgf:143.14-test111.lgf:143.15 *)
(* CON_NAME *) Integer (* test111.lgf:143.15-test111.lgf:143.22 *)
] (* test111.lgf:143.22-test111.lgf:143.23 *)
end (* test111.lgf:144.2-test111.lgf:144.5 *)
val (* test111.lgf:148.0-test111.lgf:148.3 *)
(* VAR_NAME *) fib (* test111.lgf:148.4-test111.lgf:148.7 *)
: (* test111.lgf:148.8-test111.lgf:148.9 *)
(* CON_NAME *) Integer (* test111.lgf:148.10-test111.lgf:148.17 *)
-> (* test111.lgf:148.18-test111.lgf:148.20 *)
(* CON_NAME *) Integer (* test111.lgf:148.21-test111.lgf:148.28 *)
= (* test111.lgf:148.29-test111.lgf:148.30 *)
let (* test111.lgf:149.2-test111.lgf:149.5 *)
val (* test111.lgf:150.4-test111.lgf:150.7 *)
(* VAR_NAME *) a (* test111.lgf:150.8-test111.lgf:150.9 *)
= (* test111.lgf:150.10-test111.lgf:150.11 *)
(* VAR_NAME *) rlistAllocate (* test111.lgf:150.12-test111.lgf:150.25 *)
[ (* test111.lgf:150.26-test111.lgf:150.27 *)
(* CON_NAME *) Option (* test111.lgf:150.27-test111.lgf:150.33 *)
[ (* test111.lgf:150.34-test111.lgf:150.35 *)
(* CON_NAME *) Integer (* test111.lgf:150.35-test111.lgf:150.42 *)
] (* test111.lgf:150.42-test111.lgf:150.43 *)
] (* test111.lgf:150.43-test111.lgf:150.44 *)
(* INTEGER *) 2 (* test111.lgf:150.45-test111.lgf:150.46 *)
( (* test111.lgf:150.47-test111.lgf:150.48 *)
(* CON_NAME *) None (* test111.lgf:150.48-test111.lgf:150.52 *)
[ (* test111.lgf:150.53-test111.lgf:150.54 *)
(* CON_NAME *) Integer (* test111.lgf:150.54-test111.lgf:150.61 *)
] (* test111.lgf:150.61-test111.lgf:150.62 *)
) (* test111.lgf:150.62-test111.lgf:150.63 *)
fun (* test111.lgf:151.4-test111.lgf:151.7 *)
(* VAR_NAME *) expand (* test111.lgf:151.8-test111.lgf:151.14 *)
( (* test111.lgf:151.15-test111.lgf:151.16 *)
(* VAR_NAME *) old (* test111.lgf:151.16-test111.lgf:151.19 *)
: (* test111.lgf:151.20-test111.lgf:151.21 *)
(* CON_NAME *) RList (* test111.lgf:151.22-test111.lgf:151.27 *)
[ (* test111.lgf:151.28-test111.lgf:151.29 *)
(* CON_NAME *) Option (* test111.lgf:151.29-test111.lgf:151.35 *)
[ (* test111.lgf:151.36-test111.lgf:151.37 *)
(* CON_NAME *) Integer (* test111.lgf:151.37-test111.lgf:151.44 *)
] (* test111.lgf:151.44-test111.lgf:151.45 *)
] (* test111.lgf:151.45-test111.lgf:151.46 *)
) (* test111.lgf:151.46-test111.lgf:151.47 *)
: (* test111.lgf:151.48-test111.lgf:151.49 *)
(* CON_NAME *) RList (* test111.lgf:151.50-test111.lgf:151.55 *)
[ (* test111.lgf:151.56-test111.lgf:151.57 *)
(* CON_NAME *) Option (* test111.lgf:151.57-test111.lgf:151.63 *)
[ (* test111.lgf:151.64-test111.lgf:151.65 *)
(* CON_NAME *) Integer (* test111.lgf:151.65-test111.lgf:151.72 *)
] (* test111.lgf:151.72-test111.lgf:151.73 *)
] (* test111.lgf:151.73-test111.lgf:151.74 *)
= (* test111.lgf:151.75-test111.lgf:151.76 *)
let (* test111.lgf:152.6-test111.lgf:152.9 *)
val (* test111.lgf:153.8-test111.lgf:153.11 *)
(* VAR_NAME *) new (* test111.lgf:153.12-test111.lgf:153.15 *)
= (* test111.lgf:153.16-test111.lgf:153.17 *)
(* VAR_NAME *) rlistAllocate (* test111.lgf:153.18-test111.lgf:153.31 *)
[ (* test111.lgf:153.32-test111.lgf:153.33 *)
(* CON_NAME *) Option (* test111.lgf:153.33-test111.lgf:153.39 *)
[ (* test111.lgf:153.40-test111.lgf:153.41 *)
(* CON_NAME *) Integer (* test111.lgf:153.41-test111.lgf:153.48 *)
] (* test111.lgf:153.48-test111.lgf:153.49 *)
] (* test111.lgf:153.49-test111.lgf:153.50 *)
( (* test111.lgf:153.51-test111.lgf:153.52 *)
(* INTEGER *) 2 (* test111.lgf:153.52-test111.lgf:153.53 *)
* (* test111.lgf:153.54-test111.lgf:153.55 *)
( (* test111.lgf:153.56-test111.lgf:153.57 *)
(* VAR_NAME *) rlistSize (* test111.lgf:153.57-test111.lgf:153.66 *)
[ (* test111.lgf:153.67-test111.lgf:153.68 *)
(* CON_NAME *) Option (* test111.lgf:153.68-test111.lgf:153.74 *)
[ (* test111.lgf:153.75-test111.lgf:153.76 *)
(* CON_NAME *) Integer (* test111.lgf:153.76-test111.lgf:153.83 *)
] (* test111.lgf:153.83-test111.lgf:153.84 *)
] (* test111.lgf:153.84-test111.lgf:153.85 *)
(* VAR_NAME *) old (* test111.lgf:153.86-test111.lgf:153.89 *)
) (* test111.lgf:153.89-test111.lgf:153.90 *)
) (* test111.lgf:153.90-test111.lgf:153.91 *)
( (* test111.lgf:153.92-test111.lgf:153.93 *)
(* CON_NAME *) None (* test111.lgf:153.93-test111.lgf:153.97 *)
[ (* test111.lgf:153.98-test111.lgf:153.99 *)
(* CON_NAME *) Integer (* test111.lgf:153.99-test111.lgf:153.106 *)
] (* test111.lgf:153.106-test111.lgf:153.107 *)
) (* test111.lgf:153.107-test111.lgf:153.108 *)
fun (* test111.lgf:154.8-test111.lgf:154.11 *)
(* VAR_NAME *) loop (* test111.lgf:154.12-test111.lgf:154.16 *)
( (* test111.lgf:154.17-test111.lgf:154.18 *)
(* VAR_NAME *) new (* test111.lgf:154.18-test111.lgf:154.21 *)
: (* test111.lgf:154.21-test111.lgf:154.22 *)
(* CON_NAME *) RList (* test111.lgf:154.23-test111.lgf:154.28 *)
[ (* test111.lgf:154.29-test111.lgf:154.30 *)
(* CON_NAME *) Option (* test111.lgf:154.30-test111.lgf:154.36 *)
[ (* test111.lgf:154.37-test111.lgf:154.38 *)
(* CON_NAME *) Integer (* test111.lgf:154.38-test111.lgf:154.45 *)
] (* test111.lgf:154.45-test111.lgf:154.46 *)
] (* test111.lgf:154.46-test111.lgf:154.47 *)
) (* test111.lgf:154.47-test111.lgf:154.48 *)
( (* test111.lgf:154.49-test111.lgf:154.50 *)
(* VAR_NAME *) i (* test111.lgf:154.50-test111.lgf:154.51 *)
: (* test111.lgf:154.51-test111.lgf:154.52 *)
(* CON_NAME *) Integer (* test111.lgf:154.52-test111.lgf:154.59 *)
) (* test111.lgf:154.59-test111.lgf:154.60 *)
: (* test111.lgf:154.61-test111.lgf:154.62 *)
(* CON_NAME *) RList (* test111.lgf:154.63-test111.lgf:154.68 *)
[ (* test111.lgf:154.69-test111.lgf:154.70 *)
(* CON_NAME *) Option (* test111.lgf:154.70-test111.lgf:154.76 *)
[ (* test111.lgf:154.77-test111.lgf:154.78 *)
(* CON_NAME *) Integer (* test111.lgf:154.78-test111.lgf:154.85 *)
] (* test111.lgf:154.85-test111.lgf:154.86 *)
] (* test111.lgf:154.86-test111.lgf:154.87 *)
= (* test111.lgf:154.88-test111.lgf:154.89 *)
if (* test111.lgf:155.10-test111.lgf:155.12 *)
(* VAR_NAME *) i (* test111.lgf:155.13-test111.lgf:155.14 *)
< (* test111.lgf:155.15-test111.lgf:155.16 *)
(* VAR_NAME *) rlistSize (* test111.lgf:155.17-test111.lgf:155.26 *)
[ (* test111.lgf:155.27-test111.lgf:155.28 *)
(* CON_NAME *) Option (* test111.lgf:155.28-test111.lgf:155.34 *)
[ (* test111.lgf:155.35-test111.lgf:155.36 *)
(* CON_NAME *) Integer (* test111.lgf:155.36-test111.lgf:155.43 *)
] (* test111.lgf:155.43-test111.lgf:155.44 *)
] (* test111.lgf:155.44-test111.lgf:155.45 *)
(* VAR_NAME *) old (* test111.lgf:155.46-test111.lgf:155.49 *)
then (* test111.lgf:156.12-test111.lgf:156.16 *)
(* VAR_NAME *) loop (* test111.lgf:156.17-test111.lgf:156.21 *)
( (* test111.lgf:156.22-test111.lgf:156.23 *)
(* VAR_NAME *) rlistUpdate (* test111.lgf:156.23-test111.lgf:156.34 *)
[ (* test111.lgf:156.35-test111.lgf:156.36 *)
(* CON_NAME *) Option (* test111.lgf:156.36-test111.lgf:156.42 *)
[ (* test111.lgf:156.43-test111.lgf:156.44 *)
(* CON_NAME *) Integer (* test111.lgf:156.44-test111.lgf:156.51 *)
] (* test111.lgf:156.51-test111.lgf:156.52 *)
] (* test111.lgf:156.52-test111.lgf:156.53 *)
(* VAR_NAME *) i (* test111.lgf:156.54-test111.lgf:156.55 *)
( (* test111.lgf:156.56-test111.lgf:156.57 *)
(* VAR_NAME *) rlistLookup (* test111.lgf:156.57-test111.lgf:156.68 *)
[ (* test111.lgf:156.69-test111.lgf:156.70 *)
(* CON_NAME *) Option (* test111.lgf:156.70-test111.lgf:156.76 *)
[ (* test111.lgf:156.77-test111.lgf:156.78 *)
(* CON_NAME *) Integer (* test111.lgf:156.78-test111.lgf:156.85 *)
] (* test111.lgf:156.85-test111.lgf:156.86 *)
] (* test111.lgf:156.86-test111.lgf:156.87 *)
(* VAR_NAME *) i (* test111.lgf:156.88-test111.lgf:156.89 *)
(* VAR_NAME *) old (* test111.lgf:156.90-test111.lgf:156.93 *)
) (* test111.lgf:156.93-test111.lgf:156.94 *)
(* VAR_NAME *) new (* test111.lgf:156.95-test111.lgf:156.98 *)
) (* test111.lgf:156.98-test111.lgf:156.99 *)
( (* test111.lgf:156.100-test111.lgf:156.101 *)
(* VAR_NAME *) i (* test111.lgf:156.101-test111.lgf:156.102 *)
+ (* test111.lgf:156.103-test111.lgf:156.104 *)
(* INTEGER *) 1 (* test111.lgf:156.105-test111.lgf:156.106 *)
) (* test111.lgf:156.106-test111.lgf:156.107 *)
else (* test111.lgf:157.10-test111.lgf:157.14 *)
(* VAR_NAME *) new (* test111.lgf:157.15-test111.lgf:157.18 *)
in (* test111.lgf:158.6-test111.lgf:158.8 *)
(* VAR_NAME *) loop (* test111.lgf:159.8-test111.lgf:159.12 *)
(* VAR_NAME *) new (* test111.lgf:159.13-test111.lgf:159.16 *)
(* INTEGER *) 0 (* test111.lgf:159.17-test111.lgf:159.18 *)
end (* test111.lgf:160.6-test111.lgf:160.9 *)
val (* test111.lgf:161.4-test111.lgf:161.7 *)
(* VAR_NAME *) a (* test111.lgf:161.8-test111.lgf:161.9 *)
= (* test111.lgf:161.10-test111.lgf:161.11 *)
(* VAR_NAME *) rlistUpdate (* test111.lgf:161.12-test111.lgf:161.23 *)
[ (* test111.lgf:161.24-test111.lgf:161.25 *)
(* CON_NAME *) Option (* test111.lgf:161.25-test111.lgf:161.31 *)
[ (* test111.lgf:161.32-test111.lgf:161.33 *)
(* CON_NAME *) Integer (* test111.lgf:161.33-test111.lgf:161.40 *)
] (* test111.lgf:161.40-test111.lgf:161.41 *)
] (* test111.lgf:161.41-test111.lgf:161.42 *)
(* INTEGER *) 0 (* test111.lgf:161.43-test111.lgf:161.44 *)
( (* test111.lgf:161.45-test111.lgf:161.46 *)
(* CON_NAME *) Some (* test111.lgf:161.46-test111.lgf:161.50 *)
[ (* test111.lgf:161.51-test111.lgf:161.52 *)
(* CON_NAME *) Integer (* test111.lgf:161.52-test111.lgf:161.59 *)
] (* test111.lgf:161.59-test111.lgf:161.60 *)
{ (* test111.lgf:161.61-test111.lgf:161.62 *)
(* INTEGER *) 1 (* test111.lgf:161.62-test111.lgf:161.63 *)
} (* test111.lgf:161.63-test111.lgf:161.64 *)
) (* test111.lgf:161.64-test111.lgf:161.65 *)
(* VAR_NAME *) a (* test111.lgf:161.66-test111.lgf:161.67 *)
val (* test111.lgf:162.4-test111.lgf:162.7 *)
(* VAR_NAME *) a (* test111.lgf:162.8-test111.lgf:162.9 *)
= (* test111.lgf:162.10-test111.lgf:162.11 *)
(* VAR_NAME *) rlistUpdate (* test111.lgf:162.12-test111.lgf:162.23 *)
[ (* test111.lgf:162.24-test111.lgf:162.25 *)
(* CON_NAME *) Option (* test111.lgf:162.25-test111.lgf:162.31 *)
[ (* test111.lgf:162.32-test111.lgf:162.33 *)
(* CON_NAME *) Integer (* test111.lgf:162.33-test111.lgf:162.40 *)
] (* test111.lgf:162.40-test111.lgf:162.41 *)
] (* test111.lgf:162.41-test111.lgf:162.42 *)
(* INTEGER *) 1 (* test111.lgf:162.43-test111.lgf:162.44 *)
( (* test111.lgf:162.45-test111.lgf:162.46 *)
(* CON_NAME *) Some (* test111.lgf:162.46-test111.lgf:162.50 *)
[ (* test111.lgf:162.51-test111.lgf:162.52 *)
(* CON_NAME *) Integer (* test111.lgf:162.52-test111.lgf:162.59 *)
] (* test111.lgf:162.59-test111.lgf:162.60 *)
{ (* test111.lgf:162.61-test111.lgf:162.62 *)
(* INTEGER *) 1 (* test111.lgf:162.62-test111.lgf:162.63 *)
} (* test111.lgf:162.63-test111.lgf:162.64 *)
) (* test111.lgf:162.64-test111.lgf:162.65 *)
(* VAR_NAME *) a (* test111.lgf:162.66-test111.lgf:162.67 *)
fun (* test111.lgf:163.4-test111.lgf:163.7 *)
(* VAR_NAME *) fib (* test111.lgf:163.8-test111.lgf:163.11 *)
( (* test111.lgf:163.12-test111.lgf:163.13 *)
(* VAR_NAME *) a (* test111.lgf:163.13-test111.lgf:163.14 *)
: (* test111.lgf:163.14-test111.lgf:163.15 *)
(* CON_NAME *) RList (* test111.lgf:163.16-test111.lgf:163.21 *)
[ (* test111.lgf:163.22-test111.lgf:163.23 *)
(* CON_NAME *) Option (* test111.lgf:163.23-test111.lgf:163.29 *)
[ (* test111.lgf:163.30-test111.lgf:163.31 *)
(* CON_NAME *) Integer (* test111.lgf:163.31-test111.lgf:163.38 *)
] (* test111.lgf:163.38-test111.lgf:163.39 *)
] (* test111.lgf:163.39-test111.lgf:163.40 *)
) (* test111.lgf:163.40-test111.lgf:163.41 *)
( (* test111.lgf:163.42-test111.lgf:163.43 *)
(* VAR_NAME *) i (* test111.lgf:163.43-test111.lgf:163.44 *)
: (* test111.lgf:163.44-test111.lgf:163.45 *)
(* CON_NAME *) Integer (* test111.lgf:163.45-test111.lgf:163.52 *)
) (* test111.lgf:163.52-test111.lgf:163.53 *)
: (* test111.lgf:163.54-test111.lgf:163.55 *)
(* CON_NAME *) Pair (* test111.lgf:163.56-test111.lgf:163.60 *)
[ (* test111.lgf:163.61-test111.lgf:163.62 *)
(* CON_NAME *) Integer (* test111.lgf:163.62-test111.lgf:163.69 *)
, (* test111.lgf:163.69-test111.lgf:163.70 *)
(* CON_NAME *) RList (* test111.lgf:163.71-test111.lgf:163.76 *)
[ (* test111.lgf:163.77-test111.lgf:163.78 *)
(* CON_NAME *) Option (* test111.lgf:163.78-test111.lgf:163.84 *)
[ (* test111.lgf:163.85-test111.lgf:163.86 *)
(* CON_NAME *) Integer (* test111.lgf:163.86-test111.lgf:163.93 *)
] (* test111.lgf:163.93-test111.lgf:163.94 *)
] (* test111.lgf:163.94-test111.lgf:163.95 *)
] (* test111.lgf:163.95-test111.lgf:163.96 *)
= (* test111.lgf:163.97-test111.lgf:163.98 *)
if (* test111.lgf:164.6-test111.lgf:164.8 *)
(* VAR_NAME *) i (* test111.lgf:164.9-test111.lgf:164.10 *)
< (* test111.lgf:164.11-test111.lgf:164.12 *)
(* INTEGER *) 0 (* test111.lgf:164.13-test111.lgf:164.14 *)
then (* test111.lgf:165.8-test111.lgf:165.12 *)
(* CON_NAME *) Pair (* test111.lgf:165.13-test111.lgf:165.17 *)
[ (* test111.lgf:165.18-test111.lgf:165.19 *)
(* CON_NAME *) Integer (* test111.lgf:165.19-test111.lgf:165.26 *)
, (* test111.lgf:165.26-test111.lgf:165.27 *)
(* CON_NAME *) RList (* test111.lgf:165.28-test111.lgf:165.33 *)
[ (* test111.lgf:165.34-test111.lgf:165.35 *)
(* CON_NAME *) Option (* test111.lgf:165.35-test111.lgf:165.41 *)
[ (* test111.lgf:165.42-test111.lgf:165.43 *)
(* CON_NAME *) Integer (* test111.lgf:165.43-test111.lgf:165.50 *)
] (* test111.lgf:165.50-test111.lgf:165.51 *)
] (* test111.lgf:165.51-test111.lgf:165.52 *)
] (* test111.lgf:165.52-test111.lgf:165.53 *)
{ (* test111.lgf:165.54-test111.lgf:165.55 *)
(* INTEGER *) ~1 (* test111.lgf:165.55-test111.lgf:165.57 *)
, (* test111.lgf:165.57-test111.lgf:165.58 *)
(* VAR_NAME *) a (* test111.lgf:165.59-test111.lgf:165.60 *)
} (* test111.lgf:165.60-test111.lgf:165.61 *)
else (* test111.lgf:166.6-test111.lgf:166.10 *)
if (* test111.lgf:166.11-test111.lgf:166.13 *)
(* VAR_NAME *) i (* test111.lgf:166.14-test111.lgf:166.15 *)
< (* test111.lgf:166.16-test111.lgf:166.17 *)
(* VAR_NAME *) rlistSize (* test111.lgf:166.18-test111.lgf:166.27 *)
[ (* test111.lgf:166.28-test111.lgf:166.29 *)
(* CON_NAME *) Option (* test111.lgf:166.29-test111.lgf:166.35 *)
[ (* test111.lgf:166.36-test111.lgf:166.37 *)
(* CON_NAME *) Integer (* test111.lgf:166.37-test111.lgf:166.44 *)
] (* test111.lgf:166.44-test111.lgf:166.45 *)
] (* test111.lgf:166.45-test111.lgf:166.46 *)
(* VAR_NAME *) a (* test111.lgf:166.47-test111.lgf:166.48 *)
then (* test111.lgf:167.8-test111.lgf:167.12 *)
case (* test111.lgf:167.13-test111.lgf:167.17 *)
(* VAR_NAME *) rlistLookup (* test111.lgf:167.18-test111.lgf:167.29 *)
[ (* test111.lgf:167.30-test111.lgf:167.31 *)
(* CON_NAME *) Option (* test111.lgf:167.31-test111.lgf:167.37 *)
[ (* test111.lgf:167.38-test111.lgf:167.39 *)
(* CON_NAME *) Integer (* test111.lgf:167.39-test111.lgf:167.46 *)
] (* test111.lgf:167.46-test111.lgf:167.47 *)
] (* test111.lgf:167.47-test111.lgf:167.48 *)
(* VAR_NAME *) i (* test111.lgf:167.49-test111.lgf:167.50 *)
(* VAR_NAME *) a (* test111.lgf:167.51-test111.lgf:167.52 *)
of (* test111.lgf:167.53-test111.lgf:167.55 *)
(* CON_NAME *) Some (* test111.lgf:168.16-test111.lgf:168.20 *)
[ (* test111.lgf:168.21-test111.lgf:168.22 *)
(* CON_NAME *) Integer (* test111.lgf:168.22-test111.lgf:168.29 *)
] (* test111.lgf:168.29-test111.lgf:168.30 *)
{ (* test111.lgf:168.31-test111.lgf:168.32 *)
(* VAR_NAME *) r (* test111.lgf:168.32-test111.lgf:168.33 *)
} (* test111.lgf:168.33-test111.lgf:168.34 *)
=> (* test111.lgf:168.35-test111.lgf:168.37 *)
(* CON_NAME *) Pair (* test111.lgf:168.38-test111.lgf:168.42 *)
[ (* test111.lgf:168.43-test111.lgf:168.44 *)
(* CON_NAME *) Integer (* test111.lgf:168.44-test111.lgf:168.51 *)
, (* test111.lgf:168.51-test111.lgf:168.52 *)
(* CON_NAME *) RList (* test111.lgf:168.53-test111.lgf:168.58 *)
[ (* test111.lgf:168.59-test111.lgf:168.60 *)
(* CON_NAME *) Option (* test111.lgf:168.60-test111.lgf:168.66 *)
[ (* test111.lgf:168.67-test111.lgf:168.68 *)
(* CON_NAME *) Integer (* test111.lgf:168.68-test111.lgf:168.75 *)
] (* test111.lgf:168.75-test111.lgf:168.76 *)
] (* test111.lgf:168.76-test111.lgf:168.77 *)
] (* test111.lgf:168.77-test111.lgf:168.78 *)
{ (* test111.lgf:168.79-test111.lgf:168.80 *)
(* VAR_NAME *) r (* test111.lgf:168.80-test111.lgf:168.81 *)
, (* test111.lgf:168.81-test111.lgf:168.82 *)
(* VAR_NAME *) a (* test111.lgf:168.83-test111.lgf:168.84 *)
} (* test111.lgf:168.84-test111.lgf:168.85 *)
| (* test111.lgf:169.14-test111.lgf:169.15 *)
(* CON_NAME *) None (* test111.lgf:169.16-test111.lgf:169.20 *)
[ (* test111.lgf:169.21-test111.lgf:169.22 *)
(* CON_NAME *) Integer (* test111.lgf:169.22-test111.lgf:169.29 *)
] (* test111.lgf:169.29-test111.lgf:169.30 *)
=> (* test111.lgf:169.31-test111.lgf:169.33 *)
case (* test111.lgf:170.18-test111.lgf:170.22 *)
(* VAR_NAME *) fib (* test111.lgf:170.23-test111.lgf:170.26 *)
(* VAR_NAME *) a (* test111.lgf:170.27-test111.lgf:170.28 *)
( (* test111.lgf:170.29-test111.lgf:170.30 *)
(* VAR_NAME *) i (* test111.lgf:170.30-test111.lgf:170.31 *)
- (* test111.lgf:170.32-test111.lgf:170.33 *)
(* INTEGER *) 1 (* test111.lgf:170.34-test111.lgf:170.35 *)
) (* test111.lgf:170.35-test111.lgf:170.36 *)
of (* test111.lgf:170.37-test111.lgf:170.39 *)
(* CON_NAME *) Pair (* test111.lgf:171.20-test111.lgf:171.24 *)
[ (* test111.lgf:171.25-test111.lgf:171.26 *)
(* CON_NAME *) Integer (* test111.lgf:171.26-test111.lgf:171.33 *)
, (* test111.lgf:171.33-test111.lgf:171.34 *)
(* CON_NAME *) RList (* test111.lgf:171.35-test111.lgf:171.40 *)
[ (* test111.lgf:171.41-test111.lgf:171.42 *)
(* CON_NAME *) Option (* test111.lgf:171.42-test111.lgf:171.48 *)
[ (* test111.lgf:171.49-test111.lgf:171.50 *)
(* CON_NAME *) Integer (* test111.lgf:171.50-test111.lgf:171.57 *)
] (* test111.lgf:171.57-test111.lgf:171.58 *)
] (* test111.lgf:171.58-test111.lgf:171.59 *)
] (* test111.lgf:171.59-test111.lgf:171.60 *)
{ (* test111.lgf:171.61-test111.lgf:171.62 *)
(* VAR_NAME *) x (* test111.lgf:171.62-test111.lgf:171.63 *)
, (* test111.lgf:171.63-test111.lgf:171.64 *)
(* VAR_NAME *) a (* test111.lgf:171.65-test111.lgf:171.66 *)
} (* test111.lgf:171.66-test111.lgf:171.67 *)
=> (* test111.lgf:171.68-test111.lgf:171.70 *)
case (* test111.lgf:172.22-test111.lgf:172.26 *)
(* VAR_NAME *) fib (* test111.lgf:172.27-test111.lgf:172.30 *)
(* VAR_NAME *) a (* test111.lgf:172.31-test111.lgf:172.32 *)
( (* test111.lgf:172.33-test111.lgf:172.34 *)
(* VAR_NAME *) i (* test111.lgf:172.34-test111.lgf:172.35 *)
- (* test111.lgf:172.36-test111.lgf:172.37 *)
(* INTEGER *) 2 (* test111.lgf:172.38-test111.lgf:172.39 *)
) (* test111.lgf:172.39-test111.lgf:172.40 *)
of (* test111.lgf:172.41-test111.lgf:172.43 *)
(* CON_NAME *) Pair (* test111.lgf:173.24-test111.lgf:173.28 *)
[ (* test111.lgf:173.29-test111.lgf:173.30 *)
(* CON_NAME *) Integer (* test111.lgf:173.30-test111.lgf:173.37 *)
, (* test111.lgf:173.37-test111.lgf:173.38 *)
(* CON_NAME *) RList (* test111.lgf:173.39-test111.lgf:173.44 *)
[ (* test111.lgf:173.45-test111.lgf:173.46 *)
(* CON_NAME *) Option (* test111.lgf:173.46-test111.lgf:173.52 *)
[ (* test111.lgf:173.53-test111.lgf:173.54 *)
(* CON_NAME *) Integer (* test111.lgf:173.54-test111.lgf:173.61 *)
] (* test111.lgf:173.61-test111.lgf:173.62 *)
] (* test111.lgf:173.62-test111.lgf:173.63 *)
] (* test111.lgf:173.63-test111.lgf:173.64 *)
{ (* test111.lgf:173.65-test111.lgf:173.66 *)
(* VAR_NAME *) y (* test111.lgf:173.66-test111.lgf:173.67 *)
, (* test111.lgf:173.67-test111.lgf:173.68 *)
(* VAR_NAME *) a (* test111.lgf:173.69-test111.lgf:173.70 *)
} (* test111.lgf:173.70-test111.lgf:173.71 *)
=> (* test111.lgf:173.72-test111.lgf:173.74 *)
let (* test111.lgf:174.26-test111.lgf:174.29 *)
val (* test111.lgf:175.28-test111.lgf:175.31 *)
(* VAR_NAME *) r (* test111.lgf:175.32-test111.lgf:175.33 *)
= (* test111.lgf:175.34-test111.lgf:175.35 *)
(* VAR_NAME *) x (* test111.lgf:175.36-test111.lgf:175.37 *)
+ (* test111.lgf:175.38-test111.lgf:175.39 *)
(* VAR_NAME *) y (* test111.lgf:175.40-test111.lgf:175.41 *)
val (* test111.lgf:176.28-test111.lgf:176.31 *)
(* VAR_NAME *) a (* test111.lgf:176.32-test111.lgf:176.33 *)
= (* test111.lgf:176.34-test111.lgf:176.35 *)
(* VAR_NAME *) rlistUpdate (* test111.lgf:176.36-test111.lgf:176.47 *)
[ (* test111.lgf:176.48-test111.lgf:176.49 *)
(* CON_NAME *) Option (* test111.lgf:176.49-test111.lgf:176.55 *)
[ (* test111.lgf:176.56-test111.lgf:176.57 *)
(* CON_NAME *) Integer (* test111.lgf:176.57-test111.lgf:176.64 *)
] (* test111.lgf:176.64-test111.lgf:176.65 *)
] (* test111.lgf:176.65-test111.lgf:176.66 *)
(* VAR_NAME *) i (* test111.lgf:176.67-test111.lgf:176.68 *)
( (* test111.lgf:176.69-test111.lgf:176.70 *)
(* CON_NAME *) Some (* test111.lgf:176.70-test111.lgf:176.74 *)
[ (* test111.lgf:176.75-test111.lgf:176.76 *)
(* CON_NAME *) Integer (* test111.lgf:176.76-test111.lgf:176.83 *)
] (* test111.lgf:176.83-test111.lgf:176.84 *)
{ (* test111.lgf:176.85-test111.lgf:176.86 *)
(* VAR_NAME *) r (* test111.lgf:176.86-test111.lgf:176.87 *)
} (* test111.lgf:176.87-test111.lgf:176.88 *)
) (* test111.lgf:176.88-test111.lgf:176.89 *)
(* VAR_NAME *) a (* test111.lgf:176.90-test111.lgf:176.91 *)
in (* test111.lgf:180.26-test111.lgf:180.28 *)
(* CON_NAME *) Pair (* test111.lgf:181.28-test111.lgf:181.32 *)
[ (* test111.lgf:181.33-test111.lgf:181.34 *)
(* CON_NAME *) Integer (* test111.lgf:181.34-test111.lgf:181.41 *)
, (* test111.lgf:181.41-test111.lgf:181.42 *)
(* CON_NAME *) RList (* test111.lgf:181.43-test111.lgf:181.48 *)
[ (* test111.lgf:181.49-test111.lgf:181.50 *)
(* CON_NAME *) Option (* test111.lgf:181.50-test111.lgf:181.56 *)
[ (* test111.lgf:181.57-test111.lgf:181.58 *)
(* CON_NAME *) Integer (* test111.lgf:181.58-test111.lgf:181.65 *)
] (* test111.lgf:181.65-test111.lgf:181.66 *)
] (* test111.lgf:181.66-test111.lgf:181.67 *)
] (* test111.lgf:181.67-test111.lgf:181.68 *)
{ (* test111.lgf:181.69-test111.lgf:181.70 *)
(* VAR_NAME *) r (* test111.lgf:181.70-test111.lgf:181.71 *)
, (* test111.lgf:181.71-test111.lgf:181.72 *)
(* VAR_NAME *) a (* test111.lgf:181.73-test111.lgf:181.74 *)
} (* test111.lgf:181.74-test111.lgf:181.75 *)
end (* test111.lgf:182.26-test111.lgf:182.29 *)
end (* test111.lgf:183.22-test111.lgf:183.25 *)
end (* test111.lgf:184.18-test111.lgf:184.21 *)
end (* test111.lgf:185.13-test111.lgf:185.16 *)
else (* test111.lgf:186.6-test111.lgf:186.10 *)
(* VAR_NAME *) fib (* test111.lgf:186.11-test111.lgf:186.14 *)
( (* test111.lgf:186.15-test111.lgf:186.16 *)
(* VAR_NAME *) expand (* test111.lgf:186.16-test111.lgf:186.22 *)
(* VAR_NAME *) a (* test111.lgf:186.23-test111.lgf:186.24 *)
) (* test111.lgf:186.24-test111.lgf:186.25 *)
(* VAR_NAME *) i (* test111.lgf:186.26-test111.lgf:186.27 *)
in (* test111.lgf:187.2-test111.lgf:187.4 *)
fn (* test111.lgf:188.4-test111.lgf:188.6 *)
( (* test111.lgf:188.7-test111.lgf:188.8 *)
(* VAR_NAME *) i (* test111.lgf:188.8-test111.lgf:188.9 *)
: (* test111.lgf:188.9-test111.lgf:188.10 *)
(* CON_NAME *) Integer (* test111.lgf:188.11-test111.lgf:188.18 *)
) (* test111.lgf:188.18-test111.lgf:188.19 *)
=> (* test111.lgf:188.20-test111.lgf:188.22 *)
(* VAR_NAME *) fst (* test111.lgf:188.23-test111.lgf:188.26 *)
[ (* test111.lgf:188.27-test111.lgf:188.28 *)
(* CON_NAME *) Integer (* test111.lgf:188.28-test111.lgf:188.35 *)
] (* test111.lgf:188.35-test111.lgf:188.36 *)
[ (* test111.lgf:188.37-test111.lgf:188.38 *)
(* CON_NAME *) RList (* test111.lgf:188.38-test111.lgf:188.43 *)
[ (* test111.lgf:188.44-test111.lgf:188.45 *)
(* CON_NAME *) Option (* test111.lgf:188.45-test111.lgf:188.51 *)
[ (* test111.lgf:188.52-test111.lgf:188.53 *)
(* CON_NAME *) Integer (* test111.lgf:188.53-test111.lgf:188.60 *)
] (* test111.lgf:188.60-test111.lgf:188.61 *)
] (* test111.lgf:188.61-test111.lgf:188.62 *)
] (* test111.lgf:188.62-test111.lgf:188.63 *)
( (* test111.lgf:188.64-test111.lgf:188.65 *)
(* VAR_NAME *) fib (* test111.lgf:188.65-test111.lgf:188.68 *)
(* VAR_NAME *) a (* test111.lgf:188.69-test111.lgf:188.70 *)
(* VAR_NAME *) i (* test111.lgf:188.71-test111.lgf:188.72 *)
) (* test111.lgf:188.72-test111.lgf:188.73 *)
end (* test111.lgf:189.2-test111.lgf:189.5 *)
val (* test111.lgf:191.0-test111.lgf:191.3 *)
(* VAR_NAME *) s (* test111.lgf:191.4-test111.lgf:191.5 *)
= (* test111.lgf:191.6-test111.lgf:191.7 *)
if (* test111.lgf:192.2-test111.lgf:192.4 *)
(* VAR_NAME *) argc (* test111.lgf:192.5-test111.lgf:192.9 *)
(* CON_NAME *) Unit (* test111.lgf:192.10-test111.lgf:192.14 *)
> (* test111.lgf:192.15-test111.lgf:192.16 *)
(* INTEGER *) 1 (* test111.lgf:192.17-test111.lgf:192.18 *)
then (* test111.lgf:193.5-test111.lgf:193.9 *)
(* VAR_NAME *) arg (* test111.lgf:193.10-test111.lgf:193.13 *)
(* INTEGER *) 1 (* test111.lgf:193.14-test111.lgf:193.15 *)
else (* test111.lgf:194.2-test111.lgf:194.6 *)
(* STRING *) "42" (* test111.lgf:194.7-test111.lgf:194.11 *)
; (* test111.lgf:196.0-test111.lgf:196.1 *)
case (* test111.lgf:198.0-test111.lgf:198.4 *)
(* VAR_NAME *) stringToInt (* test111.lgf:198.5-test111.lgf:198.16 *)
(* VAR_NAME *) s (* test111.lgf:198.17-test111.lgf:198.18 *)
of (* test111.lgf:198.19-test111.lgf:198.21 *)
(* CON_NAME *) None (* test111.lgf:199.3-test111.lgf:199.7 *)
[ (* test111.lgf:199.8-test111.lgf:199.9 *)
(* CON_NAME *) Integer (* test111.lgf:199.9-test111.lgf:199.16 *)
] (* test111.lgf:199.16-test111.lgf:199.17 *)
=> (* test111.lgf:199.18-test111.lgf:199.20 *)
(* CON_NAME *) Unit (* test111.lgf:199.21-test111.lgf:199.25 *)
| (* test111.lgf:200.1-test111.lgf:200.2 *)
(* CON_NAME *) Some (* test111.lgf:200.3-test111.lgf:200.7 *)
[ (* test111.lgf:200.8-test111.lgf:200.9 *)
(* CON_NAME *) Integer (* test111.lgf:200.9-test111.lgf:200.16 *)
] (* test111.lgf:200.16-test111.lgf:200.17 *)
{ (* test111.lgf:200.18-test111.lgf:200.19 *)
(* VAR_NAME *) i (* test111.lgf:200.19-test111.lgf:200.20 *)
} (* test111.lgf:200.20-test111.lgf:200.21 *)
=> (* test111.lgf:200.22-test111.lgf:200.24 *)
( (* test111.lgf:200.25-test111.lgf:200.26 *)
(* VAR_NAME *) print (* test111.lgf:200.26-test111.lgf:200.31 *)
( (* test111.lgf:200.32-test111.lgf:200.33 *)
(* STRING *) "fib(" (* test111.lgf:200.33-test111.lgf:200.39 *)
^ (* test111.lgf:200.40-test111.lgf:200.41 *)
( (* test111.lgf:200.42-test111.lgf:200.43 *)
(* VAR_NAME *) intToString (* test111.lgf:200.43-test111.lgf:200.54 *)
(* VAR_NAME *) i (* test111.lgf:200.55-test111.lgf:200.56 *)
) (* test111.lgf:200.56-test111.lgf:200.57 *)
^ (* test111.lgf:200.58-test111.lgf:200.59 *)
(* STRING *) ") = " (* test111.lgf:200.60-test111.lgf:200.66 *)
^ (* test111.lgf:200.67-test111.lgf:200.68 *)
( (* test111.lgf:200.69-test111.lgf:200.70 *)
(* VAR_NAME *) intToString (* test111.lgf:200.70-test111.lgf:200.81 *)
( (* test111.lgf:200.82-test111.lgf:200.83 *)
(* VAR_NAME *) fib (* test111.lgf:200.83-test111.lgf:200.86 *)
(* VAR_NAME *) i (* test111.lgf:200.87-test111.lgf:200.88 *)
) (* test111.lgf:200.88-test111.lgf:200.89 *)
) (* test111.lgf:200.89-test111.lgf:200.90 *)
^ (* test111.lgf:200.91-test111.lgf:200.92 *)
(* STRING *) "\n" (* test111.lgf:200.93-test111.lgf:200.97 *)
) (* test111.lgf:200.97-test111.lgf:200.98 *)
) (* test111.lgf:200.98-test111.lgf:200.99 *)
end (* test111.lgf:201.0-test111.lgf:201.3 *)
