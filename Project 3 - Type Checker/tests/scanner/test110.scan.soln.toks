datatype (* test110.lgf:4.0-test110.lgf:4.8 *)
(* CON_NAME *) Pair (* test110.lgf:4.9-test110.lgf:4.13 *)
[ (* test110.lgf:4.14-test110.lgf:4.15 *)
(* TYVAR_NAME *) 'a1 (* test110.lgf:4.15-test110.lgf:4.18 *)
, (* test110.lgf:4.18-test110.lgf:4.19 *)
(* TYVAR_NAME *) 'a2 (* test110.lgf:4.19-test110.lgf:4.22 *)
] (* test110.lgf:4.22-test110.lgf:4.23 *)
= (* test110.lgf:4.24-test110.lgf:4.25 *)
(* CON_NAME *) Pair (* test110.lgf:4.26-test110.lgf:4.30 *)
{ (* test110.lgf:4.31-test110.lgf:4.32 *)
(* TYVAR_NAME *) 'a1 (* test110.lgf:4.32-test110.lgf:4.35 *)
, (* test110.lgf:4.35-test110.lgf:4.36 *)
(* TYVAR_NAME *) 'a2 (* test110.lgf:4.36-test110.lgf:4.39 *)
} (* test110.lgf:4.39-test110.lgf:4.40 *)
val (* test110.lgf:5.0-test110.lgf:5.3 *)
(* VAR_NAME *) pair (* test110.lgf:5.4-test110.lgf:5.8 *)
= (* test110.lgf:5.9-test110.lgf:5.10 *)
fn (* test110.lgf:5.11-test110.lgf:5.13 *)
[ (* test110.lgf:5.14-test110.lgf:5.15 *)
(* TYVAR_NAME *) 'a1 (* test110.lgf:5.15-test110.lgf:5.18 *)
] (* test110.lgf:5.18-test110.lgf:5.19 *)
[ (* test110.lgf:5.20-test110.lgf:5.21 *)
(* TYVAR_NAME *) 'a2 (* test110.lgf:5.21-test110.lgf:5.24 *)
] (* test110.lgf:5.24-test110.lgf:5.25 *)
( (* test110.lgf:5.26-test110.lgf:5.27 *)
(* VAR_NAME *) x (* test110.lgf:5.27-test110.lgf:5.28 *)
: (* test110.lgf:5.28-test110.lgf:5.29 *)
(* TYVAR_NAME *) 'a1 (* test110.lgf:5.30-test110.lgf:5.33 *)
) (* test110.lgf:5.33-test110.lgf:5.34 *)
( (* test110.lgf:5.35-test110.lgf:5.36 *)
(* VAR_NAME *) y (* test110.lgf:5.36-test110.lgf:5.37 *)
: (* test110.lgf:5.37-test110.lgf:5.38 *)
(* TYVAR_NAME *) 'a2 (* test110.lgf:5.39-test110.lgf:5.42 *)
) (* test110.lgf:5.42-test110.lgf:5.43 *)
=> (* test110.lgf:5.44-test110.lgf:5.46 *)
(* CON_NAME *) Pair (* test110.lgf:6.3-test110.lgf:6.7 *)
[ (* test110.lgf:6.8-test110.lgf:6.9 *)
(* TYVAR_NAME *) 'a1 (* test110.lgf:6.9-test110.lgf:6.12 *)
, (* test110.lgf:6.12-test110.lgf:6.13 *)
(* TYVAR_NAME *) 'a2 (* test110.lgf:6.14-test110.lgf:6.17 *)
] (* test110.lgf:6.17-test110.lgf:6.18 *)
{ (* test110.lgf:6.19-test110.lgf:6.20 *)
(* VAR_NAME *) x (* test110.lgf:6.20-test110.lgf:6.21 *)
, (* test110.lgf:6.21-test110.lgf:6.22 *)
(* VAR_NAME *) y (* test110.lgf:6.23-test110.lgf:6.24 *)
} (* test110.lgf:6.24-test110.lgf:6.25 *)
val (* test110.lgf:7.0-test110.lgf:7.3 *)
(* VAR_NAME *) fst (* test110.lgf:7.4-test110.lgf:7.7 *)
= (* test110.lgf:7.8-test110.lgf:7.9 *)
fn (* test110.lgf:7.10-test110.lgf:7.12 *)
[ (* test110.lgf:7.13-test110.lgf:7.14 *)
(* TYVAR_NAME *) 'a1 (* test110.lgf:7.14-test110.lgf:7.17 *)
] (* test110.lgf:7.17-test110.lgf:7.18 *)
[ (* test110.lgf:7.19-test110.lgf:7.20 *)
(* TYVAR_NAME *) 'a2 (* test110.lgf:7.20-test110.lgf:7.23 *)
] (* test110.lgf:7.23-test110.lgf:7.24 *)
( (* test110.lgf:7.25-test110.lgf:7.26 *)
(* VAR_NAME *) p (* test110.lgf:7.26-test110.lgf:7.27 *)
: (* test110.lgf:7.27-test110.lgf:7.28 *)
(* CON_NAME *) Pair (* test110.lgf:7.29-test110.lgf:7.33 *)
[ (* test110.lgf:7.34-test110.lgf:7.35 *)
(* TYVAR_NAME *) 'a1 (* test110.lgf:7.35-test110.lgf:7.38 *)
, (* test110.lgf:7.38-test110.lgf:7.39 *)
(* TYVAR_NAME *) 'a2 (* test110.lgf:7.39-test110.lgf:7.42 *)
] (* test110.lgf:7.42-test110.lgf:7.43 *)
) (* test110.lgf:7.43-test110.lgf:7.44 *)
=> (* test110.lgf:7.45-test110.lgf:7.47 *)
case (* test110.lgf:8.3-test110.lgf:8.7 *)
(* VAR_NAME *) p (* test110.lgf:8.8-test110.lgf:8.9 *)
of (* test110.lgf:8.10-test110.lgf:8.12 *)
(* CON_NAME *) Pair (* test110.lgf:9.6-test110.lgf:9.10 *)
[ (* test110.lgf:9.11-test110.lgf:9.12 *)
(* TYVAR_NAME *) 'a1 (* test110.lgf:9.12-test110.lgf:9.15 *)
, (* test110.lgf:9.15-test110.lgf:9.16 *)
(* TYVAR_NAME *) 'a2 (* test110.lgf:9.17-test110.lgf:9.20 *)
] (* test110.lgf:9.20-test110.lgf:9.21 *)
{ (* test110.lgf:9.22-test110.lgf:9.23 *)
(* VAR_NAME *) x1 (* test110.lgf:9.23-test110.lgf:9.25 *)
, (* test110.lgf:9.25-test110.lgf:9.26 *)
(* VAR_NAME *) x2 (* test110.lgf:9.26-test110.lgf:9.28 *)
} (* test110.lgf:9.28-test110.lgf:9.29 *)
=> (* test110.lgf:9.30-test110.lgf:9.32 *)
(* VAR_NAME *) x1 (* test110.lgf:9.33-test110.lgf:9.35 *)
end (* test110.lgf:10.3-test110.lgf:10.6 *)
val (* test110.lgf:11.0-test110.lgf:11.3 *)
(* VAR_NAME *) snd (* test110.lgf:11.4-test110.lgf:11.7 *)
= (* test110.lgf:11.8-test110.lgf:11.9 *)
fn (* test110.lgf:11.10-test110.lgf:11.12 *)
[ (* test110.lgf:11.13-test110.lgf:11.14 *)
(* TYVAR_NAME *) 'a1 (* test110.lgf:11.14-test110.lgf:11.17 *)
] (* test110.lgf:11.17-test110.lgf:11.18 *)
[ (* test110.lgf:11.19-test110.lgf:11.20 *)
(* TYVAR_NAME *) 'a2 (* test110.lgf:11.20-test110.lgf:11.23 *)
] (* test110.lgf:11.23-test110.lgf:11.24 *)
( (* test110.lgf:11.25-test110.lgf:11.26 *)
(* VAR_NAME *) p (* test110.lgf:11.26-test110.lgf:11.27 *)
: (* test110.lgf:11.27-test110.lgf:11.28 *)
(* CON_NAME *) Pair (* test110.lgf:11.29-test110.lgf:11.33 *)
[ (* test110.lgf:11.34-test110.lgf:11.35 *)
(* TYVAR_NAME *) 'a1 (* test110.lgf:11.35-test110.lgf:11.38 *)
, (* test110.lgf:11.38-test110.lgf:11.39 *)
(* TYVAR_NAME *) 'a2 (* test110.lgf:11.39-test110.lgf:11.42 *)
] (* test110.lgf:11.42-test110.lgf:11.43 *)
) (* test110.lgf:11.43-test110.lgf:11.44 *)
=> (* test110.lgf:11.45-test110.lgf:11.47 *)
case (* test110.lgf:12.3-test110.lgf:12.7 *)
(* VAR_NAME *) p (* test110.lgf:12.8-test110.lgf:12.9 *)
of (* test110.lgf:12.10-test110.lgf:12.12 *)
(* CON_NAME *) Pair (* test110.lgf:13.6-test110.lgf:13.10 *)
[ (* test110.lgf:13.11-test110.lgf:13.12 *)
(* TYVAR_NAME *) 'a1 (* test110.lgf:13.12-test110.lgf:13.15 *)
, (* test110.lgf:13.15-test110.lgf:13.16 *)
(* TYVAR_NAME *) 'a2 (* test110.lgf:13.17-test110.lgf:13.20 *)
] (* test110.lgf:13.20-test110.lgf:13.21 *)
{ (* test110.lgf:13.22-test110.lgf:13.23 *)
(* VAR_NAME *) x1 (* test110.lgf:13.23-test110.lgf:13.25 *)
, (* test110.lgf:13.25-test110.lgf:13.26 *)
(* VAR_NAME *) x2 (* test110.lgf:13.26-test110.lgf:13.28 *)
} (* test110.lgf:13.28-test110.lgf:13.29 *)
=> (* test110.lgf:13.30-test110.lgf:13.32 *)
(* VAR_NAME *) x2 (* test110.lgf:13.33-test110.lgf:13.35 *)
end (* test110.lgf:14.3-test110.lgf:14.6 *)
datatype (* test110.lgf:17.0-test110.lgf:17.8 *)
(* CON_NAME *) RList (* test110.lgf:17.9-test110.lgf:17.14 *)
[ (* test110.lgf:17.15-test110.lgf:17.16 *)
(* TYVAR_NAME *) 'a (* test110.lgf:17.16-test110.lgf:17.18 *)
] (* test110.lgf:17.18-test110.lgf:17.19 *)
= (* test110.lgf:17.20-test110.lgf:17.21 *)
(* CON_NAME *) RNil (* test110.lgf:17.22-test110.lgf:17.26 *)
| (* test110.lgf:18.20-test110.lgf:18.21 *)
(* CON_NAME *) RZero (* test110.lgf:18.22-test110.lgf:18.27 *)
{ (* test110.lgf:18.28-test110.lgf:18.29 *)
(* CON_NAME *) RList (* test110.lgf:18.29-test110.lgf:18.34 *)
[ (* test110.lgf:18.35-test110.lgf:18.36 *)
(* CON_NAME *) Pair (* test110.lgf:18.36-test110.lgf:18.40 *)
[ (* test110.lgf:18.41-test110.lgf:18.42 *)
(* TYVAR_NAME *) 'a (* test110.lgf:18.42-test110.lgf:18.44 *)
, (* test110.lgf:18.44-test110.lgf:18.45 *)
(* TYVAR_NAME *) 'a (* test110.lgf:18.46-test110.lgf:18.48 *)
] (* test110.lgf:18.48-test110.lgf:18.49 *)
] (* test110.lgf:18.49-test110.lgf:18.50 *)
} (* test110.lgf:18.50-test110.lgf:18.51 *)
| (* test110.lgf:19.20-test110.lgf:19.21 *)
(* CON_NAME *) ROne (* test110.lgf:19.22-test110.lgf:19.26 *)
{ (* test110.lgf:19.27-test110.lgf:19.28 *)
(* TYVAR_NAME *) 'a (* test110.lgf:19.28-test110.lgf:19.30 *)
, (* test110.lgf:19.30-test110.lgf:19.31 *)
(* CON_NAME *) RList (* test110.lgf:19.32-test110.lgf:19.37 *)
[ (* test110.lgf:19.38-test110.lgf:19.39 *)
(* CON_NAME *) Pair (* test110.lgf:19.39-test110.lgf:19.43 *)
[ (* test110.lgf:19.44-test110.lgf:19.45 *)
(* TYVAR_NAME *) 'a (* test110.lgf:19.45-test110.lgf:19.47 *)
, (* test110.lgf:19.47-test110.lgf:19.48 *)
(* TYVAR_NAME *) 'a (* test110.lgf:19.49-test110.lgf:19.51 *)
] (* test110.lgf:19.51-test110.lgf:19.52 *)
] (* test110.lgf:19.52-test110.lgf:19.53 *)
} (* test110.lgf:19.53-test110.lgf:19.54 *)
val (* test110.lgf:20.0-test110.lgf:20.3 *)
(* VAR_NAME *) rlistEmpty (* test110.lgf:20.4-test110.lgf:20.14 *)
= (* test110.lgf:20.15-test110.lgf:20.16 *)
fn (* test110.lgf:20.17-test110.lgf:20.19 *)
[ (* test110.lgf:20.20-test110.lgf:20.21 *)
(* TYVAR_NAME *) 'a (* test110.lgf:20.21-test110.lgf:20.23 *)
] (* test110.lgf:20.23-test110.lgf:20.24 *)
=> (* test110.lgf:20.25-test110.lgf:20.27 *)
(* CON_NAME *) RNil (* test110.lgf:20.28-test110.lgf:20.32 *)
[ (* test110.lgf:20.33-test110.lgf:20.34 *)
(* TYVAR_NAME *) 'a (* test110.lgf:20.34-test110.lgf:20.36 *)
] (* test110.lgf:20.36-test110.lgf:20.37 *)
val (* test110.lgf:21.0-test110.lgf:21.3 *)
(* VAR_NAME *) rlistIsEmpty (* test110.lgf:21.4-test110.lgf:21.16 *)
= (* test110.lgf:21.17-test110.lgf:21.18 *)
fn (* test110.lgf:21.19-test110.lgf:21.21 *)
[ (* test110.lgf:21.22-test110.lgf:21.23 *)
(* TYVAR_NAME *) 'a (* test110.lgf:21.23-test110.lgf:21.25 *)
] (* test110.lgf:21.25-test110.lgf:21.26 *)
( (* test110.lgf:21.27-test110.lgf:21.28 *)
(* VAR_NAME *) l (* test110.lgf:21.28-test110.lgf:21.29 *)
: (* test110.lgf:21.29-test110.lgf:21.30 *)
(* CON_NAME *) RList (* test110.lgf:21.31-test110.lgf:21.36 *)
[ (* test110.lgf:21.37-test110.lgf:21.38 *)
(* TYVAR_NAME *) 'a (* test110.lgf:21.38-test110.lgf:21.40 *)
] (* test110.lgf:21.40-test110.lgf:21.41 *)
) (* test110.lgf:21.41-test110.lgf:21.42 *)
=> (* test110.lgf:21.43-test110.lgf:21.45 *)
case (* test110.lgf:22.3-test110.lgf:22.7 *)
(* VAR_NAME *) l (* test110.lgf:22.8-test110.lgf:22.9 *)
of (* test110.lgf:22.10-test110.lgf:22.12 *)
(* CON_NAME *) RNil (* test110.lgf:22.13-test110.lgf:22.17 *)
[ (* test110.lgf:22.18-test110.lgf:22.19 *)
(* TYVAR_NAME *) 'a (* test110.lgf:22.19-test110.lgf:22.21 *)
] (* test110.lgf:22.21-test110.lgf:22.22 *)
=> (* test110.lgf:22.23-test110.lgf:22.25 *)
(* CON_NAME *) True (* test110.lgf:22.26-test110.lgf:22.30 *)
| (* test110.lgf:22.31-test110.lgf:22.32 *)
_ (* test110.lgf:22.33-test110.lgf:22.34 *)
=> (* test110.lgf:22.35-test110.lgf:22.37 *)
(* CON_NAME *) False (* test110.lgf:22.38-test110.lgf:22.43 *)
end (* test110.lgf:22.44-test110.lgf:22.47 *)
fun (* test110.lgf:23.0-test110.lgf:23.3 *)
(* VAR_NAME *) rlistCons (* test110.lgf:23.4-test110.lgf:23.13 *)
[ (* test110.lgf:23.14-test110.lgf:23.15 *)
(* TYVAR_NAME *) 'a (* test110.lgf:23.15-test110.lgf:23.17 *)
] (* test110.lgf:23.17-test110.lgf:23.18 *)
( (* test110.lgf:23.19-test110.lgf:23.20 *)
(* VAR_NAME *) x (* test110.lgf:23.20-test110.lgf:23.21 *)
: (* test110.lgf:23.21-test110.lgf:23.22 *)
(* TYVAR_NAME *) 'a (* test110.lgf:23.23-test110.lgf:23.25 *)
) (* test110.lgf:23.25-test110.lgf:23.26 *)
( (* test110.lgf:23.27-test110.lgf:23.28 *)
(* VAR_NAME *) l (* test110.lgf:23.28-test110.lgf:23.29 *)
: (* test110.lgf:23.29-test110.lgf:23.30 *)
(* CON_NAME *) RList (* test110.lgf:23.31-test110.lgf:23.36 *)
[ (* test110.lgf:23.37-test110.lgf:23.38 *)
(* TYVAR_NAME *) 'a (* test110.lgf:23.38-test110.lgf:23.40 *)
] (* test110.lgf:23.40-test110.lgf:23.41 *)
) (* test110.lgf:23.41-test110.lgf:23.42 *)
: (* test110.lgf:23.43-test110.lgf:23.44 *)
(* CON_NAME *) RList (* test110.lgf:23.45-test110.lgf:23.50 *)
[ (* test110.lgf:23.51-test110.lgf:23.52 *)
(* TYVAR_NAME *) 'a (* test110.lgf:23.52-test110.lgf:23.54 *)
] (* test110.lgf:23.54-test110.lgf:23.55 *)
= (* test110.lgf:23.56-test110.lgf:23.57 *)
case (* test110.lgf:24.3-test110.lgf:24.7 *)
(* VAR_NAME *) l (* test110.lgf:24.8-test110.lgf:24.9 *)
of (* test110.lgf:24.10-test110.lgf:24.12 *)
(* CON_NAME *) RNil (* test110.lgf:25.6-test110.lgf:25.10 *)
[ (* test110.lgf:25.11-test110.lgf:25.12 *)
(* TYVAR_NAME *) 'a (* test110.lgf:25.12-test110.lgf:25.14 *)
] (* test110.lgf:25.14-test110.lgf:25.15 *)
=> (* test110.lgf:25.16-test110.lgf:25.18 *)
(* CON_NAME *) ROne (* test110.lgf:25.19-test110.lgf:25.23 *)
[ (* test110.lgf:25.24-test110.lgf:25.25 *)
(* TYVAR_NAME *) 'a (* test110.lgf:25.25-test110.lgf:25.27 *)
] (* test110.lgf:25.27-test110.lgf:25.28 *)
{ (* test110.lgf:25.29-test110.lgf:25.30 *)
(* VAR_NAME *) x (* test110.lgf:25.30-test110.lgf:25.31 *)
, (* test110.lgf:25.31-test110.lgf:25.32 *)
(* CON_NAME *) RNil (* test110.lgf:25.33-test110.lgf:25.37 *)
[ (* test110.lgf:25.38-test110.lgf:25.39 *)
(* CON_NAME *) Pair (* test110.lgf:25.39-test110.lgf:25.43 *)
[ (* test110.lgf:25.44-test110.lgf:25.45 *)
(* TYVAR_NAME *) 'a (* test110.lgf:25.45-test110.lgf:25.47 *)
, (* test110.lgf:25.47-test110.lgf:25.48 *)
(* TYVAR_NAME *) 'a (* test110.lgf:25.49-test110.lgf:25.51 *)
] (* test110.lgf:25.51-test110.lgf:25.52 *)
] (* test110.lgf:25.52-test110.lgf:25.53 *)
} (* test110.lgf:25.53-test110.lgf:25.54 *)
| (* test110.lgf:26.4-test110.lgf:26.5 *)
(* CON_NAME *) RZero (* test110.lgf:26.6-test110.lgf:26.11 *)
[ (* test110.lgf:26.12-test110.lgf:26.13 *)
(* TYVAR_NAME *) 'a (* test110.lgf:26.13-test110.lgf:26.15 *)
] (* test110.lgf:26.15-test110.lgf:26.16 *)
{ (* test110.lgf:26.17-test110.lgf:26.18 *)
(* VAR_NAME *) ps (* test110.lgf:26.18-test110.lgf:26.20 *)
} (* test110.lgf:26.20-test110.lgf:26.21 *)
=> (* test110.lgf:26.22-test110.lgf:26.24 *)
(* CON_NAME *) ROne (* test110.lgf:26.25-test110.lgf:26.29 *)
[ (* test110.lgf:26.30-test110.lgf:26.31 *)
(* TYVAR_NAME *) 'a (* test110.lgf:26.31-test110.lgf:26.33 *)
] (* test110.lgf:26.33-test110.lgf:26.34 *)
{ (* test110.lgf:26.35-test110.lgf:26.36 *)
(* VAR_NAME *) x (* test110.lgf:26.36-test110.lgf:26.37 *)
, (* test110.lgf:26.37-test110.lgf:26.38 *)
(* VAR_NAME *) ps (* test110.lgf:26.39-test110.lgf:26.41 *)
} (* test110.lgf:26.41-test110.lgf:26.42 *)
| (* test110.lgf:27.4-test110.lgf:27.5 *)
(* CON_NAME *) ROne (* test110.lgf:27.6-test110.lgf:27.10 *)
[ (* test110.lgf:27.11-test110.lgf:27.12 *)
(* TYVAR_NAME *) 'a (* test110.lgf:27.12-test110.lgf:27.14 *)
] (* test110.lgf:27.14-test110.lgf:27.15 *)
{ (* test110.lgf:27.16-test110.lgf:27.17 *)
(* VAR_NAME *) y (* test110.lgf:27.17-test110.lgf:27.18 *)
, (* test110.lgf:27.18-test110.lgf:27.19 *)
(* VAR_NAME *) ps (* test110.lgf:27.20-test110.lgf:27.22 *)
} (* test110.lgf:27.22-test110.lgf:27.23 *)
=> (* test110.lgf:27.24-test110.lgf:27.26 *)
(* CON_NAME *) RZero (* test110.lgf:27.27-test110.lgf:27.32 *)
[ (* test110.lgf:27.33-test110.lgf:27.34 *)
(* TYVAR_NAME *) 'a (* test110.lgf:27.34-test110.lgf:27.36 *)
] (* test110.lgf:27.36-test110.lgf:27.37 *)
{ (* test110.lgf:27.38-test110.lgf:27.39 *)
(* VAR_NAME *) rlistCons (* test110.lgf:27.39-test110.lgf:27.48 *)
[ (* test110.lgf:27.49-test110.lgf:27.50 *)
(* CON_NAME *) Pair (* test110.lgf:27.50-test110.lgf:27.54 *)
[ (* test110.lgf:27.55-test110.lgf:27.56 *)
(* TYVAR_NAME *) 'a (* test110.lgf:27.56-test110.lgf:27.58 *)
, (* test110.lgf:27.58-test110.lgf:27.59 *)
(* TYVAR_NAME *) 'a (* test110.lgf:27.59-test110.lgf:27.61 *)
] (* test110.lgf:27.61-test110.lgf:27.62 *)
] (* test110.lgf:27.62-test110.lgf:27.63 *)
( (* test110.lgf:27.64-test110.lgf:27.65 *)
(* VAR_NAME *) pair (* test110.lgf:27.65-test110.lgf:27.69 *)
[ (* test110.lgf:27.70-test110.lgf:27.71 *)
(* TYVAR_NAME *) 'a (* test110.lgf:27.71-test110.lgf:27.73 *)
] (* test110.lgf:27.73-test110.lgf:27.74 *)
[ (* test110.lgf:27.75-test110.lgf:27.76 *)
(* TYVAR_NAME *) 'a (* test110.lgf:27.76-test110.lgf:27.78 *)
] (* test110.lgf:27.78-test110.lgf:27.79 *)
(* VAR_NAME *) x (* test110.lgf:27.80-test110.lgf:27.81 *)
(* VAR_NAME *) y (* test110.lgf:27.82-test110.lgf:27.83 *)
) (* test110.lgf:27.83-test110.lgf:27.84 *)
(* VAR_NAME *) ps (* test110.lgf:27.85-test110.lgf:27.87 *)
} (* test110.lgf:27.87-test110.lgf:27.88 *)
end (* test110.lgf:28.3-test110.lgf:28.6 *)
fun (* test110.lgf:29.0-test110.lgf:29.3 *)
(* VAR_NAME *) rlistUncons (* test110.lgf:29.4-test110.lgf:29.15 *)
[ (* test110.lgf:29.16-test110.lgf:29.17 *)
(* TYVAR_NAME *) 'a (* test110.lgf:29.17-test110.lgf:29.19 *)
] (* test110.lgf:29.19-test110.lgf:29.20 *)
( (* test110.lgf:29.21-test110.lgf:29.22 *)
(* VAR_NAME *) l (* test110.lgf:29.22-test110.lgf:29.23 *)
: (* test110.lgf:29.23-test110.lgf:29.24 *)
(* CON_NAME *) RList (* test110.lgf:29.25-test110.lgf:29.30 *)
[ (* test110.lgf:29.31-test110.lgf:29.32 *)
(* TYVAR_NAME *) 'a (* test110.lgf:29.32-test110.lgf:29.34 *)
] (* test110.lgf:29.34-test110.lgf:29.35 *)
) (* test110.lgf:29.35-test110.lgf:29.36 *)
: (* test110.lgf:29.37-test110.lgf:29.38 *)
(* CON_NAME *) Pair (* test110.lgf:29.39-test110.lgf:29.43 *)
[ (* test110.lgf:29.44-test110.lgf:29.45 *)
(* TYVAR_NAME *) 'a (* test110.lgf:29.45-test110.lgf:29.47 *)
, (* test110.lgf:29.47-test110.lgf:29.48 *)
(* CON_NAME *) RList (* test110.lgf:29.49-test110.lgf:29.54 *)
[ (* test110.lgf:29.55-test110.lgf:29.56 *)
(* TYVAR_NAME *) 'a (* test110.lgf:29.56-test110.lgf:29.58 *)
] (* test110.lgf:29.58-test110.lgf:29.59 *)
] (* test110.lgf:29.59-test110.lgf:29.60 *)
= (* test110.lgf:29.61-test110.lgf:29.62 *)
case (* test110.lgf:30.3-test110.lgf:30.7 *)
(* VAR_NAME *) l (* test110.lgf:30.8-test110.lgf:30.9 *)
of (* test110.lgf:30.10-test110.lgf:30.12 *)
(* CON_NAME *) RNil (* test110.lgf:31.6-test110.lgf:31.10 *)
[ (* test110.lgf:31.11-test110.lgf:31.12 *)
(* TYVAR_NAME *) 'a (* test110.lgf:31.12-test110.lgf:31.14 *)
] (* test110.lgf:31.14-test110.lgf:31.15 *)
=> (* test110.lgf:31.16-test110.lgf:31.18 *)
(* VAR_NAME *) fail (* test110.lgf:31.19-test110.lgf:31.23 *)
[ (* test110.lgf:31.24-test110.lgf:31.25 *)
(* CON_NAME *) Pair (* test110.lgf:31.25-test110.lgf:31.29 *)
[ (* test110.lgf:31.30-test110.lgf:31.31 *)
(* TYVAR_NAME *) 'a (* test110.lgf:31.31-test110.lgf:31.33 *)
, (* test110.lgf:31.33-test110.lgf:31.34 *)
(* CON_NAME *) RList (* test110.lgf:31.35-test110.lgf:31.40 *)
[ (* test110.lgf:31.41-test110.lgf:31.42 *)
(* TYVAR_NAME *) 'a (* test110.lgf:31.42-test110.lgf:31.44 *)
] (* test110.lgf:31.44-test110.lgf:31.45 *)
] (* test110.lgf:31.45-test110.lgf:31.46 *)
] (* test110.lgf:31.46-test110.lgf:31.47 *)
(* STRING *) "rlistUncons: RNil" (* test110.lgf:31.48-test110.lgf:31.67 *)
| (* test110.lgf:32.4-test110.lgf:32.5 *)
(* CON_NAME *) ROne (* test110.lgf:32.6-test110.lgf:32.10 *)
[ (* test110.lgf:32.11-test110.lgf:32.12 *)
(* TYVAR_NAME *) 'a (* test110.lgf:32.12-test110.lgf:32.14 *)
] (* test110.lgf:32.14-test110.lgf:32.15 *)
{ (* test110.lgf:32.16-test110.lgf:32.17 *)
(* VAR_NAME *) x (* test110.lgf:32.17-test110.lgf:32.18 *)
, (* test110.lgf:32.18-test110.lgf:32.19 *)
(* VAR_NAME *) ps (* test110.lgf:32.20-test110.lgf:32.22 *)
} (* test110.lgf:32.22-test110.lgf:32.23 *)
=> (* test110.lgf:32.24-test110.lgf:32.26 *)
case (* test110.lgf:33.9-test110.lgf:33.13 *)
(* VAR_NAME *) ps (* test110.lgf:33.14-test110.lgf:33.16 *)
of (* test110.lgf:33.17-test110.lgf:33.19 *)
(* CON_NAME *) RNil (* test110.lgf:34.12-test110.lgf:34.16 *)
[ (* test110.lgf:34.17-test110.lgf:34.18 *)
(* CON_NAME *) Pair (* test110.lgf:34.18-test110.lgf:34.22 *)
[ (* test110.lgf:34.23-test110.lgf:34.24 *)
(* TYVAR_NAME *) 'a (* test110.lgf:34.24-test110.lgf:34.26 *)
, (* test110.lgf:34.26-test110.lgf:34.27 *)
(* TYVAR_NAME *) 'a (* test110.lgf:34.28-test110.lgf:34.30 *)
] (* test110.lgf:34.30-test110.lgf:34.31 *)
] (* test110.lgf:34.31-test110.lgf:34.32 *)
=> (* test110.lgf:34.33-test110.lgf:34.35 *)
(* CON_NAME *) Pair (* test110.lgf:34.36-test110.lgf:34.40 *)
[ (* test110.lgf:34.41-test110.lgf:34.42 *)
(* TYVAR_NAME *) 'a (* test110.lgf:34.42-test110.lgf:34.44 *)
, (* test110.lgf:34.44-test110.lgf:34.45 *)
(* CON_NAME *) RList (* test110.lgf:34.46-test110.lgf:34.51 *)
[ (* test110.lgf:34.52-test110.lgf:34.53 *)
(* TYVAR_NAME *) 'a (* test110.lgf:34.53-test110.lgf:34.55 *)
] (* test110.lgf:34.55-test110.lgf:34.56 *)
] (* test110.lgf:34.56-test110.lgf:34.57 *)
{ (* test110.lgf:34.58-test110.lgf:34.59 *)
(* VAR_NAME *) x (* test110.lgf:34.59-test110.lgf:34.60 *)
, (* test110.lgf:34.60-test110.lgf:34.61 *)
(* CON_NAME *) RNil (* test110.lgf:34.62-test110.lgf:34.66 *)
[ (* test110.lgf:34.67-test110.lgf:34.68 *)
(* TYVAR_NAME *) 'a (* test110.lgf:34.68-test110.lgf:34.70 *)
] (* test110.lgf:34.70-test110.lgf:34.71 *)
} (* test110.lgf:34.71-test110.lgf:34.72 *)
| (* test110.lgf:35.10-test110.lgf:35.11 *)
_ (* test110.lgf:35.12-test110.lgf:35.13 *)
=> (* test110.lgf:35.14-test110.lgf:35.16 *)
(* CON_NAME *) Pair (* test110.lgf:35.17-test110.lgf:35.21 *)
[ (* test110.lgf:35.22-test110.lgf:35.23 *)
(* TYVAR_NAME *) 'a (* test110.lgf:35.23-test110.lgf:35.25 *)
, (* test110.lgf:35.25-test110.lgf:35.26 *)
(* CON_NAME *) RList (* test110.lgf:35.27-test110.lgf:35.32 *)
[ (* test110.lgf:35.33-test110.lgf:35.34 *)
(* TYVAR_NAME *) 'a (* test110.lgf:35.34-test110.lgf:35.36 *)
] (* test110.lgf:35.36-test110.lgf:35.37 *)
] (* test110.lgf:35.37-test110.lgf:35.38 *)
{ (* test110.lgf:35.39-test110.lgf:35.40 *)
(* VAR_NAME *) x (* test110.lgf:35.40-test110.lgf:35.41 *)
, (* test110.lgf:35.41-test110.lgf:35.42 *)
(* CON_NAME *) RZero (* test110.lgf:35.43-test110.lgf:35.48 *)
[ (* test110.lgf:35.49-test110.lgf:35.50 *)
(* TYVAR_NAME *) 'a (* test110.lgf:35.50-test110.lgf:35.52 *)
] (* test110.lgf:35.52-test110.lgf:35.53 *)
{ (* test110.lgf:35.54-test110.lgf:35.55 *)
(* VAR_NAME *) ps (* test110.lgf:35.55-test110.lgf:35.57 *)
} (* test110.lgf:35.57-test110.lgf:35.58 *)
} (* test110.lgf:35.58-test110.lgf:35.59 *)
end (* test110.lgf:36.9-test110.lgf:36.12 *)
| (* test110.lgf:37.4-test110.lgf:37.5 *)
(* CON_NAME *) RZero (* test110.lgf:37.6-test110.lgf:37.11 *)
[ (* test110.lgf:37.12-test110.lgf:37.13 *)
(* TYVAR_NAME *) 'a (* test110.lgf:37.13-test110.lgf:37.15 *)
] (* test110.lgf:37.15-test110.lgf:37.16 *)
{ (* test110.lgf:37.17-test110.lgf:37.18 *)
(* VAR_NAME *) ps (* test110.lgf:37.18-test110.lgf:37.20 *)
} (* test110.lgf:37.20-test110.lgf:37.21 *)
=> (* test110.lgf:37.22-test110.lgf:37.24 *)
let (* test110.lgf:38.9-test110.lgf:38.12 *)
val (* test110.lgf:39.12-test110.lgf:39.15 *)
(* VAR_NAME *) xy_ps' (* test110.lgf:39.16-test110.lgf:39.22 *)
= (* test110.lgf:39.23-test110.lgf:39.24 *)
(* VAR_NAME *) rlistUncons (* test110.lgf:39.25-test110.lgf:39.36 *)
[ (* test110.lgf:39.37-test110.lgf:39.38 *)
(* CON_NAME *) Pair (* test110.lgf:39.38-test110.lgf:39.42 *)
[ (* test110.lgf:39.43-test110.lgf:39.44 *)
(* TYVAR_NAME *) 'a (* test110.lgf:39.44-test110.lgf:39.46 *)
, (* test110.lgf:39.46-test110.lgf:39.47 *)
(* TYVAR_NAME *) 'a (* test110.lgf:39.48-test110.lgf:39.50 *)
] (* test110.lgf:39.50-test110.lgf:39.51 *)
] (* test110.lgf:39.51-test110.lgf:39.52 *)
(* VAR_NAME *) ps (* test110.lgf:39.53-test110.lgf:39.55 *)
val (* test110.lgf:40.12-test110.lgf:40.15 *)
(* VAR_NAME *) xy (* test110.lgf:40.16-test110.lgf:40.18 *)
= (* test110.lgf:40.19-test110.lgf:40.20 *)
(* VAR_NAME *) fst (* test110.lgf:40.21-test110.lgf:40.24 *)
[ (* test110.lgf:40.25-test110.lgf:40.26 *)
(* CON_NAME *) Pair (* test110.lgf:40.26-test110.lgf:40.30 *)
[ (* test110.lgf:40.31-test110.lgf:40.32 *)
(* TYVAR_NAME *) 'a (* test110.lgf:40.32-test110.lgf:40.34 *)
, (* test110.lgf:40.34-test110.lgf:40.35 *)
(* TYVAR_NAME *) 'a (* test110.lgf:40.36-test110.lgf:40.38 *)
] (* test110.lgf:40.38-test110.lgf:40.39 *)
] (* test110.lgf:40.39-test110.lgf:40.40 *)
[ (* test110.lgf:40.41-test110.lgf:40.42 *)
(* CON_NAME *) RList (* test110.lgf:40.42-test110.lgf:40.47 *)
[ (* test110.lgf:40.48-test110.lgf:40.49 *)
(* CON_NAME *) Pair (* test110.lgf:40.49-test110.lgf:40.53 *)
[ (* test110.lgf:40.54-test110.lgf:40.55 *)
(* TYVAR_NAME *) 'a (* test110.lgf:40.55-test110.lgf:40.57 *)
, (* test110.lgf:40.57-test110.lgf:40.58 *)
(* TYVAR_NAME *) 'a (* test110.lgf:40.59-test110.lgf:40.61 *)
] (* test110.lgf:40.61-test110.lgf:40.62 *)
] (* test110.lgf:40.62-test110.lgf:40.63 *)
] (* test110.lgf:40.63-test110.lgf:40.64 *)
(* VAR_NAME *) xy_ps' (* test110.lgf:40.65-test110.lgf:40.71 *)
val (* test110.lgf:41.12-test110.lgf:41.15 *)
(* VAR_NAME *) x (* test110.lgf:41.16-test110.lgf:41.17 *)
= (* test110.lgf:41.18-test110.lgf:41.19 *)
(* VAR_NAME *) fst (* test110.lgf:41.20-test110.lgf:41.23 *)
[ (* test110.lgf:41.24-test110.lgf:41.25 *)
(* TYVAR_NAME *) 'a (* test110.lgf:41.25-test110.lgf:41.27 *)
] (* test110.lgf:41.27-test110.lgf:41.28 *)
[ (* test110.lgf:41.29-test110.lgf:41.30 *)
(* TYVAR_NAME *) 'a (* test110.lgf:41.30-test110.lgf:41.32 *)
] (* test110.lgf:41.32-test110.lgf:41.33 *)
(* VAR_NAME *) xy (* test110.lgf:41.34-test110.lgf:41.36 *)
val (* test110.lgf:42.12-test110.lgf:42.15 *)
(* VAR_NAME *) y (* test110.lgf:42.16-test110.lgf:42.17 *)
= (* test110.lgf:42.18-test110.lgf:42.19 *)
(* VAR_NAME *) snd (* test110.lgf:42.20-test110.lgf:42.23 *)
[ (* test110.lgf:42.24-test110.lgf:42.25 *)
(* TYVAR_NAME *) 'a (* test110.lgf:42.25-test110.lgf:42.27 *)
] (* test110.lgf:42.27-test110.lgf:42.28 *)
[ (* test110.lgf:42.29-test110.lgf:42.30 *)
(* TYVAR_NAME *) 'a (* test110.lgf:42.30-test110.lgf:42.32 *)
] (* test110.lgf:42.32-test110.lgf:42.33 *)
(* VAR_NAME *) xy (* test110.lgf:42.34-test110.lgf:42.36 *)
val (* test110.lgf:43.12-test110.lgf:43.15 *)
(* VAR_NAME *) ps' (* test110.lgf:43.16-test110.lgf:43.19 *)
= (* test110.lgf:43.20-test110.lgf:43.21 *)
(* VAR_NAME *) snd (* test110.lgf:43.22-test110.lgf:43.25 *)
[ (* test110.lgf:43.26-test110.lgf:43.27 *)
(* CON_NAME *) Pair (* test110.lgf:43.27-test110.lgf:43.31 *)
[ (* test110.lgf:43.32-test110.lgf:43.33 *)
(* TYVAR_NAME *) 'a (* test110.lgf:43.33-test110.lgf:43.35 *)
, (* test110.lgf:43.35-test110.lgf:43.36 *)
(* TYVAR_NAME *) 'a (* test110.lgf:43.37-test110.lgf:43.39 *)
] (* test110.lgf:43.39-test110.lgf:43.40 *)
] (* test110.lgf:43.40-test110.lgf:43.41 *)
[ (* test110.lgf:43.42-test110.lgf:43.43 *)
(* CON_NAME *) RList (* test110.lgf:43.43-test110.lgf:43.48 *)
[ (* test110.lgf:43.49-test110.lgf:43.50 *)
(* CON_NAME *) Pair (* test110.lgf:43.50-test110.lgf:43.54 *)
[ (* test110.lgf:43.55-test110.lgf:43.56 *)
(* TYVAR_NAME *) 'a (* test110.lgf:43.56-test110.lgf:43.58 *)
, (* test110.lgf:43.58-test110.lgf:43.59 *)
(* TYVAR_NAME *) 'a (* test110.lgf:43.60-test110.lgf:43.62 *)
] (* test110.lgf:43.62-test110.lgf:43.63 *)
] (* test110.lgf:43.63-test110.lgf:43.64 *)
] (* test110.lgf:43.64-test110.lgf:43.65 *)
(* VAR_NAME *) xy_ps' (* test110.lgf:43.66-test110.lgf:43.72 *)
in (* test110.lgf:44.9-test110.lgf:44.11 *)
(* VAR_NAME *) pair (* test110.lgf:45.12-test110.lgf:45.16 *)
[ (* test110.lgf:45.17-test110.lgf:45.18 *)
(* TYVAR_NAME *) 'a (* test110.lgf:45.18-test110.lgf:45.20 *)
] (* test110.lgf:45.20-test110.lgf:45.21 *)
[ (* test110.lgf:45.22-test110.lgf:45.23 *)
(* CON_NAME *) RList (* test110.lgf:45.23-test110.lgf:45.28 *)
[ (* test110.lgf:45.29-test110.lgf:45.30 *)
(* TYVAR_NAME *) 'a (* test110.lgf:45.30-test110.lgf:45.32 *)
] (* test110.lgf:45.32-test110.lgf:45.33 *)
] (* test110.lgf:45.33-test110.lgf:45.34 *)
(* VAR_NAME *) x (* test110.lgf:45.35-test110.lgf:45.36 *)
( (* test110.lgf:45.37-test110.lgf:45.38 *)
(* CON_NAME *) ROne (* test110.lgf:45.38-test110.lgf:45.42 *)
[ (* test110.lgf:45.43-test110.lgf:45.44 *)
(* TYVAR_NAME *) 'a (* test110.lgf:45.44-test110.lgf:45.46 *)
] (* test110.lgf:45.46-test110.lgf:45.47 *)
{ (* test110.lgf:45.48-test110.lgf:45.49 *)
(* VAR_NAME *) y (* test110.lgf:45.49-test110.lgf:45.50 *)
, (* test110.lgf:45.50-test110.lgf:45.51 *)
(* VAR_NAME *) ps' (* test110.lgf:45.52-test110.lgf:45.55 *)
} (* test110.lgf:45.55-test110.lgf:45.56 *)
) (* test110.lgf:45.56-test110.lgf:45.57 *)
end (* test110.lgf:46.9-test110.lgf:46.12 *)
end (* test110.lgf:47.3-test110.lgf:47.6 *)
val (* test110.lgf:48.0-test110.lgf:48.3 *)
(* VAR_NAME *) rlistHd (* test110.lgf:48.4-test110.lgf:48.11 *)
= (* test110.lgf:48.12-test110.lgf:48.13 *)
fn (* test110.lgf:48.14-test110.lgf:48.16 *)
[ (* test110.lgf:48.17-test110.lgf:48.18 *)
(* TYVAR_NAME *) 'a (* test110.lgf:48.18-test110.lgf:48.20 *)
] (* test110.lgf:48.20-test110.lgf:48.21 *)
( (* test110.lgf:48.22-test110.lgf:48.23 *)
(* VAR_NAME *) l (* test110.lgf:48.23-test110.lgf:48.24 *)
: (* test110.lgf:48.24-test110.lgf:48.25 *)
(* CON_NAME *) RList (* test110.lgf:48.26-test110.lgf:48.31 *)
[ (* test110.lgf:48.32-test110.lgf:48.33 *)
(* TYVAR_NAME *) 'a (* test110.lgf:48.33-test110.lgf:48.35 *)
] (* test110.lgf:48.35-test110.lgf:48.36 *)
) (* test110.lgf:48.36-test110.lgf:48.37 *)
=> (* test110.lgf:48.38-test110.lgf:48.40 *)
(* VAR_NAME *) fst (* test110.lgf:49.3-test110.lgf:49.6 *)
[ (* test110.lgf:49.7-test110.lgf:49.8 *)
(* TYVAR_NAME *) 'a (* test110.lgf:49.8-test110.lgf:49.10 *)
] (* test110.lgf:49.10-test110.lgf:49.11 *)
[ (* test110.lgf:49.12-test110.lgf:49.13 *)
(* CON_NAME *) RList (* test110.lgf:49.13-test110.lgf:49.18 *)
[ (* test110.lgf:49.19-test110.lgf:49.20 *)
(* TYVAR_NAME *) 'a (* test110.lgf:49.20-test110.lgf:49.22 *)
] (* test110.lgf:49.22-test110.lgf:49.23 *)
] (* test110.lgf:49.23-test110.lgf:49.24 *)
( (* test110.lgf:49.25-test110.lgf:49.26 *)
(* VAR_NAME *) rlistUncons (* test110.lgf:49.26-test110.lgf:49.37 *)
[ (* test110.lgf:49.38-test110.lgf:49.39 *)
(* TYVAR_NAME *) 'a (* test110.lgf:49.39-test110.lgf:49.41 *)
] (* test110.lgf:49.41-test110.lgf:49.42 *)
(* VAR_NAME *) l (* test110.lgf:49.43-test110.lgf:49.44 *)
) (* test110.lgf:49.44-test110.lgf:49.45 *)
val (* test110.lgf:50.0-test110.lgf:50.3 *)
(* VAR_NAME *) rlistTl (* test110.lgf:50.4-test110.lgf:50.11 *)
= (* test110.lgf:50.12-test110.lgf:50.13 *)
fn (* test110.lgf:50.14-test110.lgf:50.16 *)
[ (* test110.lgf:50.17-test110.lgf:50.18 *)
(* TYVAR_NAME *) 'a (* test110.lgf:50.18-test110.lgf:50.20 *)
] (* test110.lgf:50.20-test110.lgf:50.21 *)
( (* test110.lgf:50.22-test110.lgf:50.23 *)
(* VAR_NAME *) l (* test110.lgf:50.23-test110.lgf:50.24 *)
: (* test110.lgf:50.24-test110.lgf:50.25 *)
(* CON_NAME *) RList (* test110.lgf:50.26-test110.lgf:50.31 *)
[ (* test110.lgf:50.32-test110.lgf:50.33 *)
(* TYVAR_NAME *) 'a (* test110.lgf:50.33-test110.lgf:50.35 *)
] (* test110.lgf:50.35-test110.lgf:50.36 *)
) (* test110.lgf:50.36-test110.lgf:50.37 *)
=> (* test110.lgf:50.38-test110.lgf:50.40 *)
(* VAR_NAME *) snd (* test110.lgf:51.3-test110.lgf:51.6 *)
[ (* test110.lgf:51.7-test110.lgf:51.8 *)
(* TYVAR_NAME *) 'a (* test110.lgf:51.8-test110.lgf:51.10 *)
] (* test110.lgf:51.10-test110.lgf:51.11 *)
[ (* test110.lgf:51.12-test110.lgf:51.13 *)
(* CON_NAME *) RList (* test110.lgf:51.13-test110.lgf:51.18 *)
[ (* test110.lgf:51.19-test110.lgf:51.20 *)
(* TYVAR_NAME *) 'a (* test110.lgf:51.20-test110.lgf:51.22 *)
] (* test110.lgf:51.22-test110.lgf:51.23 *)
] (* test110.lgf:51.23-test110.lgf:51.24 *)
( (* test110.lgf:51.25-test110.lgf:51.26 *)
(* VAR_NAME *) rlistUncons (* test110.lgf:51.26-test110.lgf:51.37 *)
[ (* test110.lgf:51.38-test110.lgf:51.39 *)
(* TYVAR_NAME *) 'a (* test110.lgf:51.39-test110.lgf:51.41 *)
] (* test110.lgf:51.41-test110.lgf:51.42 *)
(* VAR_NAME *) l (* test110.lgf:51.43-test110.lgf:51.44 *)
) (* test110.lgf:51.44-test110.lgf:51.45 *)
fun (* test110.lgf:52.0-test110.lgf:52.3 *)
(* VAR_NAME *) rlistLookup (* test110.lgf:52.4-test110.lgf:52.15 *)
[ (* test110.lgf:52.16-test110.lgf:52.17 *)
(* TYVAR_NAME *) 'a (* test110.lgf:52.17-test110.lgf:52.19 *)
] (* test110.lgf:52.19-test110.lgf:52.20 *)
( (* test110.lgf:52.21-test110.lgf:52.22 *)
(* VAR_NAME *) i (* test110.lgf:52.22-test110.lgf:52.23 *)
: (* test110.lgf:52.23-test110.lgf:52.24 *)
(* CON_NAME *) Integer (* test110.lgf:52.25-test110.lgf:52.32 *)
) (* test110.lgf:52.32-test110.lgf:52.33 *)
( (* test110.lgf:52.34-test110.lgf:52.35 *)
(* VAR_NAME *) l (* test110.lgf:52.35-test110.lgf:52.36 *)
: (* test110.lgf:52.36-test110.lgf:52.37 *)
(* CON_NAME *) RList (* test110.lgf:52.38-test110.lgf:52.43 *)
[ (* test110.lgf:52.44-test110.lgf:52.45 *)
(* TYVAR_NAME *) 'a (* test110.lgf:52.45-test110.lgf:52.47 *)
] (* test110.lgf:52.47-test110.lgf:52.48 *)
) (* test110.lgf:52.48-test110.lgf:52.49 *)
: (* test110.lgf:52.50-test110.lgf:52.51 *)
(* TYVAR_NAME *) 'a (* test110.lgf:52.52-test110.lgf:52.54 *)
= (* test110.lgf:52.55-test110.lgf:52.56 *)
case (* test110.lgf:53.3-test110.lgf:53.7 *)
(* VAR_NAME *) l (* test110.lgf:53.8-test110.lgf:53.9 *)
of (* test110.lgf:53.10-test110.lgf:53.12 *)
(* CON_NAME *) RNil (* test110.lgf:54.6-test110.lgf:54.10 *)
[ (* test110.lgf:54.11-test110.lgf:54.12 *)
(* TYVAR_NAME *) 'a (* test110.lgf:54.12-test110.lgf:54.14 *)
] (* test110.lgf:54.14-test110.lgf:54.15 *)
=> (* test110.lgf:54.16-test110.lgf:54.18 *)
(* VAR_NAME *) fail (* test110.lgf:54.19-test110.lgf:54.23 *)
[ (* test110.lgf:54.24-test110.lgf:54.25 *)
(* TYVAR_NAME *) 'a (* test110.lgf:54.25-test110.lgf:54.27 *)
] (* test110.lgf:54.27-test110.lgf:54.28 *)
(* STRING *) "rlistLookup: RNil" (* test110.lgf:54.29-test110.lgf:54.48 *)
| (* test110.lgf:55.4-test110.lgf:55.5 *)
(* CON_NAME *) ROne (* test110.lgf:55.6-test110.lgf:55.10 *)
[ (* test110.lgf:55.11-test110.lgf:55.12 *)
(* TYVAR_NAME *) 'a (* test110.lgf:55.12-test110.lgf:55.14 *)
] (* test110.lgf:55.14-test110.lgf:55.15 *)
{ (* test110.lgf:55.16-test110.lgf:55.17 *)
(* VAR_NAME *) x (* test110.lgf:55.17-test110.lgf:55.18 *)
, (* test110.lgf:55.18-test110.lgf:55.19 *)
(* VAR_NAME *) ps (* test110.lgf:55.20-test110.lgf:55.22 *)
} (* test110.lgf:55.22-test110.lgf:55.23 *)
=> (* test110.lgf:55.24-test110.lgf:55.26 *)
if (* test110.lgf:56.9-test110.lgf:56.11 *)
(* VAR_NAME *) i (* test110.lgf:56.12-test110.lgf:56.13 *)
== (* test110.lgf:56.14-test110.lgf:56.16 *)
(* INTEGER *) 0 (* test110.lgf:56.17-test110.lgf:56.18 *)
then (* test110.lgf:56.19-test110.lgf:56.23 *)
(* VAR_NAME *) x (* test110.lgf:56.24-test110.lgf:56.25 *)
else (* test110.lgf:57.9-test110.lgf:57.13 *)
(* VAR_NAME *) rlistLookup (* test110.lgf:57.14-test110.lgf:57.25 *)
[ (* test110.lgf:57.26-test110.lgf:57.27 *)
(* TYVAR_NAME *) 'a (* test110.lgf:57.27-test110.lgf:57.29 *)
] (* test110.lgf:57.29-test110.lgf:57.30 *)
( (* test110.lgf:57.31-test110.lgf:57.32 *)
(* VAR_NAME *) i (* test110.lgf:57.32-test110.lgf:57.33 *)
- (* test110.lgf:57.34-test110.lgf:57.35 *)
(* INTEGER *) 1 (* test110.lgf:57.36-test110.lgf:57.37 *)
) (* test110.lgf:57.37-test110.lgf:57.38 *)
( (* test110.lgf:57.39-test110.lgf:57.40 *)
(* CON_NAME *) RZero (* test110.lgf:57.40-test110.lgf:57.45 *)
[ (* test110.lgf:57.46-test110.lgf:57.47 *)
(* TYVAR_NAME *) 'a (* test110.lgf:57.47-test110.lgf:57.49 *)
] (* test110.lgf:57.49-test110.lgf:57.50 *)
{ (* test110.lgf:57.51-test110.lgf:57.52 *)
(* VAR_NAME *) ps (* test110.lgf:57.52-test110.lgf:57.54 *)
} (* test110.lgf:57.54-test110.lgf:57.55 *)
) (* test110.lgf:57.55-test110.lgf:57.56 *)
| (* test110.lgf:58.4-test110.lgf:58.5 *)
(* CON_NAME *) RZero (* test110.lgf:58.6-test110.lgf:58.11 *)
[ (* test110.lgf:58.12-test110.lgf:58.13 *)
(* TYVAR_NAME *) 'a (* test110.lgf:58.13-test110.lgf:58.15 *)
] (* test110.lgf:58.15-test110.lgf:58.16 *)
{ (* test110.lgf:58.17-test110.lgf:58.18 *)
(* VAR_NAME *) ps (* test110.lgf:58.18-test110.lgf:58.20 *)
} (* test110.lgf:58.20-test110.lgf:58.21 *)
=> (* test110.lgf:58.22-test110.lgf:58.24 *)
let (* test110.lgf:59.9-test110.lgf:59.12 *)
val (* test110.lgf:59.13-test110.lgf:59.16 *)
(* VAR_NAME *) xy (* test110.lgf:59.17-test110.lgf:59.19 *)
= (* test110.lgf:59.20-test110.lgf:59.21 *)
(* VAR_NAME *) rlistLookup (* test110.lgf:59.22-test110.lgf:59.33 *)
[ (* test110.lgf:59.34-test110.lgf:59.35 *)
(* CON_NAME *) Pair (* test110.lgf:59.35-test110.lgf:59.39 *)
[ (* test110.lgf:59.40-test110.lgf:59.41 *)
(* TYVAR_NAME *) 'a (* test110.lgf:59.41-test110.lgf:59.43 *)
, (* test110.lgf:59.43-test110.lgf:59.44 *)
(* TYVAR_NAME *) 'a (* test110.lgf:59.45-test110.lgf:59.47 *)
] (* test110.lgf:59.47-test110.lgf:59.48 *)
] (* test110.lgf:59.48-test110.lgf:59.49 *)
( (* test110.lgf:59.50-test110.lgf:59.51 *)
(* VAR_NAME *) i (* test110.lgf:59.51-test110.lgf:59.52 *)
/ (* test110.lgf:59.53-test110.lgf:59.54 *)
(* INTEGER *) 2 (* test110.lgf:59.55-test110.lgf:59.56 *)
) (* test110.lgf:59.56-test110.lgf:59.57 *)
(* VAR_NAME *) ps (* test110.lgf:59.58-test110.lgf:59.60 *)
in (* test110.lgf:60.9-test110.lgf:60.11 *)
if (* test110.lgf:60.12-test110.lgf:60.14 *)
(* VAR_NAME *) i (* test110.lgf:60.15-test110.lgf:60.16 *)
% (* test110.lgf:60.17-test110.lgf:60.18 *)
(* INTEGER *) 2 (* test110.lgf:60.19-test110.lgf:60.20 *)
== (* test110.lgf:60.21-test110.lgf:60.23 *)
(* INTEGER *) 0 (* test110.lgf:60.24-test110.lgf:60.25 *)
then (* test110.lgf:60.26-test110.lgf:60.30 *)
(* VAR_NAME *) fst (* test110.lgf:60.31-test110.lgf:60.34 *)
[ (* test110.lgf:60.35-test110.lgf:60.36 *)
(* TYVAR_NAME *) 'a (* test110.lgf:60.36-test110.lgf:60.38 *)
] (* test110.lgf:60.38-test110.lgf:60.39 *)
[ (* test110.lgf:60.40-test110.lgf:60.41 *)
(* TYVAR_NAME *) 'a (* test110.lgf:60.41-test110.lgf:60.43 *)
] (* test110.lgf:60.43-test110.lgf:60.44 *)
(* VAR_NAME *) xy (* test110.lgf:60.45-test110.lgf:60.47 *)
else (* test110.lgf:60.48-test110.lgf:60.52 *)
(* VAR_NAME *) snd (* test110.lgf:60.53-test110.lgf:60.56 *)
[ (* test110.lgf:60.57-test110.lgf:60.58 *)
(* TYVAR_NAME *) 'a (* test110.lgf:60.58-test110.lgf:60.60 *)
] (* test110.lgf:60.60-test110.lgf:60.61 *)
[ (* test110.lgf:60.62-test110.lgf:60.63 *)
(* TYVAR_NAME *) 'a (* test110.lgf:60.63-test110.lgf:60.65 *)
] (* test110.lgf:60.65-test110.lgf:60.66 *)
(* VAR_NAME *) xy (* test110.lgf:60.67-test110.lgf:60.69 *)
end (* test110.lgf:61.9-test110.lgf:61.12 *)
end (* test110.lgf:62.3-test110.lgf:62.6 *)
fun (* test110.lgf:63.0-test110.lgf:63.3 *)
(* VAR_NAME *) rlistUpdateF (* test110.lgf:63.4-test110.lgf:63.16 *)
[ (* test110.lgf:63.17-test110.lgf:63.18 *)
(* TYVAR_NAME *) 'a (* test110.lgf:63.18-test110.lgf:63.20 *)
] (* test110.lgf:63.20-test110.lgf:63.21 *)
( (* test110.lgf:63.22-test110.lgf:63.23 *)
(* VAR_NAME *) i (* test110.lgf:63.23-test110.lgf:63.24 *)
: (* test110.lgf:63.24-test110.lgf:63.25 *)
(* CON_NAME *) Integer (* test110.lgf:63.26-test110.lgf:63.33 *)
) (* test110.lgf:63.33-test110.lgf:63.34 *)
( (* test110.lgf:63.35-test110.lgf:63.36 *)
(* VAR_NAME *) f (* test110.lgf:63.36-test110.lgf:63.37 *)
: (* test110.lgf:63.37-test110.lgf:63.38 *)
(* TYVAR_NAME *) 'a (* test110.lgf:63.39-test110.lgf:63.41 *)
-> (* test110.lgf:63.42-test110.lgf:63.44 *)
(* TYVAR_NAME *) 'a (* test110.lgf:63.45-test110.lgf:63.47 *)
) (* test110.lgf:63.47-test110.lgf:63.48 *)
( (* test110.lgf:63.49-test110.lgf:63.50 *)
(* VAR_NAME *) l (* test110.lgf:63.50-test110.lgf:63.51 *)
: (* test110.lgf:63.51-test110.lgf:63.52 *)
(* CON_NAME *) RList (* test110.lgf:63.53-test110.lgf:63.58 *)
[ (* test110.lgf:63.59-test110.lgf:63.60 *)
(* TYVAR_NAME *) 'a (* test110.lgf:63.60-test110.lgf:63.62 *)
] (* test110.lgf:63.62-test110.lgf:63.63 *)
) (* test110.lgf:63.63-test110.lgf:63.64 *)
: (* test110.lgf:63.65-test110.lgf:63.66 *)
(* CON_NAME *) RList (* test110.lgf:63.67-test110.lgf:63.72 *)
[ (* test110.lgf:63.73-test110.lgf:63.74 *)
(* TYVAR_NAME *) 'a (* test110.lgf:63.74-test110.lgf:63.76 *)
] (* test110.lgf:63.76-test110.lgf:63.77 *)
= (* test110.lgf:63.78-test110.lgf:63.79 *)
case (* test110.lgf:64.3-test110.lgf:64.7 *)
(* VAR_NAME *) l (* test110.lgf:64.8-test110.lgf:64.9 *)
of (* test110.lgf:64.10-test110.lgf:64.12 *)
(* CON_NAME *) RNil (* test110.lgf:65.6-test110.lgf:65.10 *)
[ (* test110.lgf:65.11-test110.lgf:65.12 *)
(* TYVAR_NAME *) 'a (* test110.lgf:65.12-test110.lgf:65.14 *)
] (* test110.lgf:65.14-test110.lgf:65.15 *)
=> (* test110.lgf:65.16-test110.lgf:65.18 *)
(* VAR_NAME *) fail (* test110.lgf:65.19-test110.lgf:65.23 *)
[ (* test110.lgf:65.24-test110.lgf:65.25 *)
(* CON_NAME *) RList (* test110.lgf:65.25-test110.lgf:65.30 *)
[ (* test110.lgf:65.31-test110.lgf:65.32 *)
(* TYVAR_NAME *) 'a (* test110.lgf:65.32-test110.lgf:65.34 *)
] (* test110.lgf:65.34-test110.lgf:65.35 *)
] (* test110.lgf:65.35-test110.lgf:65.36 *)
(* STRING *) "rlistUpdateF: RNil" (* test110.lgf:65.37-test110.lgf:65.57 *)
| (* test110.lgf:66.4-test110.lgf:66.5 *)
(* CON_NAME *) ROne (* test110.lgf:66.6-test110.lgf:66.10 *)
[ (* test110.lgf:66.11-test110.lgf:66.12 *)
(* TYVAR_NAME *) 'a (* test110.lgf:66.12-test110.lgf:66.14 *)
] (* test110.lgf:66.14-test110.lgf:66.15 *)
{ (* test110.lgf:66.16-test110.lgf:66.17 *)
(* VAR_NAME *) x (* test110.lgf:66.17-test110.lgf:66.18 *)
, (* test110.lgf:66.18-test110.lgf:66.19 *)
(* VAR_NAME *) ps (* test110.lgf:66.20-test110.lgf:66.22 *)
} (* test110.lgf:66.22-test110.lgf:66.23 *)
=> (* test110.lgf:66.24-test110.lgf:66.26 *)
if (* test110.lgf:67.9-test110.lgf:67.11 *)
(* VAR_NAME *) i (* test110.lgf:67.12-test110.lgf:67.13 *)
== (* test110.lgf:67.14-test110.lgf:67.16 *)
(* INTEGER *) 0 (* test110.lgf:67.17-test110.lgf:67.18 *)
then (* test110.lgf:67.19-test110.lgf:67.23 *)
(* CON_NAME *) ROne (* test110.lgf:67.24-test110.lgf:67.28 *)
[ (* test110.lgf:67.29-test110.lgf:67.30 *)
(* TYVAR_NAME *) 'a (* test110.lgf:67.30-test110.lgf:67.32 *)
] (* test110.lgf:67.32-test110.lgf:67.33 *)
{ (* test110.lgf:67.34-test110.lgf:67.35 *)
(* VAR_NAME *) f (* test110.lgf:67.35-test110.lgf:67.36 *)
(* VAR_NAME *) x (* test110.lgf:67.37-test110.lgf:67.38 *)
, (* test110.lgf:67.38-test110.lgf:67.39 *)
(* VAR_NAME *) ps (* test110.lgf:67.40-test110.lgf:67.42 *)
} (* test110.lgf:67.42-test110.lgf:67.43 *)
else (* test110.lgf:68.9-test110.lgf:68.13 *)
(* VAR_NAME *) rlistCons (* test110.lgf:68.14-test110.lgf:68.23 *)
[ (* test110.lgf:68.24-test110.lgf:68.25 *)
(* TYVAR_NAME *) 'a (* test110.lgf:68.25-test110.lgf:68.27 *)
] (* test110.lgf:68.27-test110.lgf:68.28 *)
(* VAR_NAME *) x (* test110.lgf:68.29-test110.lgf:68.30 *)
( (* test110.lgf:68.31-test110.lgf:68.32 *)
(* VAR_NAME *) rlistUpdateF (* test110.lgf:68.32-test110.lgf:68.44 *)
[ (* test110.lgf:68.45-test110.lgf:68.46 *)
(* TYVAR_NAME *) 'a (* test110.lgf:68.46-test110.lgf:68.48 *)
] (* test110.lgf:68.48-test110.lgf:68.49 *)
( (* test110.lgf:68.50-test110.lgf:68.51 *)
(* VAR_NAME *) i (* test110.lgf:68.51-test110.lgf:68.52 *)
- (* test110.lgf:68.53-test110.lgf:68.54 *)
(* INTEGER *) 1 (* test110.lgf:68.55-test110.lgf:68.56 *)
) (* test110.lgf:68.56-test110.lgf:68.57 *)
(* VAR_NAME *) f (* test110.lgf:68.58-test110.lgf:68.59 *)
( (* test110.lgf:68.60-test110.lgf:68.61 *)
(* CON_NAME *) RZero (* test110.lgf:68.61-test110.lgf:68.66 *)
[ (* test110.lgf:68.67-test110.lgf:68.68 *)
(* TYVAR_NAME *) 'a (* test110.lgf:68.68-test110.lgf:68.70 *)
] (* test110.lgf:68.70-test110.lgf:68.71 *)
{ (* test110.lgf:68.72-test110.lgf:68.73 *)
(* VAR_NAME *) ps (* test110.lgf:68.73-test110.lgf:68.75 *)
} (* test110.lgf:68.75-test110.lgf:68.76 *)
) (* test110.lgf:68.76-test110.lgf:68.77 *)
) (* test110.lgf:68.77-test110.lgf:68.78 *)
| (* test110.lgf:69.4-test110.lgf:69.5 *)
(* CON_NAME *) RZero (* test110.lgf:69.6-test110.lgf:69.11 *)
[ (* test110.lgf:69.12-test110.lgf:69.13 *)
(* TYVAR_NAME *) 'a (* test110.lgf:69.13-test110.lgf:69.15 *)
] (* test110.lgf:69.15-test110.lgf:69.16 *)
{ (* test110.lgf:69.17-test110.lgf:69.18 *)
(* VAR_NAME *) ps (* test110.lgf:69.18-test110.lgf:69.20 *)
} (* test110.lgf:69.20-test110.lgf:69.21 *)
=> (* test110.lgf:69.22-test110.lgf:69.24 *)
let (* test110.lgf:70.9-test110.lgf:70.12 *)
val (* test110.lgf:71.12-test110.lgf:71.15 *)
(* VAR_NAME *) f' (* test110.lgf:71.16-test110.lgf:71.18 *)
= (* test110.lgf:71.19-test110.lgf:71.20 *)
fn (* test110.lgf:71.21-test110.lgf:71.23 *)
( (* test110.lgf:71.24-test110.lgf:71.25 *)
(* VAR_NAME *) xy (* test110.lgf:71.25-test110.lgf:71.27 *)
: (* test110.lgf:71.27-test110.lgf:71.28 *)
(* CON_NAME *) Pair (* test110.lgf:71.29-test110.lgf:71.33 *)
[ (* test110.lgf:71.34-test110.lgf:71.35 *)
(* TYVAR_NAME *) 'a (* test110.lgf:71.35-test110.lgf:71.37 *)
, (* test110.lgf:71.37-test110.lgf:71.38 *)
(* TYVAR_NAME *) 'a (* test110.lgf:71.39-test110.lgf:71.41 *)
] (* test110.lgf:71.41-test110.lgf:71.42 *)
) (* test110.lgf:71.42-test110.lgf:71.43 *)
=> (* test110.lgf:71.44-test110.lgf:71.46 *)
let (* test110.lgf:72.15-test110.lgf:72.18 *)
val (* test110.lgf:73.18-test110.lgf:73.21 *)
(* VAR_NAME *) x (* test110.lgf:73.22-test110.lgf:73.23 *)
= (* test110.lgf:73.24-test110.lgf:73.25 *)
(* VAR_NAME *) fst (* test110.lgf:73.26-test110.lgf:73.29 *)
[ (* test110.lgf:73.30-test110.lgf:73.31 *)
(* TYVAR_NAME *) 'a (* test110.lgf:73.31-test110.lgf:73.33 *)
] (* test110.lgf:73.33-test110.lgf:73.34 *)
[ (* test110.lgf:73.35-test110.lgf:73.36 *)
(* TYVAR_NAME *) 'a (* test110.lgf:73.36-test110.lgf:73.38 *)
] (* test110.lgf:73.38-test110.lgf:73.39 *)
(* VAR_NAME *) xy (* test110.lgf:73.40-test110.lgf:73.42 *)
val (* test110.lgf:74.18-test110.lgf:74.21 *)
(* VAR_NAME *) y (* test110.lgf:74.22-test110.lgf:74.23 *)
= (* test110.lgf:74.24-test110.lgf:74.25 *)
(* VAR_NAME *) snd (* test110.lgf:74.26-test110.lgf:74.29 *)
[ (* test110.lgf:74.30-test110.lgf:74.31 *)
(* TYVAR_NAME *) 'a (* test110.lgf:74.31-test110.lgf:74.33 *)
] (* test110.lgf:74.33-test110.lgf:74.34 *)
[ (* test110.lgf:74.35-test110.lgf:74.36 *)
(* TYVAR_NAME *) 'a (* test110.lgf:74.36-test110.lgf:74.38 *)
] (* test110.lgf:74.38-test110.lgf:74.39 *)
(* VAR_NAME *) xy (* test110.lgf:74.40-test110.lgf:74.42 *)
in (* test110.lgf:75.15-test110.lgf:75.17 *)
if (* test110.lgf:76.18-test110.lgf:76.20 *)
(* VAR_NAME *) i (* test110.lgf:76.21-test110.lgf:76.22 *)
% (* test110.lgf:76.23-test110.lgf:76.24 *)
(* INTEGER *) 2 (* test110.lgf:76.25-test110.lgf:76.26 *)
== (* test110.lgf:76.27-test110.lgf:76.29 *)
(* INTEGER *) 0 (* test110.lgf:76.30-test110.lgf:76.31 *)
then (* test110.lgf:77.21-test110.lgf:77.25 *)
(* VAR_NAME *) pair (* test110.lgf:77.26-test110.lgf:77.30 *)
[ (* test110.lgf:77.31-test110.lgf:77.32 *)
(* TYVAR_NAME *) 'a (* test110.lgf:77.32-test110.lgf:77.34 *)
] (* test110.lgf:77.34-test110.lgf:77.35 *)
[ (* test110.lgf:77.36-test110.lgf:77.37 *)
(* TYVAR_NAME *) 'a (* test110.lgf:77.37-test110.lgf:77.39 *)
] (* test110.lgf:77.39-test110.lgf:77.40 *)
( (* test110.lgf:77.41-test110.lgf:77.42 *)
(* VAR_NAME *) f (* test110.lgf:77.42-test110.lgf:77.43 *)
(* VAR_NAME *) x (* test110.lgf:77.44-test110.lgf:77.45 *)
) (* test110.lgf:77.45-test110.lgf:77.46 *)
(* VAR_NAME *) y (* test110.lgf:77.47-test110.lgf:77.48 *)
else (* test110.lgf:78.21-test110.lgf:78.25 *)
(* VAR_NAME *) pair (* test110.lgf:78.26-test110.lgf:78.30 *)
[ (* test110.lgf:78.31-test110.lgf:78.32 *)
(* TYVAR_NAME *) 'a (* test110.lgf:78.32-test110.lgf:78.34 *)
] (* test110.lgf:78.34-test110.lgf:78.35 *)
[ (* test110.lgf:78.36-test110.lgf:78.37 *)
(* TYVAR_NAME *) 'a (* test110.lgf:78.37-test110.lgf:78.39 *)
] (* test110.lgf:78.39-test110.lgf:78.40 *)
(* VAR_NAME *) x (* test110.lgf:78.41-test110.lgf:78.42 *)
( (* test110.lgf:78.43-test110.lgf:78.44 *)
(* VAR_NAME *) f (* test110.lgf:78.44-test110.lgf:78.45 *)
(* VAR_NAME *) y (* test110.lgf:78.46-test110.lgf:78.47 *)
) (* test110.lgf:78.47-test110.lgf:78.48 *)
end (* test110.lgf:79.15-test110.lgf:79.18 *)
in (* test110.lgf:80.9-test110.lgf:80.11 *)
(* CON_NAME *) RZero (* test110.lgf:81.12-test110.lgf:81.17 *)
[ (* test110.lgf:81.18-test110.lgf:81.19 *)
(* TYVAR_NAME *) 'a (* test110.lgf:81.19-test110.lgf:81.21 *)
] (* test110.lgf:81.21-test110.lgf:81.22 *)
{ (* test110.lgf:81.23-test110.lgf:81.24 *)
(* VAR_NAME *) rlistUpdateF (* test110.lgf:81.24-test110.lgf:81.36 *)
[ (* test110.lgf:81.37-test110.lgf:81.38 *)
(* CON_NAME *) Pair (* test110.lgf:81.38-test110.lgf:81.42 *)
[ (* test110.lgf:81.43-test110.lgf:81.44 *)
(* TYVAR_NAME *) 'a (* test110.lgf:81.44-test110.lgf:81.46 *)
, (* test110.lgf:81.46-test110.lgf:81.47 *)
(* TYVAR_NAME *) 'a (* test110.lgf:81.48-test110.lgf:81.50 *)
] (* test110.lgf:81.50-test110.lgf:81.51 *)
] (* test110.lgf:81.51-test110.lgf:81.52 *)
( (* test110.lgf:81.53-test110.lgf:81.54 *)
(* VAR_NAME *) i (* test110.lgf:81.54-test110.lgf:81.55 *)
/ (* test110.lgf:81.56-test110.lgf:81.57 *)
(* INTEGER *) 2 (* test110.lgf:81.58-test110.lgf:81.59 *)
) (* test110.lgf:81.59-test110.lgf:81.60 *)
(* VAR_NAME *) f' (* test110.lgf:81.61-test110.lgf:81.63 *)
(* VAR_NAME *) ps (* test110.lgf:81.64-test110.lgf:81.66 *)
} (* test110.lgf:81.66-test110.lgf:81.67 *)
end (* test110.lgf:82.9-test110.lgf:82.12 *)
end (* test110.lgf:83.3-test110.lgf:83.6 *)
val (* test110.lgf:84.0-test110.lgf:84.3 *)
(* VAR_NAME *) rlistUpdate (* test110.lgf:84.4-test110.lgf:84.15 *)
= (* test110.lgf:84.16-test110.lgf:84.17 *)
fn (* test110.lgf:84.18-test110.lgf:84.20 *)
[ (* test110.lgf:84.21-test110.lgf:84.22 *)
(* TYVAR_NAME *) 'a (* test110.lgf:84.22-test110.lgf:84.24 *)
] (* test110.lgf:84.24-test110.lgf:84.25 *)
( (* test110.lgf:84.26-test110.lgf:84.27 *)
(* VAR_NAME *) i (* test110.lgf:84.27-test110.lgf:84.28 *)
: (* test110.lgf:84.28-test110.lgf:84.29 *)
(* CON_NAME *) Integer (* test110.lgf:84.30-test110.lgf:84.37 *)
) (* test110.lgf:84.37-test110.lgf:84.38 *)
( (* test110.lgf:84.39-test110.lgf:84.40 *)
(* VAR_NAME *) y (* test110.lgf:84.40-test110.lgf:84.41 *)
: (* test110.lgf:84.41-test110.lgf:84.42 *)
(* TYVAR_NAME *) 'a (* test110.lgf:84.43-test110.lgf:84.45 *)
) (* test110.lgf:84.45-test110.lgf:84.46 *)
( (* test110.lgf:84.47-test110.lgf:84.48 *)
(* VAR_NAME *) l (* test110.lgf:84.48-test110.lgf:84.49 *)
: (* test110.lgf:84.49-test110.lgf:84.50 *)
(* CON_NAME *) RList (* test110.lgf:84.51-test110.lgf:84.56 *)
[ (* test110.lgf:84.57-test110.lgf:84.58 *)
(* TYVAR_NAME *) 'a (* test110.lgf:84.58-test110.lgf:84.60 *)
] (* test110.lgf:84.60-test110.lgf:84.61 *)
) (* test110.lgf:84.61-test110.lgf:84.62 *)
=> (* test110.lgf:84.63-test110.lgf:84.65 *)
(* VAR_NAME *) rlistUpdateF (* test110.lgf:85.3-test110.lgf:85.15 *)
[ (* test110.lgf:85.16-test110.lgf:85.17 *)
(* TYVAR_NAME *) 'a (* test110.lgf:85.17-test110.lgf:85.19 *)
] (* test110.lgf:85.19-test110.lgf:85.20 *)
(* VAR_NAME *) i (* test110.lgf:85.21-test110.lgf:85.22 *)
( (* test110.lgf:85.23-test110.lgf:85.24 *)
fn (* test110.lgf:85.24-test110.lgf:85.26 *)
( (* test110.lgf:85.27-test110.lgf:85.28 *)
(* VAR_NAME *) x (* test110.lgf:85.28-test110.lgf:85.29 *)
: (* test110.lgf:85.29-test110.lgf:85.30 *)
(* TYVAR_NAME *) 'a (* test110.lgf:85.30-test110.lgf:85.32 *)
) (* test110.lgf:85.32-test110.lgf:85.33 *)
=> (* test110.lgf:85.34-test110.lgf:85.36 *)
(* VAR_NAME *) y (* test110.lgf:85.37-test110.lgf:85.38 *)
) (* test110.lgf:85.38-test110.lgf:85.39 *)
(* VAR_NAME *) l (* test110.lgf:85.40-test110.lgf:85.41 *)
; (* test110.lgf:87.0-test110.lgf:87.1 *)
(* CON_NAME *) RNil (* test110.lgf:89.0-test110.lgf:89.4 *)
[ (* test110.lgf:89.5-test110.lgf:89.6 *)
(* CON_NAME *) Integer (* test110.lgf:89.6-test110.lgf:89.13 *)
] (* test110.lgf:89.13-test110.lgf:89.14 *)
